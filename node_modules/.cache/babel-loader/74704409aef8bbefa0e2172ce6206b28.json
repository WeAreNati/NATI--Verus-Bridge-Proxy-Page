{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport { useToast } from 'components/Toast/ToastProvider';\nimport { injectedConnector } from '../connectors/injectedConnector';\nconst useInactiveListener = (suppress = false) => {\n  _s();\n  const {\n    active,\n    error,\n    activate\n  } = useWeb3React();\n  const {\n    addToast\n  } = useToast();\n\n  // eslint-disable-next-line consistent-return\n  useEffect(() => {\n    const {\n      ethereum\n    } = window;\n    if (ethereum && ethereum.on && !active && !error && !suppress) {\n      const handleConnect = () => {\n        addToast({\n          type: 'info',\n          description: 'connected to wallet'\n        });\n        activate(injectedConnector);\n      };\n      const handleChainChanged = chainId => {\n        // eslint-disable-next-line no-console\n        console.log(\"Handling 'chainChanged' event with payload\", chainId);\n        addToast({\n          type: 'info',\n          description: 'Chain changed!'\n        });\n        activate(injectedConnector);\n      };\n      const handleAccountsChanged = accounts => {\n        // eslint-disable-next-line no-console\n        console.log(\"Handling 'accountsChanged' event with payload\", accounts);\n        addToast({\n          type: 'info',\n          description: 'Account changed!'\n        });\n        if (accounts.length > 0) {\n          activate(injectedConnector);\n        }\n      };\n      const handleNetworkChanged = networkId => {\n        // eslint-disable-next-line no-console\n        console.log(\"Handling 'networkChanged' event with payload\", networkId);\n        addToast({\n          type: 'info',\n          description: 'Chain changed!'\n        });\n        activate(injectedConnector);\n      };\n      ethereum.on('connect', handleConnect);\n      ethereum.on('chainChanged', handleChainChanged);\n      ethereum.on('accountsChanged', handleAccountsChanged);\n      ethereum.on('networkChanged', handleNetworkChanged);\n      return () => {\n        if (ethereum.removeListener) {\n          ethereum.removeListener('connect', handleConnect);\n          ethereum.removeListener('chainChanged', handleChainChanged);\n          ethereum.removeListener('accountsChanged', handleAccountsChanged);\n          ethereum.removeListener('networkChanged', handleNetworkChanged);\n        }\n      };\n    }\n  }, [active, error, suppress, activate]);\n  return null;\n};\n_s(useInactiveListener, \"KaRReXeglwXu6p6rxP73Aiu/8Ss=\", false, function () {\n  return [useWeb3React, useToast];\n});\nexport default useInactiveListener;","map":{"version":3,"names":["useEffect","useWeb3React","useToast","injectedConnector","useInactiveListener","suppress","_s","active","error","activate","addToast","ethereum","window","on","handleConnect","type","description","handleChainChanged","chainId","console","log","handleAccountsChanged","accounts","length","handleNetworkChanged","networkId","removeListener"],"sources":["/Users/oddfl3x/Code/varB/NATIBridgeWebsite-main/src/hooks/useInactiveListener.js"],"sourcesContent":["import { useEffect } from 'react';\n\nimport { useWeb3React } from '@web3-react/core';\n\nimport { useToast } from 'components/Toast/ToastProvider';\n\nimport { injectedConnector } from '../connectors/injectedConnector';\n\nconst useInactiveListener = (suppress = false) => {\n  const { active, error, activate } = useWeb3React();\n  const { addToast } = useToast();\n\n  // eslint-disable-next-line consistent-return\n  useEffect(() => {\n    const { ethereum } = window;\n    if (ethereum && ethereum.on && !active && !error && !suppress) {\n      const handleConnect = () => {\n        addToast({ type: 'info', description: 'connected to wallet'});\n        activate(injectedConnector);\n      };\n      const handleChainChanged = (chainId) => {\n        // eslint-disable-next-line no-console\n        console.log(\"Handling 'chainChanged' event with payload\", chainId);\n        addToast({ type: 'info', description: 'Chain changed!'})\n        activate(injectedConnector);\n      };\n      const handleAccountsChanged = (accounts) => {\n        // eslint-disable-next-line no-console\n        console.log(\"Handling 'accountsChanged' event with payload\", accounts);\n        addToast({ type: 'info', description: 'Account changed!'})\n        if (accounts.length > 0) {\n          activate(injectedConnector);\n        }\n      };\n      const handleNetworkChanged = (networkId) => {\n        // eslint-disable-next-line no-console\n        console.log(\"Handling 'networkChanged' event with payload\", networkId);\n        addToast({ type: 'info', description: 'Chain changed!'})\n        activate(injectedConnector);\n      };\n\n      ethereum.on('connect', handleConnect);\n      ethereum.on('chainChanged', handleChainChanged);\n      ethereum.on('accountsChanged', handleAccountsChanged);\n      ethereum.on('networkChanged', handleNetworkChanged);\n\n      return () => {\n        if (ethereum.removeListener) {\n          ethereum.removeListener('connect', handleConnect);\n          ethereum.removeListener('chainChanged', handleChainChanged);\n          ethereum.removeListener('accountsChanged', handleAccountsChanged);\n          ethereum.removeListener('networkChanged', handleNetworkChanged);\n        }\n      };\n    }\n  }, [active, error, suppress, activate]);\n\n  return null;\n};\n\nexport default useInactiveListener;\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AAEjC,SAASC,YAAY,QAAQ,kBAAkB;AAE/C,SAASC,QAAQ,QAAQ,gCAAgC;AAEzD,SAASC,iBAAiB,QAAQ,iCAAiC;AAEnE,MAAMC,mBAAmB,GAAGA,CAACC,QAAQ,GAAG,KAAK,KAAK;EAAAC,EAAA;EAChD,MAAM;IAAEC,MAAM;IAAEC,KAAK;IAAEC;EAAS,CAAC,GAAGR,YAAY,CAAC,CAAC;EAClD,MAAM;IAAES;EAAS,CAAC,GAAGR,QAAQ,CAAC,CAAC;;EAE/B;EACAF,SAAS,CAAC,MAAM;IACd,MAAM;MAAEW;IAAS,CAAC,GAAGC,MAAM;IAC3B,IAAID,QAAQ,IAAIA,QAAQ,CAACE,EAAE,IAAI,CAACN,MAAM,IAAI,CAACC,KAAK,IAAI,CAACH,QAAQ,EAAE;MAC7D,MAAMS,aAAa,GAAGA,CAAA,KAAM;QAC1BJ,QAAQ,CAAC;UAAEK,IAAI,EAAE,MAAM;UAAEC,WAAW,EAAE;QAAqB,CAAC,CAAC;QAC7DP,QAAQ,CAACN,iBAAiB,CAAC;MAC7B,CAAC;MACD,MAAMc,kBAAkB,GAAIC,OAAO,IAAK;QACtC;QACAC,OAAO,CAACC,GAAG,CAAC,4CAA4C,EAAEF,OAAO,CAAC;QAClER,QAAQ,CAAC;UAAEK,IAAI,EAAE,MAAM;UAAEC,WAAW,EAAE;QAAgB,CAAC,CAAC;QACxDP,QAAQ,CAACN,iBAAiB,CAAC;MAC7B,CAAC;MACD,MAAMkB,qBAAqB,GAAIC,QAAQ,IAAK;QAC1C;QACAH,OAAO,CAACC,GAAG,CAAC,+CAA+C,EAAEE,QAAQ,CAAC;QACtEZ,QAAQ,CAAC;UAAEK,IAAI,EAAE,MAAM;UAAEC,WAAW,EAAE;QAAkB,CAAC,CAAC;QAC1D,IAAIM,QAAQ,CAACC,MAAM,GAAG,CAAC,EAAE;UACvBd,QAAQ,CAACN,iBAAiB,CAAC;QAC7B;MACF,CAAC;MACD,MAAMqB,oBAAoB,GAAIC,SAAS,IAAK;QAC1C;QACAN,OAAO,CAACC,GAAG,CAAC,8CAA8C,EAAEK,SAAS,CAAC;QACtEf,QAAQ,CAAC;UAAEK,IAAI,EAAE,MAAM;UAAEC,WAAW,EAAE;QAAgB,CAAC,CAAC;QACxDP,QAAQ,CAACN,iBAAiB,CAAC;MAC7B,CAAC;MAEDQ,QAAQ,CAACE,EAAE,CAAC,SAAS,EAAEC,aAAa,CAAC;MACrCH,QAAQ,CAACE,EAAE,CAAC,cAAc,EAAEI,kBAAkB,CAAC;MAC/CN,QAAQ,CAACE,EAAE,CAAC,iBAAiB,EAAEQ,qBAAqB,CAAC;MACrDV,QAAQ,CAACE,EAAE,CAAC,gBAAgB,EAAEW,oBAAoB,CAAC;MAEnD,OAAO,MAAM;QACX,IAAIb,QAAQ,CAACe,cAAc,EAAE;UAC3Bf,QAAQ,CAACe,cAAc,CAAC,SAAS,EAAEZ,aAAa,CAAC;UACjDH,QAAQ,CAACe,cAAc,CAAC,cAAc,EAAET,kBAAkB,CAAC;UAC3DN,QAAQ,CAACe,cAAc,CAAC,iBAAiB,EAAEL,qBAAqB,CAAC;UACjEV,QAAQ,CAACe,cAAc,CAAC,gBAAgB,EAAEF,oBAAoB,CAAC;QACjE;MACF,CAAC;IACH;EACF,CAAC,EAAE,CAACjB,MAAM,EAAEC,KAAK,EAAEH,QAAQ,EAAEI,QAAQ,CAAC,CAAC;EAEvC,OAAO,IAAI;AACb,CAAC;AAACH,EAAA,CAlDIF,mBAAmB;EAAA,QACaH,YAAY,EAC3BC,QAAQ;AAAA;AAkD/B,eAAeE,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module"}