{"ast":null,"code":"import{useEffect,useState}from'react';import{useWeb3React}from'@web3-react/core';import{injectedConnector}from'../connectors/injectedConnector';const useEagerConnect=()=>{const{activate,active}=useWeb3React();const[tried,setTried]=useState(false);useEffect(()=>{injectedConnector.isAuthorized().then(isAuthorized=>{if(isAuthorized){activate(injectedConnector,undefined,true).catch(()=>{setTried(true);});}else{setTried(true);}});},[activate]);// intentionally only running on mount (make sure it's only mounted once :))\n// if the connection worked, wait until we get confirmation of that to flip the flag\nuseEffect(()=>{if(!tried&&active){setTried(true);}},[tried,active]);return tried;};export default useEagerConnect;","map":{"version":3,"names":["useEffect","useState","useWeb3React","injectedConnector","useEagerConnect","activate","active","tried","setTried","isAuthorized","then","undefined","catch"],"sources":["/Users/oddfl3x/Code/varB/vARRRBridgeWebsite-main/src/hooks/useEagerConnect.js"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nimport { useWeb3React } from '@web3-react/core';\n\nimport { injectedConnector } from '../connectors/injectedConnector';\n\nconst useEagerConnect = () => {\n  const { activate, active } = useWeb3React();\n\n  const [tried, setTried] = useState(false);\n\n  useEffect(() => {\n    injectedConnector.isAuthorized().then((isAuthorized) => {\n      if (isAuthorized) {\n        activate(injectedConnector, undefined, true).catch(() => {\n          setTried(true);\n        });\n      } else {\n        setTried(true);\n      }\n    });\n  }, [activate]); // intentionally only running on mount (make sure it's only mounted once :))\n\n  // if the connection worked, wait until we get confirmation of that to flip the flag\n  useEffect(() => {\n    if (!tried && active) {\n      setTried(true);\n    }\n  }, [tried, active]);\n\n  return tried;\n};\n\nexport default useEagerConnect;\n"],"mappings":"AAAA,OAASA,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAE3C,OAASC,YAAY,KAAQ,kBAAkB,CAE/C,OAASC,iBAAiB,KAAQ,iCAAiC,CAEnE,KAAM,CAAAC,eAAe,CAAGA,CAAA,GAAM,CAC5B,KAAM,CAAEC,QAAQ,CAAEC,MAAO,CAAC,CAAGJ,YAAY,CAAC,CAAC,CAE3C,KAAM,CAACK,KAAK,CAAEC,QAAQ,CAAC,CAAGP,QAAQ,CAAC,KAAK,CAAC,CAEzCD,SAAS,CAAC,IAAM,CACdG,iBAAiB,CAACM,YAAY,CAAC,CAAC,CAACC,IAAI,CAAED,YAAY,EAAK,CACtD,GAAIA,YAAY,CAAE,CAChBJ,QAAQ,CAACF,iBAAiB,CAAEQ,SAAS,CAAE,IAAI,CAAC,CAACC,KAAK,CAAC,IAAM,CACvDJ,QAAQ,CAAC,IAAI,CAAC,CAChB,CAAC,CAAC,CACJ,CAAC,IAAM,CACLA,QAAQ,CAAC,IAAI,CAAC,CAChB,CACF,CAAC,CAAC,CACJ,CAAC,CAAE,CAACH,QAAQ,CAAC,CAAC,CAAE;AAEhB;AACAL,SAAS,CAAC,IAAM,CACd,GAAI,CAACO,KAAK,EAAID,MAAM,CAAE,CACpBE,QAAQ,CAAC,IAAI,CAAC,CAChB,CACF,CAAC,CAAE,CAACD,KAAK,CAAED,MAAM,CAAC,CAAC,CAEnB,MAAO,CAAAC,KAAK,CACd,CAAC,CAED,cAAe,CAAAH,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module"}