{"ast":null,"code":"var _jsxFileName = \"/Users/oddfl3x/Code/varB/vARRRBridgeWebsite-main/src/components/ARRRForm/AmountField.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport ERC20_ABI from 'abis/ERC20Abi.json';\nimport InputControlField from 'components/InputControlField';\nimport { GLOBAL_ADDRESS } from 'constants/contractAddress';\nimport { getMaxAmount, getContract } from 'utils/contract';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AmountField = ({\n  control,\n  destination\n}) => {\n  _s();\n  const {\n    account,\n    library\n  } = useWeb3React();\n  const validate = async amount => {\n    if (amount <= 0) {\n      return 'Amount is not valid.';\n    }\n    let ERC20ADDRESS;\n    if (destination !== \"mARRR\") {\n      ERC20ADDRESS = GLOBAL_ADDRESS.MARRR;\n    } else {\n      ERC20ADDRESS = GLOBAL_ADDRESS.VARRR;\n    }\n    const tokenInstContract = getContract(ERC20ADDRESS, ERC20_ABI, library, account);\n    const maxAmount = await getMaxAmount(tokenInstContract, account);\n    if (maxAmount < amount) {\n      return `Amount is not available in your wallet. ${maxAmount} ${destination === \"mARRR\" ? \"vARRR\" : \"mARRR\"}`;\n    }\n    return true;\n  };\n  return /*#__PURE__*/_jsxDEV(InputControlField, {\n    name: \"amount\",\n    label: `Amount of ${destination === \"NATI\" ? \"vARRR\" : \"NATI\"} to swap to ${destination}`,\n    fullWidth: true,\n    variant: \"standard\",\n    control: control,\n    type: \"tel\",\n    defaultValue: \"0\",\n    min: 0,\n    rules: {\n      required: 'Amount is required',\n      validate\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(AmountField, \"6dLocauXcIHyjmjhz+sx44iYIew=\", false, function () {\n  return [useWeb3React];\n});\n_c = AmountField;\nexport default AmountField;\nvar _c;\n$RefreshReg$(_c, \"AmountField\");","map":{"version":3,"names":["React","useWeb3React","ERC20_ABI","InputControlField","GLOBAL_ADDRESS","getMaxAmount","getContract","jsxDEV","_jsxDEV","AmountField","control","destination","_s","account","library","validate","amount","ERC20ADDRESS","MARRR","VARRR","tokenInstContract","maxAmount","name","label","fullWidth","variant","type","defaultValue","min","rules","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/oddfl3x/Code/varB/vARRRBridgeWebsite-main/src/components/ARRRForm/AmountField.jsx"],"sourcesContent":["import React from 'react'\n\nimport { useWeb3React } from '@web3-react/core';\n\nimport ERC20_ABI from 'abis/ERC20Abi.json';\nimport InputControlField from 'components/InputControlField'\nimport { GLOBAL_ADDRESS } from 'constants/contractAddress';\nimport { getMaxAmount, getContract } from 'utils/contract';\n\nconst AmountField = ({ control, destination }) => {\n\n  const { account, library } = useWeb3React();\n\n  const validate = async (amount) => {\n\n    if (amount <= 0) {\n      return 'Amount is not valid.'\n    }\n    let ERC20ADDRESS;\n\n    if (destination !== \"mARRR\") {\n      ERC20ADDRESS = GLOBAL_ADDRESS.MARRR\n    } else {\n      ERC20ADDRESS = GLOBAL_ADDRESS.VARRR\n    }\n    const tokenInstContract = getContract(ERC20ADDRESS, ERC20_ABI, library, account)\n    const maxAmount = await getMaxAmount(tokenInstContract, account);\n    if (maxAmount < amount) {\n      return `Amount is not available in your wallet. ${maxAmount} ${destination === \"mARRR\" ? \"vARRR\" : \"mARRR\"}`\n    }\n\n    return true;\n  }\n  return (\n    <InputControlField\n      name=\"amount\"\n      label={`Amount of ${destination === \"NATI\" ? \"vARRR\" : \"NATI\"} to swap to ${destination}`}\n      fullWidth\n      variant=\"standard\"\n      control={control}\n      type=\"tel\"\n      defaultValue=\"0\"\n      min={0}\n      rules={{\n        required: 'Amount is required',\n        validate\n      }}\n    />\n  )\n}\n\nexport default AmountField\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,YAAY,QAAQ,kBAAkB;AAE/C,OAAOC,SAAS,MAAM,oBAAoB;AAC1C,OAAOC,iBAAiB,MAAM,8BAA8B;AAC5D,SAASC,cAAc,QAAQ,2BAA2B;AAC1D,SAASC,YAAY,EAAEC,WAAW,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,WAAW,GAAGA,CAAC;EAAEC,OAAO;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EAEhD,MAAM;IAAEC,OAAO;IAAEC;EAAQ,CAAC,GAAGb,YAAY,CAAC,CAAC;EAE3C,MAAMc,QAAQ,GAAG,MAAOC,MAAM,IAAK;IAEjC,IAAIA,MAAM,IAAI,CAAC,EAAE;MACf,OAAO,sBAAsB;IAC/B;IACA,IAAIC,YAAY;IAEhB,IAAIN,WAAW,KAAK,OAAO,EAAE;MAC3BM,YAAY,GAAGb,cAAc,CAACc,KAAK;IACrC,CAAC,MAAM;MACLD,YAAY,GAAGb,cAAc,CAACe,KAAK;IACrC;IACA,MAAMC,iBAAiB,GAAGd,WAAW,CAACW,YAAY,EAAEf,SAAS,EAAEY,OAAO,EAAED,OAAO,CAAC;IAChF,MAAMQ,SAAS,GAAG,MAAMhB,YAAY,CAACe,iBAAiB,EAAEP,OAAO,CAAC;IAChE,IAAIQ,SAAS,GAAGL,MAAM,EAAE;MACtB,OAAO,2CAA2CK,SAAS,IAAIV,WAAW,KAAK,OAAO,GAAG,OAAO,GAAG,OAAO,EAAE;IAC9G;IAEA,OAAO,IAAI;EACb,CAAC;EACD,oBACEH,OAAA,CAACL,iBAAiB;IAChBmB,IAAI,EAAC,QAAQ;IACbC,KAAK,EAAE,aAAaZ,WAAW,KAAK,MAAM,GAAG,OAAO,GAAG,MAAM,eAAeA,WAAW,EAAG;IAC1Fa,SAAS;IACTC,OAAO,EAAC,UAAU;IAClBf,OAAO,EAAEA,OAAQ;IACjBgB,IAAI,EAAC,KAAK;IACVC,YAAY,EAAC,GAAG;IAChBC,GAAG,EAAE,CAAE;IACPC,KAAK,EAAE;MACLC,QAAQ,EAAE,oBAAoB;MAC9Bf;IACF;EAAE;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEN,CAAC;AAAAtB,EAAA,CAxCKH,WAAW;EAAA,QAEcR,YAAY;AAAA;AAAAkC,EAAA,GAFrC1B,WAAW;AA0CjB,eAAeA,WAAW;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}