{"ast":null,"code":"var bip66 = require('bip66');\nvar typeforce = require('typeforce');\nvar types = require('./types');\nvar BigInteger = require('bigi');\nfunction ECSignature(r, s) {\n  typeforce(types.tuple(types.BigInt, types.BigInt), arguments);\n  this.r = r;\n  this.s = s;\n}\nECSignature.parseCompact = function (buffer) {\n  typeforce(types.BufferN(65), buffer);\n  var flagByte = buffer.readUInt8(0) - 27;\n  if (flagByte !== (flagByte & 7)) throw new Error('Invalid signature parameter');\n  var compressed = !!(flagByte & 4);\n  var recoveryParam = flagByte & 3;\n  var signature = ECSignature.fromRSBuffer(buffer.slice(1));\n  return {\n    compressed: compressed,\n    i: recoveryParam,\n    signature: signature\n  };\n};\nECSignature.fromRSBuffer = function (buffer) {\n  typeforce(types.BufferN(64), buffer);\n  var r = BigInteger.fromBuffer(buffer.slice(0, 32));\n  var s = BigInteger.fromBuffer(buffer.slice(32, 64));\n  return new ECSignature(r, s);\n};\nECSignature.fromDER = function (buffer) {\n  var decode = bip66.decode(buffer);\n  var r = BigInteger.fromDERInteger(decode.r);\n  var s = BigInteger.fromDERInteger(decode.s);\n  return new ECSignature(r, s);\n};\n// BIP62: 1 byte hashType flag (only 0x01, 0x02, 0x03, 0x81, 0x82 and 0x83 are allowed)\nECSignature.parseScriptSignature = function (buffer) {\n  var hashType = buffer.readUInt8(buffer.length - 1);\n  var hashTypeMod = hashType & ~0xc0;\n  if (hashTypeMod <= 0x00 || hashTypeMod >= 0x04) throw new Error('Invalid hashType ' + hashType);\n  return {\n    signature: ECSignature.fromDER(buffer.slice(0, -1)),\n    hashType: hashType\n  };\n};\nECSignature.prototype.toCompact = function (i, compressed) {\n  if (compressed) {\n    i += 4;\n  }\n  i += 27;\n  var buffer = Buffer.alloc(65);\n  buffer.writeUInt8(i, 0);\n  this.toRSBuffer(buffer, 1);\n  return buffer;\n};\nECSignature.prototype.toDER = function () {\n  var r = Buffer.from(this.r.toDERInteger());\n  var s = Buffer.from(this.s.toDERInteger());\n  return bip66.encode(r, s);\n};\nECSignature.prototype.toRSBuffer = function (buffer, offset) {\n  buffer = buffer || Buffer.alloc(64);\n  this.r.toBuffer(32).copy(buffer, offset);\n  this.s.toBuffer(32).copy(buffer, offset + 32);\n  return buffer;\n};\nECSignature.prototype.toScriptSignature = function (hashType) {\n  var hashTypeMod = hashType & ~0xc0;\n  if (hashTypeMod <= 0 || hashTypeMod >= 4) throw new Error('Invalid hashType ' + hashType);\n  var hashTypeBuffer = Buffer.alloc(1);\n  hashTypeBuffer.writeUInt8(hashType, 0);\n  return Buffer.concat([this.toDER(), hashTypeBuffer]);\n};\nmodule.exports = ECSignature;","map":{"version":3,"names":["bip66","require","typeforce","types","BigInteger","ECSignature","r","s","tuple","BigInt","arguments","parseCompact","buffer","BufferN","flagByte","readUInt8","Error","compressed","recoveryParam","signature","fromRSBuffer","slice","i","fromBuffer","fromDER","decode","fromDERInteger","parseScriptSignature","hashType","length","hashTypeMod","prototype","toCompact","Buffer","alloc","writeUInt8","toRSBuffer","toDER","from","toDERInteger","encode","offset","toBuffer","copy","toScriptSignature","hashTypeBuffer","concat","module","exports"],"sources":["/Users/oddfl3x/Code/varB/NATI<>Verus Bridge Proxy Page/node_modules/@bitgo/utxo-lib/dist/src/ecsignature.js"],"sourcesContent":["var bip66 = require('bip66');\nvar typeforce = require('typeforce');\nvar types = require('./types');\nvar BigInteger = require('bigi');\nfunction ECSignature(r, s) {\n    typeforce(types.tuple(types.BigInt, types.BigInt), arguments);\n    this.r = r;\n    this.s = s;\n}\nECSignature.parseCompact = function (buffer) {\n    typeforce(types.BufferN(65), buffer);\n    var flagByte = buffer.readUInt8(0) - 27;\n    if (flagByte !== (flagByte & 7))\n        throw new Error('Invalid signature parameter');\n    var compressed = !!(flagByte & 4);\n    var recoveryParam = flagByte & 3;\n    var signature = ECSignature.fromRSBuffer(buffer.slice(1));\n    return {\n        compressed: compressed,\n        i: recoveryParam,\n        signature: signature\n    };\n};\nECSignature.fromRSBuffer = function (buffer) {\n    typeforce(types.BufferN(64), buffer);\n    var r = BigInteger.fromBuffer(buffer.slice(0, 32));\n    var s = BigInteger.fromBuffer(buffer.slice(32, 64));\n    return new ECSignature(r, s);\n};\nECSignature.fromDER = function (buffer) {\n    var decode = bip66.decode(buffer);\n    var r = BigInteger.fromDERInteger(decode.r);\n    var s = BigInteger.fromDERInteger(decode.s);\n    return new ECSignature(r, s);\n};\n// BIP62: 1 byte hashType flag (only 0x01, 0x02, 0x03, 0x81, 0x82 and 0x83 are allowed)\nECSignature.parseScriptSignature = function (buffer) {\n    var hashType = buffer.readUInt8(buffer.length - 1);\n    var hashTypeMod = hashType & ~0xc0;\n    if (hashTypeMod <= 0x00 || hashTypeMod >= 0x04)\n        throw new Error('Invalid hashType ' + hashType);\n    return {\n        signature: ECSignature.fromDER(buffer.slice(0, -1)),\n        hashType: hashType\n    };\n};\nECSignature.prototype.toCompact = function (i, compressed) {\n    if (compressed) {\n        i += 4;\n    }\n    i += 27;\n    var buffer = Buffer.alloc(65);\n    buffer.writeUInt8(i, 0);\n    this.toRSBuffer(buffer, 1);\n    return buffer;\n};\nECSignature.prototype.toDER = function () {\n    var r = Buffer.from(this.r.toDERInteger());\n    var s = Buffer.from(this.s.toDERInteger());\n    return bip66.encode(r, s);\n};\nECSignature.prototype.toRSBuffer = function (buffer, offset) {\n    buffer = buffer || Buffer.alloc(64);\n    this.r.toBuffer(32).copy(buffer, offset);\n    this.s.toBuffer(32).copy(buffer, offset + 32);\n    return buffer;\n};\nECSignature.prototype.toScriptSignature = function (hashType) {\n    var hashTypeMod = hashType & ~0xc0;\n    if (hashTypeMod <= 0 || hashTypeMod >= 4)\n        throw new Error('Invalid hashType ' + hashType);\n    var hashTypeBuffer = Buffer.alloc(1);\n    hashTypeBuffer.writeUInt8(hashType, 0);\n    return Buffer.concat([this.toDER(), hashTypeBuffer]);\n};\nmodule.exports = ECSignature;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}