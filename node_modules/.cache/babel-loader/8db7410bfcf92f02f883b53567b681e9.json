{"ast":null,"code":"var _jsxFileName = \"/Users/oddfl3x/Code/varB/NATI<>Verus Bridge Proxy Page/src/components/StatsGrid/StatsGrid.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport useSWR from 'swr';\nimport { VerusdRpcInterface } from 'verusd-rpc-ts-client';\nimport { GLOBAL_IADDRESS } from 'constants/contractAddress';\nimport { ReactComponent as Chevron } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../images/icons/chevron-icon.svg\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CoinGeckoVRSC = 'https://api.coingecko.com/api/v3/coins/verus-coin';\nconst CoinGeckoETH = 'https://api.coingecko.com/api/v3/coins/ethereum';\nconst CoinGeckotBTC = 'https://api.coingecko.com/api/v3/coins/tbtc';\nconst CoinGeckoARRR = 'https://api.coingecko.com/api/v3/coins/pirate-chain';\nconst urls = [CoinGeckoVRSC, CoinGeckoETH, CoinGeckotBTC, CoinGeckoARRR];\nconst verusd = new VerusdRpcInterface(GLOBAL_IADDRESS.VRSC, process.env.REACT_APP_VERUS_RPC_URL);\nconst blockNumber = process.env.REACT_APP_VERUS_END_BLOCK || '0';\nconst getDetails = res => {\n  const bestState = res.result.bestcurrencystate;\n  const currencyNames = res.result.currencynames;\n  const currencies = bestState.reservecurrencies;\n  const count = currencies.length;\n  const {\n    supply\n  } = bestState;\n  return {\n    bestState,\n    currencyNames,\n    count,\n    supply\n  };\n};\nconst fetchConversion = async () => {\n  var _res$result;\n  const res = await verusd.getCurrency('bridge.varrr');\n  const vrscbridge = await verusd.getCurrency('bridge.veth');\n  console.log(res);\n  const info = await verusd.getInfo();\n  const vrscbridgedetails = getDetails(vrscbridge);\n  const block = info.result.longestchain;\n  const bestState = res.result.bestcurrencystate;\n  const currencyNames = res.result.currencynames;\n  const currencies = bestState.reservecurrencies;\n  const count = currencies.length;\n  const {\n    supply\n  } = bestState;\n  const blockdiff = blockNumber - block;\n  const tbtcKey = Object.keys(res === null || res === void 0 ? void 0 : (_res$result = res.result) === null || _res$result === void 0 ? void 0 : _res$result.currencynames).find(key => currencyNames !== undefined && currencyNames[key] === 'tBTC');\n  const tbtcAmount = currencies.find(c => c.currencyid === tbtcKey).reserves;\n  let list = currencies.map(token => ({\n    name: currencyNames[token.currencyid],\n    amount: token.reserves,\n    tbtcPrice: tbtcAmount / token.reserves\n  }));\n  const bridge = {\n    name: 'Bridge.vARRR',\n    amount: supply,\n    tbtcPrice: tbtcAmount * count / supply\n  };\n  let conversions = [{\n    symbol: 'vrsc',\n    price: 0\n  }, {\n    symbol: 'eth',\n    price: 0\n  }, {\n    symbol: 'tBTC',\n    price: 0\n  }, {\n    symbol: 'arrr',\n    price: 0\n  }];\n  try {\n    conversions = await Promise.all(urls.map(async url => fetch(url).then(res => res.json()).then(c => ({\n      symbol: c.symbol,\n      price: c.market_data.current_price.usd\n    }))));\n    console.log(\"WORKED\");\n  } catch (error) {\n    console.log(\"ERROR\");\n    // eslint-disable-next-line no-console\n    console.error('%s: fetching prices %s', Date().toString(), error);\n  }\n  list = list.map(token => {\n    var _conversions$find, _conversions$find2, _conversions$find3, _conversions$find4;\n    switch (token.name) {\n      case 'VRSCTEST':\n      case 'VRSC':\n        return {\n          ...token,\n          price: (_conversions$find = conversions.find(c => c.symbol === 'vrsc')) === null || _conversions$find === void 0 ? void 0 : _conversions$find.price\n        };\n      case 'Bridge.vETH':\n        return {\n          ...token,\n          price: (_conversions$find2 = conversions.find(c => c.symbol === 'bridge')) === null || _conversions$find2 === void 0 ? void 0 : _conversions$find2.price\n        };\n      case 'vARRR':\n        return {\n          ...token,\n          price: (_conversions$find3 = conversions.find(c => c.symbol === 'arrr')) === null || _conversions$find3 === void 0 ? void 0 : _conversions$find3.price\n        };\n      case 'tBTC':\n        return {\n          ...token,\n          price: (_conversions$find4 = conversions.find(c => c.symbol === 'tbtc')) === null || _conversions$find4 === void 0 ? void 0 : _conversions$find4.price\n        };\n      // return { ...token, price: vrscPrice }\n      default:\n        return {\n          ...token\n        };\n    }\n  });\n  return {\n    list,\n    bridge,\n    blockdiff,\n    currencies\n  };\n};\nconst StatsGrid = () => {\n  _s();\n  const {\n    data: conversionList\n  } = useSWR(\"fetchConversion\", fetchConversion, {\n    refreshInterval: 60000 // every minute\n  });\n  if (!conversionList) return null;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: \"blueRowTitle\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 4,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            fontSize: '12px',\n            fontWeight: 'bold'\n          },\n          children: \"Liquidity pool\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 4,\n        textAlign: \"right\",\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            fontSize: '12px',\n            fontWeight: 'bold'\n          },\n          children: \"Supply\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 45\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 4,\n        textAlign: \"right\",\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            fontSize: '12px',\n            fontWeight: 'bold'\n          },\n          children: \"Price in tBTC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 45\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: \"blueRow\",\n      mb: 5,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 4,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            color: '#3165d4',\n            fontWeight: 'bold'\n          },\n          children: conversionList.bridge.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 4,\n        textAlign: \"right\",\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            color: '#3165d4',\n            fontWeight: 'bold'\n          },\n          children: [\" \", Intl.NumberFormat('en-US', {\n            style: 'decimal',\n            maximumFractionDigits: 0\n          }).format(conversionList.bridge.amount)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 45\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 4,\n        textAlign: \"right\",\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            color: '#3165d4',\n            fontWeight: 'bold'\n          },\n          children: Intl.NumberFormat('en-US', {\n            style: 'decimal',\n            maximumFractionDigits: 8,\n            minimumFractionDigits: 3\n          }).format(conversionList.bridge.tbtcPrice)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 45\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: \"blueRowTitle\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 3,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            fontSize: '12px',\n            fontWeight: 'bold'\n          },\n          children: [\"Bridge.vETH\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 96\n          }, this), \"reserve currencies\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 3,\n        textAlign: \"right\",\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            fontSize: '12px',\n            fontWeight: 'bold'\n          },\n          children: \"in reserves\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 45\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 3,\n        textAlign: \"right\",\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            fontSize: '12px',\n            fontWeight: 'bold'\n          },\n          children: \"Price in tBTC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 45\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 3,\n        textAlign: \"right\",\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            fontSize: '12px',\n            fontWeight: 'bold'\n          },\n          children: [\"Compared to\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 114\n          }, this), \"CoinGecko\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 45\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), conversionList.list && conversionList.list.map(token => {\n      // eslint-disable-next-line no-nested-ternary\n      const rate = token.tbtcPrice < token.price ? 'less' : token.tbtcPrice > token.price ? 'greater' : 'equal';\n      const percent = Math.abs(token.tbtcPrice * conversionList.list[3].price / token.price) - 1;\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        className: \"blueRow\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 3,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            sx: {\n              color: '#3165d4',\n              fontWeight: 'bold'\n            },\n            children: token.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 3,\n          textAlign: \"right\",\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            sx: {\n              color: 'rgba(49, 101, 212, 0.59)',\n              fontWeight: 'bold'\n            },\n            children: Intl.NumberFormat('en-US', {\n              style: 'decimal',\n              maximumFractionDigits: 3,\n              minimumFractionDigits: 3\n            }).format(token.amount)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 3,\n          textAlign: \"right\",\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            sx: {\n              color: '#3165d4',\n              fontWeight: 'bold'\n            },\n            children: Intl.NumberFormat('en-US', {\n              style: 'decimal',\n              maximumFractionDigits: 8,\n              minimumFractionDigits: 2\n            }).format(token.tbtcPrice)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 3,\n          textAlign: \"right\",\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            className: rate,\n            noWrap: true,\n            children: [/*#__PURE__*/_jsxDEV(Chevron, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 17\n            }, this), Intl.NumberFormat('en-US', {\n              style: 'percent',\n              maximumFractionDigits: 2,\n              minimumFractionDigits: 2\n            }).format(Math.abs(percent))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this)]\n      }, token.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: \"white\",\n      mb: 5,\n      children: \" \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: \"blueRow\",\n      mb: 5,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            color: '#3165d4',\n            fontWeight: 'bold'\n          },\n          children: \"Total Value of Liquidity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        textAlign: \"right\",\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            color: '#3165d4',\n            fontWeight: 'bold'\n          },\n          children: [Intl.NumberFormat('en-US', {\n            style: 'decimal',\n            maximumFractionDigits: 3,\n            minimumFractionDigits: 3\n          }).format(conversionList.bridge.tbtcPrice * conversionList.bridge.amount), \" tBTC\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 45\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(StatsGrid, \"7wYVHCw6X9VtZsliNQDHvlX8bhs=\", false, function () {\n  return [useSWR];\n});\n_c = StatsGrid;\nexport default StatsGrid;\nvar _c;\n$RefreshReg$(_c, \"StatsGrid\");","map":{"version":3,"names":["React","Grid","Typography","useSWR","VerusdRpcInterface","GLOBAL_IADDRESS","ReactComponent","Chevron","jsxDEV","_jsxDEV","Fragment","_Fragment","CoinGeckoVRSC","CoinGeckoETH","CoinGeckotBTC","CoinGeckoARRR","urls","verusd","VRSC","process","env","REACT_APP_VERUS_RPC_URL","blockNumber","REACT_APP_VERUS_END_BLOCK","getDetails","res","bestState","result","bestcurrencystate","currencyNames","currencynames","currencies","reservecurrencies","count","length","supply","fetchConversion","_res$result","getCurrency","vrscbridge","console","log","info","getInfo","vrscbridgedetails","block","longestchain","blockdiff","tbtcKey","Object","keys","find","key","undefined","tbtcAmount","c","currencyid","reserves","list","map","token","name","amount","tbtcPrice","bridge","conversions","symbol","price","Promise","all","url","fetch","then","json","market_data","current_price","usd","error","Date","toString","_conversions$find","_conversions$find2","_conversions$find3","_conversions$find4","StatsGrid","_s","data","conversionList","refreshInterval","children","container","className","item","xs","sx","fontSize","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","textAlign","mb","color","Intl","NumberFormat","style","maximumFractionDigits","format","minimumFractionDigits","rate","percent","Math","abs","noWrap","_c","$RefreshReg$"],"sources":["/Users/oddfl3x/Code/varB/NATI<>Verus Bridge Proxy Page/src/components/StatsGrid/StatsGrid.jsx"],"sourcesContent":["import React from 'react'\n\nimport Grid from '@mui/material/Grid'\nimport Typography from '@mui/material/Typography'\nimport useSWR from 'swr'\nimport { VerusdRpcInterface } from 'verusd-rpc-ts-client'\n\nimport { GLOBAL_IADDRESS } from 'constants/contractAddress';\n\nimport { ReactComponent as Chevron } from '../../images/icons/chevron-icon.svg'\n\nconst CoinGeckoVRSC = 'https://api.coingecko.com/api/v3/coins/verus-coin'\nconst CoinGeckoETH = 'https://api.coingecko.com/api/v3/coins/ethereum'\nconst CoinGeckotBTC = 'https://api.coingecko.com/api/v3/coins/tbtc'\nconst CoinGeckoARRR = 'https://api.coingecko.com/api/v3/coins/pirate-chain'\n\nconst urls = [CoinGeckoVRSC, CoinGeckoETH, CoinGeckotBTC, CoinGeckoARRR]\n\nconst verusd = new VerusdRpcInterface(GLOBAL_IADDRESS.VRSC, process.env.REACT_APP_VERUS_RPC_URL)\n\nconst blockNumber = process.env.REACT_APP_VERUS_END_BLOCK || '0'\n\nconst getDetails = (res) => {\n  const bestState = res.result.bestcurrencystate\n  const currencyNames = res.result.currencynames\n  const currencies = bestState.reservecurrencies\n  const count = currencies.length\n  const { supply } = bestState\n\n  return { bestState, currencyNames, count, supply }\n}\n\n\n\nconst fetchConversion = async () => {\n  const res = await verusd.getCurrency('bridge.varrr');\n  const vrscbridge = await verusd.getCurrency('bridge.veth')\n  console.log(res)\nconst info = await verusd.getInfo()\n  const vrscbridgedetails = getDetails(vrscbridge);\n\n  const block = info.result.longestchain\n\n  const bestState = res.result.bestcurrencystate\n  const currencyNames = res.result.currencynames\n  const currencies = bestState.reservecurrencies\n  const count = currencies.length\n  const { supply } = bestState\n  const blockdiff = blockNumber - block\n  const tbtcKey = Object.keys(res?.result?.currencynames).find((key) => currencyNames !== undefined && currencyNames[key] === 'tBTC')\n  const tbtcAmount = currencies.find(c => c.currencyid === tbtcKey).reserves\n\n  let list = currencies.map((token) => ({ name: currencyNames[token.currencyid], amount: token.reserves, tbtcPrice: tbtcAmount / token.reserves }))\n  const bridge = { name: 'Bridge.vARRR', amount: supply, tbtcPrice: (tbtcAmount * count) / supply }\n\n  let conversions = [\n    { symbol: 'vrsc', price: 0 },\n    { symbol: 'eth', price: 0 },\n    { symbol: 'tBTC', price: 0 },\n    { symbol: 'arrr', price: 0 }\n  ]\n\n  try {\n    conversions = await Promise.all(\n      urls.map(async (url) => fetch(url)\n        .then((res) => res.json())\n        .then((c) => ({\n          symbol: c.symbol,\n          price: c.market_data.current_price.usd\n        })))\n    )\n\n    console.log(\"WORKED\");\n  } catch (error) {\n    console.log(\"ERROR\");\n    // eslint-disable-next-line no-console\n    console.error('%s: fetching prices %s', Date().toString(), error)\n  }\n  list = list.map((token) => {\n    switch (token.name) {\n      case 'VRSCTEST':\n      case 'VRSC':\n        return {\n          ...token,\n          price:\n            conversions.find((c) => c.symbol === 'vrsc')?.price\n        }\n      case 'Bridge.vETH':\n        return {\n          ...token,\n          price: conversions.find((c) => c.symbol === 'bridge')?.price\n        }\n      case 'vARRR':\n        return {\n          ...token,\n          price: conversions.find((c) => c.symbol === 'arrr')?.price\n        }\n      case 'tBTC':\n        return {\n          ...token,\n          price: conversions.find((c) => c.symbol === 'tbtc')?.price\n        }\n      // return { ...token, price: vrscPrice }\n      default:\n        return { ...token }\n    }\n  })\n  return { list, bridge, blockdiff, currencies }\n}\n\nconst StatsGrid = () => {\n\n  const { data: conversionList } = useSWR(\"fetchConversion\", fetchConversion, {\n    refreshInterval: 60_000 // every minute\n  })\n\n  if (!conversionList) return null\n\n  return (\n    <>\n      <Grid container className=\"blueRowTitle\" >\n        <Grid item xs={4}><Typography sx={{ fontSize: '12px', fontWeight: 'bold' }}>Liquidity pool</Typography></Grid>\n\n        <Grid item xs={4} textAlign=\"right\"><Typography sx={{ fontSize: '12px', fontWeight: 'bold' }}>Supply</Typography></Grid>\n        <Grid item xs={4} textAlign=\"right\"><Typography sx={{ fontSize: '12px', fontWeight: 'bold' }}>Price in tBTC</Typography></Grid>\n      </Grid>\n\n      <Grid container className='blueRow' mb={5}>\n        <Grid item xs={4}><Typography sx={{ color: '#3165d4', fontWeight: 'bold' }}>{conversionList.bridge.name}</Typography></Grid>\n        <Grid item xs={4} textAlign=\"right\"><Typography sx={{ color: '#3165d4', fontWeight: 'bold' }}> {Intl.NumberFormat('en-US', {\n          style: 'decimal',\n          maximumFractionDigits: 0\n        }).format(conversionList.bridge.amount)}</Typography></Grid>\n        <Grid item xs={4} textAlign=\"right\"><Typography sx={{ color: '#3165d4', fontWeight: 'bold' }}>{Intl.NumberFormat('en-US', {\n          style: 'decimal',\n          maximumFractionDigits: 8,\n          minimumFractionDigits: 3\n        }).format(conversionList.bridge.tbtcPrice)}</Typography></Grid>\n      </Grid>\n\n      <Grid container className=\"blueRowTitle\" >\n        <Grid item xs={3}><Typography sx={{ fontSize: '12px', fontWeight: 'bold' }}>Bridge.vETH<br />reserve currencies</Typography></Grid>\n        <Grid item xs={3} textAlign=\"right\"><Typography sx={{ fontSize: '12px', fontWeight: 'bold' }}>in reserves</Typography></Grid>\n        <Grid item xs={3} textAlign=\"right\"><Typography sx={{ fontSize: '12px', fontWeight: 'bold' }}>Price in tBTC</Typography></Grid>\n        <Grid item xs={3} textAlign=\"right\"><Typography sx={{ fontSize: '12px', fontWeight: 'bold' }}>Compared to<br />CoinGecko</Typography></Grid>\n      </Grid>\n      {conversionList.list && conversionList.list.map((token) => {\n        // eslint-disable-next-line no-nested-ternary\n        const rate = token.tbtcPrice < token.price ? 'less' : token.tbtcPrice > token.price ? 'greater' : 'equal'\n        const percent = Math.abs((token.tbtcPrice * conversionList.list[3].price) / token.price) - 1\n\n        return (\n          <Grid container className=\"blueRow\" key={token.name}>\n            <Grid item xs={3}><Typography sx={{ color: '#3165d4', fontWeight: 'bold' }}>{token.name}</Typography></Grid>\n            <Grid item xs={3} textAlign=\"right\">\n              <Typography sx={{ color: 'rgba(49, 101, 212, 0.59)', fontWeight: 'bold' }}>\n                {Intl.NumberFormat('en-US', {\n                  style: 'decimal',\n                  maximumFractionDigits: 3,\n                  minimumFractionDigits: 3\n                }).format(token.amount)}\n              </Typography>\n            </Grid>\n            <Grid item xs={3} textAlign=\"right\">\n              <Typography sx={{ color: '#3165d4', fontWeight: 'bold' }}>\n                {Intl.NumberFormat('en-US', {\n                  style: 'decimal',\n                  maximumFractionDigits: 8,\n                  minimumFractionDigits: 2\n                }).format(token.tbtcPrice)}\n              </Typography></Grid>\n            <Grid item xs={3} textAlign=\"right\">\n              <Typography className={rate} noWrap>\n                <Chevron />\n                {Intl.NumberFormat('en-US', {\n                  style: 'percent',\n                  maximumFractionDigits: 2,\n                  minimumFractionDigits: 2\n                }).format(Math.abs(percent))}</Typography></Grid>\n          </Grid >\n        )\n      })}\n      <Grid container className='white' mb={5}> </Grid>\n      <Grid container className='blueRow' mb={5}>\n        <Grid item xs={6}><Typography sx={{ color: '#3165d4', fontWeight: 'bold' }}>Total Value of Liquidity</Typography></Grid>\n\n        <Grid item xs={6} textAlign=\"right\"><Typography sx={{ color: '#3165d4', fontWeight: 'bold' }}>{Intl.NumberFormat('en-US', {\n          style: 'decimal',\n          maximumFractionDigits: 3,\n          minimumFractionDigits: 3\n        }).format(conversionList.bridge.tbtcPrice * conversionList.bridge.amount)} tBTC</Typography></Grid>\n      </Grid>\n    </>\n  )\n}\n\nexport default StatsGrid\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}