{"ast":null,"code":"var Buffer = require('safe-buffer').Buffer;\nvar bech32 = require('bech32');\nvar bs58check = require('bs58check');\nvar bscript = require('./script');\nvar btemplates = require('./templates');\nvar networks = require('./networks');\nvar typeforce = require('typeforce');\nvar types = require('./types');\nfunction fromBase58Check(address) {\n  var payload = bs58check.decode(address);\n  // TODO: 4.0.0, move to \"toOutputScript\"\n  if (payload.length < 21) throw new TypeError(address + ' is too short');\n  if (payload.length > 22) throw new TypeError(address + ' is too long');\n  var multibyte = payload.length === 22;\n  var offset = multibyte ? 2 : 1;\n  var version = multibyte ? payload.readUInt16BE(0) : payload[0];\n  var hash = payload.slice(offset);\n  return {\n    version: version,\n    hash: hash\n  };\n}\nfunction fromBech32(address) {\n  var result = bech32.decode(address);\n  var data = bech32.fromWords(result.words.slice(1));\n  return {\n    version: result.words[0],\n    prefix: result.prefix,\n    data: Buffer.from(data)\n  };\n}\nfunction toBase58Check(hash, version) {\n  typeforce(types.tuple(types.Hash160bit, types.UInt16), arguments);\n  // Zcash adds an extra prefix resulting in a bigger (22 bytes) payload. We identify them Zcash by checking if the\n  // version is multibyte (2 bytes instead of 1)\n  var multibyte = version > 0xff;\n  var size = multibyte ? 22 : 21;\n  var offset = multibyte ? 2 : 1;\n  var payload = Buffer.allocUnsafe(size);\n  multibyte ? payload.writeUInt16BE(version, 0) : payload.writeUInt8(version, 0);\n  hash.copy(payload, offset);\n  return bs58check.encode(payload);\n}\nfunction toBech32(data, version, prefix) {\n  var words = bech32.toWords(data);\n  words.unshift(version);\n  return bech32.encode(prefix, words);\n}\nfunction fromOutputScript(outputScript, network) {\n  network = network || networks.bitcoin;\n  if (btemplates.pubKeyHash.output.check(outputScript)) return toBase58Check(bscript.compile(outputScript).slice(3, 23), network.pubKeyHash);\n  if (btemplates.scriptHash.output.check(outputScript)) return toBase58Check(bscript.compile(outputScript).slice(2, 22), network.scriptHash);\n  if (btemplates.witnessPubKeyHash.output.check(outputScript)) return toBech32(bscript.compile(outputScript).slice(2, 22), 0, network.bech32);\n  if (btemplates.witnessScriptHash.output.check(outputScript)) return toBech32(bscript.compile(outputScript).slice(2, 34), 0, network.bech32);\n  throw new Error(bscript.toASM(outputScript) + ' has no matching Address');\n}\nfunction toOutputScript(address, network) {\n  network = network || networks.bitcoin;\n  var decode;\n  try {\n    decode = fromBase58Check(address);\n  } catch (e) {}\n  if (decode) {\n    if (decode.version === network.pubKeyHash) return btemplates.pubKeyHash.output.encode(decode.hash);\n    if (decode.version === network.scriptHash) return btemplates.scriptHash.output.encode(decode.hash);\n  } else {\n    try {\n      decode = fromBech32(address);\n    } catch (e) {}\n    if (decode) {\n      if (decode.prefix !== network.bech32) throw new Error(address + ' has an invalid prefix');\n      if (decode.version === 0) {\n        if (decode.data.length === 20) return btemplates.witnessPubKeyHash.output.encode(decode.data);\n        if (decode.data.length === 32) return btemplates.witnessScriptHash.output.encode(decode.data);\n      }\n    }\n  }\n  throw new Error(address + ' has no matching Script');\n}\nmodule.exports = {\n  fromBase58Check: fromBase58Check,\n  fromBech32: fromBech32,\n  fromOutputScript: fromOutputScript,\n  toBase58Check: toBase58Check,\n  toBech32: toBech32,\n  toOutputScript: toOutputScript\n};","map":{"version":3,"names":["Buffer","require","bech32","bs58check","bscript","btemplates","networks","typeforce","types","fromBase58Check","address","payload","decode","length","TypeError","multibyte","offset","version","readUInt16BE","hash","slice","fromBech32","result","data","fromWords","words","prefix","from","toBase58Check","tuple","Hash160bit","UInt16","arguments","size","allocUnsafe","writeUInt16BE","writeUInt8","copy","encode","toBech32","toWords","unshift","fromOutputScript","outputScript","network","bitcoin","pubKeyHash","output","check","compile","scriptHash","witnessPubKeyHash","witnessScriptHash","Error","toASM","toOutputScript","e","module","exports"],"sources":["/Users/oddfl3x/Code/varB/NATIBridgeWebsite-main/node_modules/@bitgo/utxo-lib/dist/src/address.js"],"sourcesContent":["var Buffer = require('safe-buffer').Buffer;\nvar bech32 = require('bech32');\nvar bs58check = require('bs58check');\nvar bscript = require('./script');\nvar btemplates = require('./templates');\nvar networks = require('./networks');\nvar typeforce = require('typeforce');\nvar types = require('./types');\nfunction fromBase58Check(address) {\n    var payload = bs58check.decode(address);\n    // TODO: 4.0.0, move to \"toOutputScript\"\n    if (payload.length < 21)\n        throw new TypeError(address + ' is too short');\n    if (payload.length > 22)\n        throw new TypeError(address + ' is too long');\n    var multibyte = payload.length === 22;\n    var offset = multibyte ? 2 : 1;\n    var version = multibyte ? payload.readUInt16BE(0) : payload[0];\n    var hash = payload.slice(offset);\n    return { version: version, hash: hash };\n}\nfunction fromBech32(address) {\n    var result = bech32.decode(address);\n    var data = bech32.fromWords(result.words.slice(1));\n    return {\n        version: result.words[0],\n        prefix: result.prefix,\n        data: Buffer.from(data)\n    };\n}\nfunction toBase58Check(hash, version) {\n    typeforce(types.tuple(types.Hash160bit, types.UInt16), arguments);\n    // Zcash adds an extra prefix resulting in a bigger (22 bytes) payload. We identify them Zcash by checking if the\n    // version is multibyte (2 bytes instead of 1)\n    var multibyte = version > 0xff;\n    var size = multibyte ? 22 : 21;\n    var offset = multibyte ? 2 : 1;\n    var payload = Buffer.allocUnsafe(size);\n    multibyte ? payload.writeUInt16BE(version, 0) : payload.writeUInt8(version, 0);\n    hash.copy(payload, offset);\n    return bs58check.encode(payload);\n}\nfunction toBech32(data, version, prefix) {\n    var words = bech32.toWords(data);\n    words.unshift(version);\n    return bech32.encode(prefix, words);\n}\nfunction fromOutputScript(outputScript, network) {\n    network = network || networks.bitcoin;\n    if (btemplates.pubKeyHash.output.check(outputScript))\n        return toBase58Check(bscript.compile(outputScript).slice(3, 23), network.pubKeyHash);\n    if (btemplates.scriptHash.output.check(outputScript))\n        return toBase58Check(bscript.compile(outputScript).slice(2, 22), network.scriptHash);\n    if (btemplates.witnessPubKeyHash.output.check(outputScript))\n        return toBech32(bscript.compile(outputScript).slice(2, 22), 0, network.bech32);\n    if (btemplates.witnessScriptHash.output.check(outputScript))\n        return toBech32(bscript.compile(outputScript).slice(2, 34), 0, network.bech32);\n    throw new Error(bscript.toASM(outputScript) + ' has no matching Address');\n}\nfunction toOutputScript(address, network) {\n    network = network || networks.bitcoin;\n    var decode;\n    try {\n        decode = fromBase58Check(address);\n    }\n    catch (e) { }\n    if (decode) {\n        if (decode.version === network.pubKeyHash)\n            return btemplates.pubKeyHash.output.encode(decode.hash);\n        if (decode.version === network.scriptHash)\n            return btemplates.scriptHash.output.encode(decode.hash);\n    }\n    else {\n        try {\n            decode = fromBech32(address);\n        }\n        catch (e) { }\n        if (decode) {\n            if (decode.prefix !== network.bech32)\n                throw new Error(address + ' has an invalid prefix');\n            if (decode.version === 0) {\n                if (decode.data.length === 20)\n                    return btemplates.witnessPubKeyHash.output.encode(decode.data);\n                if (decode.data.length === 32)\n                    return btemplates.witnessScriptHash.output.encode(decode.data);\n            }\n        }\n    }\n    throw new Error(address + ' has no matching Script');\n}\nmodule.exports = {\n    fromBase58Check: fromBase58Check,\n    fromBech32: fromBech32,\n    fromOutputScript: fromOutputScript,\n    toBase58Check: toBase58Check,\n    toBech32: toBech32,\n    toOutputScript: toOutputScript\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}