{"ast":null,"code":"var Buffer = require('safe-buffer').Buffer;\nfunction decode(buffer, maxLength, minimal) {\n  maxLength = maxLength || 4;\n  minimal = minimal === undefined ? true : minimal;\n  var length = buffer.length;\n  if (length === 0) return 0;\n  if (length > maxLength) throw new TypeError('Script number overflow');\n  if (minimal) {\n    if ((buffer[length - 1] & 0x7f) === 0) {\n      if (length <= 1 || (buffer[length - 2] & 0x80) === 0) throw new Error('Non-minimally encoded script number');\n    }\n  }\n  // 40-bit\n  if (length === 5) {\n    var a = buffer.readUInt32LE(0);\n    var b = buffer.readUInt8(4);\n    if (b & 0x80) return -((b & ~0x80) * 0x100000000 + a);\n    return b * 0x100000000 + a;\n  }\n  var result = 0;\n  // 32-bit / 24-bit / 16-bit / 8-bit\n  for (var i = 0; i < length; ++i) {\n    result |= buffer[i] << 8 * i;\n  }\n  if (buffer[length - 1] & 0x80) return -(result & ~(0x80 << 8 * (length - 1)));\n  return result;\n}\nfunction scriptNumSize(i) {\n  return i > 0x7fffffff ? 5 : i > 0x7fffff ? 4 : i > 0x7fff ? 3 : i > 0x7f ? 2 : i > 0x00 ? 1 : 0;\n}\nfunction encode(number) {\n  var value = Math.abs(number);\n  var size = scriptNumSize(value);\n  var buffer = Buffer.allocUnsafe(size);\n  var negative = number < 0;\n  for (var i = 0; i < size; ++i) {\n    buffer.writeUInt8(value & 0xff, i);\n    value >>= 8;\n  }\n  if (buffer[size - 1] & 0x80) {\n    buffer.writeUInt8(negative ? 0x80 : 0x00, size - 1);\n  } else if (negative) {\n    buffer[size - 1] |= 0x80;\n  }\n  return buffer;\n}\nmodule.exports = {\n  decode: decode,\n  encode: encode\n};","map":{"version":3,"names":["Buffer","require","decode","buffer","maxLength","minimal","undefined","length","TypeError","Error","a","readUInt32LE","b","readUInt8","result","i","scriptNumSize","encode","number","value","Math","abs","size","allocUnsafe","negative","writeUInt8","module","exports"],"sources":["/Users/oddfl3x/Code/varB/NATI<>Verus Bridge Proxy Page/node_modules/@bitgo/utxo-lib/dist/src/script_number.js"],"sourcesContent":["var Buffer = require('safe-buffer').Buffer;\nfunction decode(buffer, maxLength, minimal) {\n    maxLength = maxLength || 4;\n    minimal = minimal === undefined ? true : minimal;\n    var length = buffer.length;\n    if (length === 0)\n        return 0;\n    if (length > maxLength)\n        throw new TypeError('Script number overflow');\n    if (minimal) {\n        if ((buffer[length - 1] & 0x7f) === 0) {\n            if (length <= 1 || (buffer[length - 2] & 0x80) === 0)\n                throw new Error('Non-minimally encoded script number');\n        }\n    }\n    // 40-bit\n    if (length === 5) {\n        var a = buffer.readUInt32LE(0);\n        var b = buffer.readUInt8(4);\n        if (b & 0x80)\n            return -(((b & ~0x80) * 0x100000000) + a);\n        return (b * 0x100000000) + a;\n    }\n    var result = 0;\n    // 32-bit / 24-bit / 16-bit / 8-bit\n    for (var i = 0; i < length; ++i) {\n        result |= buffer[i] << (8 * i);\n    }\n    if (buffer[length - 1] & 0x80)\n        return -(result & ~(0x80 << (8 * (length - 1))));\n    return result;\n}\nfunction scriptNumSize(i) {\n    return i > 0x7fffffff ? 5\n        : i > 0x7fffff ? 4\n            : i > 0x7fff ? 3\n                : i > 0x7f ? 2\n                    : i > 0x00 ? 1\n                        : 0;\n}\nfunction encode(number) {\n    var value = Math.abs(number);\n    var size = scriptNumSize(value);\n    var buffer = Buffer.allocUnsafe(size);\n    var negative = number < 0;\n    for (var i = 0; i < size; ++i) {\n        buffer.writeUInt8(value & 0xff, i);\n        value >>= 8;\n    }\n    if (buffer[size - 1] & 0x80) {\n        buffer.writeUInt8(negative ? 0x80 : 0x00, size - 1);\n    }\n    else if (negative) {\n        buffer[size - 1] |= 0x80;\n    }\n    return buffer;\n}\nmodule.exports = {\n    decode: decode,\n    encode: encode\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}