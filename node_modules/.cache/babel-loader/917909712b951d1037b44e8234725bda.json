{"ast":null,"code":"\"use strict\";\n\n// The MIT License (MIT)\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.encodingLength = exports.decode = exports.encode = void 0;\n// Copyright (c) 2016 Kirill Fomichev\n// Parts of this software are based on https://github.com/mappum/bitcoin-protocol\n// Copyright (c) 2016 Matt Bell\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n// Number.MAX_SAFE_INTEGER\nconst MAX_SAFE_INTEGER = 9007199254740991;\nconst checkUInt53 = n => {\n  if (n < 0 || n > MAX_SAFE_INTEGER || n % 1 !== 0) throw new RangeError(\"value out of range\");\n};\nconst encode = (number, buffer, offset) => {\n  checkUInt53(number);\n  if (!buffer) buffer = Buffer.alloc((0, exports.encodingLength)(number));\n  if (!Buffer.isBuffer(buffer)) throw new TypeError(\"buffer must be a Buffer instance\");\n  if (!offset) offset = 0;\n  let bytes;\n  // 8 bit\n  if (number < 0xfd) {\n    buffer.writeUInt8(number, offset);\n    bytes = 1;\n    // 16 bit\n  } else if (number <= 0xffff) {\n    buffer.writeUInt8(0xfd, offset);\n    buffer.writeUInt16LE(number, offset + 1);\n    bytes = 3;\n    // 32 bit\n  } else if (number <= 0xffffffff) {\n    buffer.writeUInt8(0xfe, offset);\n    buffer.writeUInt32LE(number, offset + 1);\n    bytes = 5;\n    // 64 bit\n  } else {\n    buffer.writeUInt8(0xff, offset);\n    buffer.writeUInt32LE(number >>> 0, offset + 1);\n    buffer.writeUInt32LE(number / 0x100000000 | 0, offset + 5);\n    bytes = 9;\n  }\n  return {\n    buffer,\n    bytes\n  };\n};\nexports.encode = encode;\nconst decode = (buffer, offset) => {\n  if (!Buffer.isBuffer(buffer)) throw new TypeError(\"buffer must be a Buffer instance\");\n  if (!offset) offset = 0;\n  var first = buffer.readUInt8(offset);\n  let bytes;\n  let decoded;\n  // 8 bit\n  if (first < 0xfd) {\n    bytes = 1;\n    decoded = first;\n    // 16 bit\n  } else if (first === 0xfd) {\n    bytes = 3;\n    decoded = buffer.readUInt16LE(offset + 1);\n    // 32 bit\n  } else if (first === 0xfe) {\n    bytes = 5;\n    decoded = buffer.readUInt32LE(offset + 1);\n    // 64 bit\n  } else {\n    bytes = 9;\n    var lo = buffer.readUInt32LE(offset + 1);\n    var hi = buffer.readUInt32LE(offset + 5);\n    var number = hi * 0x0100000000 + lo;\n    checkUInt53(number);\n    decoded = number;\n  }\n  return {\n    decoded,\n    bytes\n  };\n};\nexports.decode = decode;\nconst encodingLength = number => {\n  checkUInt53(number);\n  return number < 0xfd ? 1 : number <= 0xffff ? 3 : number <= 0xffffffff ? 5 : 9;\n};\nexports.encodingLength = encodingLength;\nexports.default = {\n  encodingLength: exports.encodingLength,\n  encode: exports.encode,\n  decode: exports.decode\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","encodingLength","decode","encode","MAX_SAFE_INTEGER","checkUInt53","n","RangeError","number","buffer","offset","Buffer","alloc","isBuffer","TypeError","bytes","writeUInt8","writeUInt16LE","writeUInt32LE","first","readUInt8","decoded","readUInt16LE","readUInt32LE","lo","hi","default"],"sources":["/Users/oddfl3x/Code/varB/NATI<>Verus Bridge Proxy Page/node_modules/verus-typescript-primitives/dist/utils/varuint.js"],"sourcesContent":["\"use strict\";\n// The MIT License (MIT)\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.encodingLength = exports.decode = exports.encode = void 0;\n// Copyright (c) 2016 Kirill Fomichev\n// Parts of this software are based on https://github.com/mappum/bitcoin-protocol\n// Copyright (c) 2016 Matt Bell\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n// Number.MAX_SAFE_INTEGER\nconst MAX_SAFE_INTEGER = 9007199254740991;\nconst checkUInt53 = (n) => {\n    if (n < 0 || n > MAX_SAFE_INTEGER || n % 1 !== 0)\n        throw new RangeError(\"value out of range\");\n};\nconst encode = (number, buffer, offset) => {\n    checkUInt53(number);\n    if (!buffer)\n        buffer = Buffer.alloc((0, exports.encodingLength)(number));\n    if (!Buffer.isBuffer(buffer))\n        throw new TypeError(\"buffer must be a Buffer instance\");\n    if (!offset)\n        offset = 0;\n    let bytes;\n    // 8 bit\n    if (number < 0xfd) {\n        buffer.writeUInt8(number, offset);\n        bytes = 1;\n        // 16 bit\n    }\n    else if (number <= 0xffff) {\n        buffer.writeUInt8(0xfd, offset);\n        buffer.writeUInt16LE(number, offset + 1);\n        bytes = 3;\n        // 32 bit\n    }\n    else if (number <= 0xffffffff) {\n        buffer.writeUInt8(0xfe, offset);\n        buffer.writeUInt32LE(number, offset + 1);\n        bytes = 5;\n        // 64 bit\n    }\n    else {\n        buffer.writeUInt8(0xff, offset);\n        buffer.writeUInt32LE(number >>> 0, offset + 1);\n        buffer.writeUInt32LE((number / 0x100000000) | 0, offset + 5);\n        bytes = 9;\n    }\n    return { buffer, bytes };\n};\nexports.encode = encode;\nconst decode = (buffer, offset) => {\n    if (!Buffer.isBuffer(buffer))\n        throw new TypeError(\"buffer must be a Buffer instance\");\n    if (!offset)\n        offset = 0;\n    var first = buffer.readUInt8(offset);\n    let bytes;\n    let decoded;\n    // 8 bit\n    if (first < 0xfd) {\n        bytes = 1;\n        decoded = first;\n        // 16 bit\n    }\n    else if (first === 0xfd) {\n        bytes = 3;\n        decoded = buffer.readUInt16LE(offset + 1);\n        // 32 bit\n    }\n    else if (first === 0xfe) {\n        bytes = 5;\n        decoded = buffer.readUInt32LE(offset + 1);\n        // 64 bit\n    }\n    else {\n        bytes = 9;\n        var lo = buffer.readUInt32LE(offset + 1);\n        var hi = buffer.readUInt32LE(offset + 5);\n        var number = hi * 0x0100000000 + lo;\n        checkUInt53(number);\n        decoded = number;\n    }\n    return { decoded, bytes };\n};\nexports.decode = decode;\nconst encodingLength = (number) => {\n    checkUInt53(number);\n    return number < 0xfd\n        ? 1\n        : number <= 0xffff\n            ? 3\n            : number <= 0xffffffff\n                ? 5\n                : 9;\n};\nexports.encodingLength = encodingLength;\nexports.default = {\n    encodingLength: exports.encodingLength,\n    encode: exports.encode,\n    decode: exports.decode,\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}