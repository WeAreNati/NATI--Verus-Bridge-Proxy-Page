{"ast":null,"code":"var OPS = require('bitcoin-ops');\nfunction encodingLength(i) {\n  return i < OPS.OP_PUSHDATA1 ? 1 : i <= 0xff ? 2 : i <= 0xffff ? 3 : 5;\n}\nfunction encode(buffer, number, offset) {\n  var size = encodingLength(number);\n\n  // ~6 bit\n  if (size === 1) {\n    buffer.writeUInt8(number, offset);\n\n    // 8 bit\n  } else if (size === 2) {\n    buffer.writeUInt8(OPS.OP_PUSHDATA1, offset);\n    buffer.writeUInt8(number, offset + 1);\n\n    // 16 bit\n  } else if (size === 3) {\n    buffer.writeUInt8(OPS.OP_PUSHDATA2, offset);\n    buffer.writeUInt16LE(number, offset + 1);\n\n    // 32 bit\n  } else {\n    buffer.writeUInt8(OPS.OP_PUSHDATA4, offset);\n    buffer.writeUInt32LE(number, offset + 1);\n  }\n  return size;\n}\nfunction decode(buffer, offset) {\n  var opcode = buffer.readUInt8(offset);\n  var number, size;\n\n  // ~6 bit\n  if (opcode < OPS.OP_PUSHDATA1) {\n    number = opcode;\n    size = 1;\n\n    // 8 bit\n  } else if (opcode === OPS.OP_PUSHDATA1) {\n    if (offset + 2 > buffer.length) return null;\n    number = buffer.readUInt8(offset + 1);\n    size = 2;\n\n    // 16 bit\n  } else if (opcode === OPS.OP_PUSHDATA2) {\n    if (offset + 3 > buffer.length) return null;\n    number = buffer.readUInt16LE(offset + 1);\n    size = 3;\n\n    // 32 bit\n  } else {\n    if (offset + 5 > buffer.length) return null;\n    if (opcode !== OPS.OP_PUSHDATA4) throw new Error('Unexpected opcode');\n    number = buffer.readUInt32LE(offset + 1);\n    size = 5;\n  }\n  return {\n    opcode: opcode,\n    number: number,\n    size: size\n  };\n}\nmodule.exports = {\n  encodingLength: encodingLength,\n  encode: encode,\n  decode: decode\n};","map":{"version":3,"names":["OPS","require","encodingLength","i","OP_PUSHDATA1","encode","buffer","number","offset","size","writeUInt8","OP_PUSHDATA2","writeUInt16LE","OP_PUSHDATA4","writeUInt32LE","decode","opcode","readUInt8","length","readUInt16LE","Error","readUInt32LE","module","exports"],"sources":["/Users/oddfl3x/Code/varB/NATI<>Verus Bridge Proxy Page/node_modules/pushdata-bitcoin/index.js"],"sourcesContent":["var OPS = require('bitcoin-ops')\n\nfunction encodingLength (i) {\n  return i < OPS.OP_PUSHDATA1 ? 1\n  : i <= 0xff ? 2\n  : i <= 0xffff ? 3\n  : 5\n}\n\nfunction encode (buffer, number, offset) {\n  var size = encodingLength(number)\n\n  // ~6 bit\n  if (size === 1) {\n    buffer.writeUInt8(number, offset)\n\n  // 8 bit\n  } else if (size === 2) {\n    buffer.writeUInt8(OPS.OP_PUSHDATA1, offset)\n    buffer.writeUInt8(number, offset + 1)\n\n  // 16 bit\n  } else if (size === 3) {\n    buffer.writeUInt8(OPS.OP_PUSHDATA2, offset)\n    buffer.writeUInt16LE(number, offset + 1)\n\n  // 32 bit\n  } else {\n    buffer.writeUInt8(OPS.OP_PUSHDATA4, offset)\n    buffer.writeUInt32LE(number, offset + 1)\n  }\n\n  return size\n}\n\nfunction decode (buffer, offset) {\n  var opcode = buffer.readUInt8(offset)\n  var number, size\n\n  // ~6 bit\n  if (opcode < OPS.OP_PUSHDATA1) {\n    number = opcode\n    size = 1\n\n  // 8 bit\n  } else if (opcode === OPS.OP_PUSHDATA1) {\n    if (offset + 2 > buffer.length) return null\n    number = buffer.readUInt8(offset + 1)\n    size = 2\n\n  // 16 bit\n  } else if (opcode === OPS.OP_PUSHDATA2) {\n    if (offset + 3 > buffer.length) return null\n    number = buffer.readUInt16LE(offset + 1)\n    size = 3\n\n  // 32 bit\n  } else {\n    if (offset + 5 > buffer.length) return null\n    if (opcode !== OPS.OP_PUSHDATA4) throw new Error('Unexpected opcode')\n\n    number = buffer.readUInt32LE(offset + 1)\n    size = 5\n  }\n\n  return {\n    opcode: opcode,\n    number: number,\n    size: size\n  }\n}\n\nmodule.exports = {\n  encodingLength: encodingLength,\n  encode: encode,\n  decode: decode\n}\n"],"mappings":"AAAA,IAAIA,GAAG,GAAGC,OAAO,CAAC,aAAa,CAAC;AAEhC,SAASC,cAAcA,CAAEC,CAAC,EAAE;EAC1B,OAAOA,CAAC,GAAGH,GAAG,CAACI,YAAY,GAAG,CAAC,GAC7BD,CAAC,IAAI,IAAI,GAAG,CAAC,GACbA,CAAC,IAAI,MAAM,GAAG,CAAC,GACf,CAAC;AACL;AAEA,SAASE,MAAMA,CAAEC,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAE;EACvC,IAAIC,IAAI,GAAGP,cAAc,CAACK,MAAM,CAAC;;EAEjC;EACA,IAAIE,IAAI,KAAK,CAAC,EAAE;IACdH,MAAM,CAACI,UAAU,CAACH,MAAM,EAAEC,MAAM,CAAC;;IAEnC;EACA,CAAC,MAAM,IAAIC,IAAI,KAAK,CAAC,EAAE;IACrBH,MAAM,CAACI,UAAU,CAACV,GAAG,CAACI,YAAY,EAAEI,MAAM,CAAC;IAC3CF,MAAM,CAACI,UAAU,CAACH,MAAM,EAAEC,MAAM,GAAG,CAAC,CAAC;;IAEvC;EACA,CAAC,MAAM,IAAIC,IAAI,KAAK,CAAC,EAAE;IACrBH,MAAM,CAACI,UAAU,CAACV,GAAG,CAACW,YAAY,EAAEH,MAAM,CAAC;IAC3CF,MAAM,CAACM,aAAa,CAACL,MAAM,EAAEC,MAAM,GAAG,CAAC,CAAC;;IAE1C;EACA,CAAC,MAAM;IACLF,MAAM,CAACI,UAAU,CAACV,GAAG,CAACa,YAAY,EAAEL,MAAM,CAAC;IAC3CF,MAAM,CAACQ,aAAa,CAACP,MAAM,EAAEC,MAAM,GAAG,CAAC,CAAC;EAC1C;EAEA,OAAOC,IAAI;AACb;AAEA,SAASM,MAAMA,CAAET,MAAM,EAAEE,MAAM,EAAE;EAC/B,IAAIQ,MAAM,GAAGV,MAAM,CAACW,SAAS,CAACT,MAAM,CAAC;EACrC,IAAID,MAAM,EAAEE,IAAI;;EAEhB;EACA,IAAIO,MAAM,GAAGhB,GAAG,CAACI,YAAY,EAAE;IAC7BG,MAAM,GAAGS,MAAM;IACfP,IAAI,GAAG,CAAC;;IAEV;EACA,CAAC,MAAM,IAAIO,MAAM,KAAKhB,GAAG,CAACI,YAAY,EAAE;IACtC,IAAII,MAAM,GAAG,CAAC,GAAGF,MAAM,CAACY,MAAM,EAAE,OAAO,IAAI;IAC3CX,MAAM,GAAGD,MAAM,CAACW,SAAS,CAACT,MAAM,GAAG,CAAC,CAAC;IACrCC,IAAI,GAAG,CAAC;;IAEV;EACA,CAAC,MAAM,IAAIO,MAAM,KAAKhB,GAAG,CAACW,YAAY,EAAE;IACtC,IAAIH,MAAM,GAAG,CAAC,GAAGF,MAAM,CAACY,MAAM,EAAE,OAAO,IAAI;IAC3CX,MAAM,GAAGD,MAAM,CAACa,YAAY,CAACX,MAAM,GAAG,CAAC,CAAC;IACxCC,IAAI,GAAG,CAAC;;IAEV;EACA,CAAC,MAAM;IACL,IAAID,MAAM,GAAG,CAAC,GAAGF,MAAM,CAACY,MAAM,EAAE,OAAO,IAAI;IAC3C,IAAIF,MAAM,KAAKhB,GAAG,CAACa,YAAY,EAAE,MAAM,IAAIO,KAAK,CAAC,mBAAmB,CAAC;IAErEb,MAAM,GAAGD,MAAM,CAACe,YAAY,CAACb,MAAM,GAAG,CAAC,CAAC;IACxCC,IAAI,GAAG,CAAC;EACV;EAEA,OAAO;IACLO,MAAM,EAAEA,MAAM;IACdT,MAAM,EAAEA,MAAM;IACdE,IAAI,EAAEA;EACR,CAAC;AACH;AAEAa,MAAM,CAACC,OAAO,GAAG;EACfrB,cAAc,EAAEA,cAAc;EAC9BG,MAAM,EAAEA,MAAM;EACdU,MAAM,EAAEA;AACV,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script"}