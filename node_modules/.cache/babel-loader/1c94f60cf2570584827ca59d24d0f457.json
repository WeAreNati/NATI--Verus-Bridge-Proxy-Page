{"ast":null,"code":"import React from'react';import Grid from'@mui/material/Grid';import Typography from'@mui/material/Typography';import useSWR from'swr';import{VerusdRpcInterface}from'verusd-rpc-ts-client';import{GLOBAL_IADDRESS}from'constants/contractAddress';import{ReactComponent as Chevron}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../images/icons/chevron-icon.svg\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const CoinGeckoVRSC='https://api.coingecko.com/api/v3/coins/verus-coin';const CoinGeckoETH='https://api.coingecko.com/api/v3/coins/ethereum';const CoinGeckotBTC='https://api.coingecko.com/api/v3/coins/tbtc';const CoinGeckoARRR='https://api.coingecko.com/api/v3/coins/pirate-chain';const urls=[CoinGeckoVRSC,CoinGeckoETH,CoinGeckotBTC,CoinGeckoARRR];const verusd=new VerusdRpcInterface(GLOBAL_IADDRESS.VRSC,process.env.REACT_APP_VERUS_RPC_URL);const blockNumber=process.env.REACT_APP_VERUS_END_BLOCK||'0';const getDetails=res=>{const bestState=res.result.bestcurrencystate;const currencyNames=res.result.currencynames;const currencies=bestState.reservecurrencies;const count=currencies.length;const{supply}=bestState;return{bestState,currencyNames,count,supply};};const fetchConversion=async()=>{var _res$result;const res=await verusd.getCurrency('bridge.varrr');const vrscbridge=await verusd.getCurrency('bridge.veth');console.log(res);const info=await verusd.getInfo();const vrscbridgedetails=getDetails(vrscbridge);const block=info.result.longestchain;const bestState=res.result.bestcurrencystate;const currencyNames=res.result.currencynames;const currencies=bestState.reservecurrencies;const count=currencies.length;const{supply}=bestState;const blockdiff=blockNumber-block;const tbtcKey=Object.keys(res===null||res===void 0?void 0:(_res$result=res.result)===null||_res$result===void 0?void 0:_res$result.currencynames).find(key=>currencyNames!==undefined&&currencyNames[key]==='tBTC');const tbtcAmount=currencies.find(c=>c.currencyid===tbtcKey).reserves;let list=currencies.map(token=>({name:currencyNames[token.currencyid],amount:token.reserves,tbtcPrice:tbtcAmount/token.reserves}));const bridge={name:'Bridge.vARRR',amount:supply,tbtcPrice:tbtcAmount*count/supply};let conversions=[{symbol:'vrsc',price:0},{symbol:'eth',price:0},{symbol:'tBTC',price:0},{symbol:'arrr',price:0}];try{conversions=await Promise.all(urls.map(async url=>fetch(url).then(res=>res.json()).then(c=>({symbol:c.symbol,price:c.market_data.current_price.usd}))));console.log(\"WORKED\");}catch(error){console.log(\"ERROR\");// eslint-disable-next-line no-console\nconsole.error('%s: fetching prices %s',Date().toString(),error);}list=list.map(token=>{var _conversions$find,_conversions$find2,_conversions$find3,_conversions$find4;switch(token.name){case'VRSCTEST':case'VRSC':return{...token,price:(_conversions$find=conversions.find(c=>c.symbol==='vrsc'))===null||_conversions$find===void 0?void 0:_conversions$find.price};case'Bridge.vETH':return{...token,price:(_conversions$find2=conversions.find(c=>c.symbol==='bridge'))===null||_conversions$find2===void 0?void 0:_conversions$find2.price};case'vARRR':return{...token,price:(_conversions$find3=conversions.find(c=>c.symbol==='arrr'))===null||_conversions$find3===void 0?void 0:_conversions$find3.price};case'tBTC':return{...token,price:(_conversions$find4=conversions.find(c=>c.symbol==='tbtc'))===null||_conversions$find4===void 0?void 0:_conversions$find4.price};// return { ...token, price: vrscPrice }\ndefault:return{...token};}});return{list,bridge,blockdiff,currencies};};const StatsGrid=()=>{const{data:conversionList}=useSWR(\"fetchConversion\",fetchConversion,{refreshInterval:60000// every minute\n});if(!conversionList)return null;return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Grid,{container:true,className:\"blueRowTitle\",children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:4,children:/*#__PURE__*/_jsx(Typography,{sx:{fontSize:'12px',fontWeight:'bold'},children:\"Liquidity pool\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:4,textAlign:\"right\",children:/*#__PURE__*/_jsx(Typography,{sx:{fontSize:'12px',fontWeight:'bold'},children:\"Supply\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:4,textAlign:\"right\",children:/*#__PURE__*/_jsx(Typography,{sx:{fontSize:'12px',fontWeight:'bold'},children:\"Price in tBTC\"})})]}),/*#__PURE__*/_jsxs(Grid,{container:true,className:\"blueRow\",mb:5,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:4,children:/*#__PURE__*/_jsx(Typography,{sx:{color:'#3165d4',fontWeight:'bold'},children:conversionList.bridge.name})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:4,textAlign:\"right\",children:/*#__PURE__*/_jsxs(Typography,{sx:{color:'#3165d4',fontWeight:'bold'},children:[\" \",Intl.NumberFormat('en-US',{style:'decimal',maximumFractionDigits:0}).format(conversionList.bridge.amount)]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:4,textAlign:\"right\",children:/*#__PURE__*/_jsx(Typography,{sx:{color:'#3165d4',fontWeight:'bold'},children:Intl.NumberFormat('en-US',{style:'decimal',maximumFractionDigits:8,minimumFractionDigits:3}).format(conversionList.bridge.tbtcPrice)})})]}),/*#__PURE__*/_jsxs(Grid,{container:true,className:\"blueRowTitle\",children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:3,children:/*#__PURE__*/_jsxs(Typography,{sx:{fontSize:'12px',fontWeight:'bold'},children:[\"Bridge.vETH\",/*#__PURE__*/_jsx(\"br\",{}),\"reserve currencies\"]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:3,textAlign:\"right\",children:/*#__PURE__*/_jsx(Typography,{sx:{fontSize:'12px',fontWeight:'bold'},children:\"in reserves\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:3,textAlign:\"right\",children:/*#__PURE__*/_jsx(Typography,{sx:{fontSize:'12px',fontWeight:'bold'},children:\"Price in tBTC\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:3,textAlign:\"right\",children:/*#__PURE__*/_jsxs(Typography,{sx:{fontSize:'12px',fontWeight:'bold'},children:[\"Compared to\",/*#__PURE__*/_jsx(\"br\",{}),\"CoinGecko\"]})})]}),conversionList.list&&conversionList.list.map(token=>{// eslint-disable-next-line no-nested-ternary\nconst rate=token.tbtcPrice<token.price?'less':token.tbtcPrice>token.price?'greater':'equal';const percent=Math.abs(token.tbtcPrice*conversionList.list[3].price/token.price)-1;return/*#__PURE__*/_jsxs(Grid,{container:true,className:\"blueRow\",children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:3,children:/*#__PURE__*/_jsx(Typography,{sx:{color:'#3165d4',fontWeight:'bold'},children:token.name})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:3,textAlign:\"right\",children:/*#__PURE__*/_jsx(Typography,{sx:{color:'rgba(49, 101, 212, 0.59)',fontWeight:'bold'},children:Intl.NumberFormat('en-US',{style:'decimal',maximumFractionDigits:3,minimumFractionDigits:3}).format(token.amount)})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:3,textAlign:\"right\",children:/*#__PURE__*/_jsx(Typography,{sx:{color:'#3165d4',fontWeight:'bold'},children:Intl.NumberFormat('en-US',{style:'decimal',maximumFractionDigits:8,minimumFractionDigits:2}).format(token.tbtcPrice)})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:3,textAlign:\"right\",children:/*#__PURE__*/_jsxs(Typography,{className:rate,noWrap:true,children:[/*#__PURE__*/_jsx(Chevron,{}),Intl.NumberFormat('en-US',{style:'percent',maximumFractionDigits:2,minimumFractionDigits:2}).format(Math.abs(percent))]})})]},token.name);}),/*#__PURE__*/_jsx(Grid,{container:true,className:\"white\",mb:5,children:\" \"}),/*#__PURE__*/_jsxs(Grid,{container:true,className:\"blueRow\",mb:5,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:6,children:/*#__PURE__*/_jsx(Typography,{sx:{color:'#3165d4',fontWeight:'bold'},children:\"Total Value of Liquidity\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:6,textAlign:\"right\",children:/*#__PURE__*/_jsxs(Typography,{sx:{color:'#3165d4',fontWeight:'bold'},children:[Intl.NumberFormat('en-US',{style:'decimal',maximumFractionDigits:3,minimumFractionDigits:3}).format(conversionList.bridge.tbtcPrice*conversionList.bridge.amount),\" tBTC\"]})})]})]});};export default StatsGrid;","map":{"version":3,"names":["React","Grid","Typography","useSWR","VerusdRpcInterface","GLOBAL_IADDRESS","ReactComponent","Chevron","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","CoinGeckoVRSC","CoinGeckoETH","CoinGeckotBTC","CoinGeckoARRR","urls","verusd","VRSC","process","env","REACT_APP_VERUS_RPC_URL","blockNumber","REACT_APP_VERUS_END_BLOCK","getDetails","res","bestState","result","bestcurrencystate","currencyNames","currencynames","currencies","reservecurrencies","count","length","supply","fetchConversion","_res$result","getCurrency","vrscbridge","console","log","info","getInfo","vrscbridgedetails","block","longestchain","blockdiff","tbtcKey","Object","keys","find","key","undefined","tbtcAmount","c","currencyid","reserves","list","map","token","name","amount","tbtcPrice","bridge","conversions","symbol","price","Promise","all","url","fetch","then","json","market_data","current_price","usd","error","Date","toString","_conversions$find","_conversions$find2","_conversions$find3","_conversions$find4","StatsGrid","data","conversionList","refreshInterval","children","container","className","item","xs","sx","fontSize","fontWeight","textAlign","mb","color","Intl","NumberFormat","style","maximumFractionDigits","format","minimumFractionDigits","rate","percent","Math","abs","noWrap"],"sources":["/Users/oddfl3x/Code/varB/vARRRBridgeWebsite-main/src/components/StatsGrid/StatsGrid.jsx"],"sourcesContent":["import React from 'react'\n\nimport Grid from '@mui/material/Grid'\nimport Typography from '@mui/material/Typography'\nimport useSWR from 'swr'\nimport { VerusdRpcInterface } from 'verusd-rpc-ts-client'\n\nimport { GLOBAL_IADDRESS } from 'constants/contractAddress';\n\nimport { ReactComponent as Chevron } from '../../images/icons/chevron-icon.svg'\n\nconst CoinGeckoVRSC = 'https://api.coingecko.com/api/v3/coins/verus-coin'\nconst CoinGeckoETH = 'https://api.coingecko.com/api/v3/coins/ethereum'\nconst CoinGeckotBTC = 'https://api.coingecko.com/api/v3/coins/tbtc'\nconst CoinGeckoARRR = 'https://api.coingecko.com/api/v3/coins/pirate-chain'\n\nconst urls = [CoinGeckoVRSC, CoinGeckoETH, CoinGeckotBTC, CoinGeckoARRR]\n\nconst verusd = new VerusdRpcInterface(GLOBAL_IADDRESS.VRSC, process.env.REACT_APP_VERUS_RPC_URL)\n\nconst blockNumber = process.env.REACT_APP_VERUS_END_BLOCK || '0'\n\nconst getDetails = (res) => {\n  const bestState = res.result.bestcurrencystate\n  const currencyNames = res.result.currencynames\n  const currencies = bestState.reservecurrencies\n  const count = currencies.length\n  const { supply } = bestState\n\n  return { bestState, currencyNames, count, supply }\n}\n\n\n\nconst fetchConversion = async () => {\n  const res = await verusd.getCurrency('bridge.varrr');\n  const vrscbridge = await verusd.getCurrency('bridge.veth')\n  console.log(res)\nconst info = await verusd.getInfo()\n  const vrscbridgedetails = getDetails(vrscbridge);\n\n  const block = info.result.longestchain\n\n  const bestState = res.result.bestcurrencystate\n  const currencyNames = res.result.currencynames\n  const currencies = bestState.reservecurrencies\n  const count = currencies.length\n  const { supply } = bestState\n  const blockdiff = blockNumber - block\n  const tbtcKey = Object.keys(res?.result?.currencynames).find((key) => currencyNames !== undefined && currencyNames[key] === 'tBTC')\n  const tbtcAmount = currencies.find(c => c.currencyid === tbtcKey).reserves\n\n  let list = currencies.map((token) => ({ name: currencyNames[token.currencyid], amount: token.reserves, tbtcPrice: tbtcAmount / token.reserves }))\n  const bridge = { name: 'Bridge.vARRR', amount: supply, tbtcPrice: (tbtcAmount * count) / supply }\n\n  let conversions = [\n    { symbol: 'vrsc', price: 0 },\n    { symbol: 'eth', price: 0 },\n    { symbol: 'tBTC', price: 0 },\n    { symbol: 'arrr', price: 0 }\n  ]\n\n  try {\n    conversions = await Promise.all(\n      urls.map(async (url) => fetch(url)\n        .then((res) => res.json())\n        .then((c) => ({\n          symbol: c.symbol,\n          price: c.market_data.current_price.usd\n        })))\n    )\n\n    console.log(\"WORKED\");\n  } catch (error) {\n    console.log(\"ERROR\");\n    // eslint-disable-next-line no-console\n    console.error('%s: fetching prices %s', Date().toString(), error)\n  }\n  list = list.map((token) => {\n    switch (token.name) {\n      case 'VRSCTEST':\n      case 'VRSC':\n        return {\n          ...token,\n          price:\n            conversions.find((c) => c.symbol === 'vrsc')?.price\n        }\n      case 'Bridge.vETH':\n        return {\n          ...token,\n          price: conversions.find((c) => c.symbol === 'bridge')?.price\n        }\n      case 'vARRR':\n        return {\n          ...token,\n          price: conversions.find((c) => c.symbol === 'arrr')?.price\n        }\n      case 'tBTC':\n        return {\n          ...token,\n          price: conversions.find((c) => c.symbol === 'tbtc')?.price\n        }\n      // return { ...token, price: vrscPrice }\n      default:\n        return { ...token }\n    }\n  })\n  return { list, bridge, blockdiff, currencies }\n}\n\nconst StatsGrid = () => {\n\n  const { data: conversionList } = useSWR(\"fetchConversion\", fetchConversion, {\n    refreshInterval: 60_000 // every minute\n  })\n\n  if (!conversionList) return null\n\n  return (\n    <>\n      <Grid container className=\"blueRowTitle\" >\n        <Grid item xs={4}><Typography sx={{ fontSize: '12px', fontWeight: 'bold' }}>Liquidity pool</Typography></Grid>\n\n        <Grid item xs={4} textAlign=\"right\"><Typography sx={{ fontSize: '12px', fontWeight: 'bold' }}>Supply</Typography></Grid>\n        <Grid item xs={4} textAlign=\"right\"><Typography sx={{ fontSize: '12px', fontWeight: 'bold' }}>Price in tBTC</Typography></Grid>\n      </Grid>\n\n      <Grid container className='blueRow' mb={5}>\n        <Grid item xs={4}><Typography sx={{ color: '#3165d4', fontWeight: 'bold' }}>{conversionList.bridge.name}</Typography></Grid>\n        <Grid item xs={4} textAlign=\"right\"><Typography sx={{ color: '#3165d4', fontWeight: 'bold' }}> {Intl.NumberFormat('en-US', {\n          style: 'decimal',\n          maximumFractionDigits: 0\n        }).format(conversionList.bridge.amount)}</Typography></Grid>\n        <Grid item xs={4} textAlign=\"right\"><Typography sx={{ color: '#3165d4', fontWeight: 'bold' }}>{Intl.NumberFormat('en-US', {\n          style: 'decimal',\n          maximumFractionDigits: 8,\n          minimumFractionDigits: 3\n        }).format(conversionList.bridge.tbtcPrice)}</Typography></Grid>\n      </Grid>\n\n      <Grid container className=\"blueRowTitle\" >\n        <Grid item xs={3}><Typography sx={{ fontSize: '12px', fontWeight: 'bold' }}>Bridge.vETH<br />reserve currencies</Typography></Grid>\n        <Grid item xs={3} textAlign=\"right\"><Typography sx={{ fontSize: '12px', fontWeight: 'bold' }}>in reserves</Typography></Grid>\n        <Grid item xs={3} textAlign=\"right\"><Typography sx={{ fontSize: '12px', fontWeight: 'bold' }}>Price in tBTC</Typography></Grid>\n        <Grid item xs={3} textAlign=\"right\"><Typography sx={{ fontSize: '12px', fontWeight: 'bold' }}>Compared to<br />CoinGecko</Typography></Grid>\n      </Grid>\n      {conversionList.list && conversionList.list.map((token) => {\n        // eslint-disable-next-line no-nested-ternary\n        const rate = token.tbtcPrice < token.price ? 'less' : token.tbtcPrice > token.price ? 'greater' : 'equal'\n        const percent = Math.abs((token.tbtcPrice * conversionList.list[3].price) / token.price) - 1\n\n        return (\n          <Grid container className=\"blueRow\" key={token.name}>\n            <Grid item xs={3}><Typography sx={{ color: '#3165d4', fontWeight: 'bold' }}>{token.name}</Typography></Grid>\n            <Grid item xs={3} textAlign=\"right\">\n              <Typography sx={{ color: 'rgba(49, 101, 212, 0.59)', fontWeight: 'bold' }}>\n                {Intl.NumberFormat('en-US', {\n                  style: 'decimal',\n                  maximumFractionDigits: 3,\n                  minimumFractionDigits: 3\n                }).format(token.amount)}\n              </Typography>\n            </Grid>\n            <Grid item xs={3} textAlign=\"right\">\n              <Typography sx={{ color: '#3165d4', fontWeight: 'bold' }}>\n                {Intl.NumberFormat('en-US', {\n                  style: 'decimal',\n                  maximumFractionDigits: 8,\n                  minimumFractionDigits: 2\n                }).format(token.tbtcPrice)}\n              </Typography></Grid>\n            <Grid item xs={3} textAlign=\"right\">\n              <Typography className={rate} noWrap>\n                <Chevron />\n                {Intl.NumberFormat('en-US', {\n                  style: 'percent',\n                  maximumFractionDigits: 2,\n                  minimumFractionDigits: 2\n                }).format(Math.abs(percent))}</Typography></Grid>\n          </Grid >\n        )\n      })}\n      <Grid container className='white' mb={5}> </Grid>\n      <Grid container className='blueRow' mb={5}>\n        <Grid item xs={6}><Typography sx={{ color: '#3165d4', fontWeight: 'bold' }}>Total Value of Liquidity</Typography></Grid>\n\n        <Grid item xs={6} textAlign=\"right\"><Typography sx={{ color: '#3165d4', fontWeight: 'bold' }}>{Intl.NumberFormat('en-US', {\n          style: 'decimal',\n          maximumFractionDigits: 3,\n          minimumFractionDigits: 3\n        }).format(conversionList.bridge.tbtcPrice * conversionList.bridge.amount)} tBTC</Typography></Grid>\n      </Grid>\n    </>\n  )\n}\n\nexport default StatsGrid\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}