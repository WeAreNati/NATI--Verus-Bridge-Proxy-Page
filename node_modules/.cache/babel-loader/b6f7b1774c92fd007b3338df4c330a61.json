{"ast":null,"code":"import React,{useEffect}from'react';import{Button}from'@mui/material';import{UnsupportedChainIdError,useWeb3React}from'@web3-react/core';import{NoEthereumProviderError,UserRejectedRequestError}from'@web3-react/injected-connector';import{useToast}from'./Toast/ToastProvider';import{ID_NAME_MAPPING}from'../constants/chain';import{jsx as _jsx}from\"react/jsx-runtime\";const ConnectButton=_ref=>{let{onClick}=_ref;const{account,chainId,error}=useWeb3React();const{addToast}=useToast();useEffect(()=>{if(error instanceof NoEthereumProviderError){addToast({type:'error',description:'Ethereum was not provided.'});}else if(error instanceof UserRejectedRequestError){addToast({type:'error',description:'User rejected the connection'});}else if(error instanceof UnsupportedChainIdError){addToast({type:'error',description:'Metamask is not supporting the chain you are using. Please change your network on your Metamask.'});}},[error]);return/*#__PURE__*/_jsx(Button,{variant:\"outlined\",onClick:onClick,children:account?\"\".concat(account.substr(0,6),\"...\").concat(account.substr(account.length-4),\" (\").concat(ID_NAME_MAPPING[chainId].title,\")\"):'Connect Wallet'});};export default ConnectButton;","map":{"version":3,"names":["React","useEffect","Button","UnsupportedChainIdError","useWeb3React","NoEthereumProviderError","UserRejectedRequestError","useToast","ID_NAME_MAPPING","jsx","_jsx","ConnectButton","_ref","onClick","account","chainId","error","addToast","type","description","variant","children","concat","substr","length","title"],"sources":["/Users/oddfl3x/Code/varB/vARRRBridgeWebsite-main/src/components/ConnectButton.jsx"],"sourcesContent":["import React, { useEffect } from 'react'\n\nimport { Button } from '@mui/material';\nimport { UnsupportedChainIdError, useWeb3React } from '@web3-react/core';\nimport { NoEthereumProviderError, UserRejectedRequestError } from '@web3-react/injected-connector';\n\nimport { useToast } from './Toast/ToastProvider';\nimport { ID_NAME_MAPPING } from '../constants/chain';\n\nconst ConnectButton = ({ onClick }) => {\n  const { account, chainId, error } = useWeb3React();\n  const { addToast } = useToast();\n\n  useEffect(() => {\n    if (error instanceof NoEthereumProviderError) {\n      addToast({ type: 'error', description: 'Ethereum was not provided.' })\n    } else if (error instanceof UserRejectedRequestError) {\n      addToast({ type: 'error', description: 'User rejected the connection' })\n    } else if (error instanceof UnsupportedChainIdError) {\n      addToast({ type: 'error', description: 'Metamask is not supporting the chain you are using. Please change your network on your Metamask.' })\n    }\n  }, [error])\n\n  return (\n    <Button\n      variant=\"outlined\"\n      onClick={onClick}\n    >\n      {account ? `${account.substr(0, 6)}...${account.substr(account.length - 4)} (${ID_NAME_MAPPING[chainId].title})` : 'Connect Wallet'}\n    </Button>\n  )\n}\n\nexport default ConnectButton\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,KAAQ,OAAO,CAExC,OAASC,MAAM,KAAQ,eAAe,CACtC,OAASC,uBAAuB,CAAEC,YAAY,KAAQ,kBAAkB,CACxE,OAASC,uBAAuB,CAAEC,wBAAwB,KAAQ,gCAAgC,CAElG,OAASC,QAAQ,KAAQ,uBAAuB,CAChD,OAASC,eAAe,KAAQ,oBAAoB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAErD,KAAM,CAAAC,aAAa,CAAGC,IAAA,EAAiB,IAAhB,CAAEC,OAAQ,CAAC,CAAAD,IAAA,CAChC,KAAM,CAAEE,OAAO,CAAEC,OAAO,CAAEC,KAAM,CAAC,CAAGZ,YAAY,CAAC,CAAC,CAClD,KAAM,CAAEa,QAAS,CAAC,CAAGV,QAAQ,CAAC,CAAC,CAE/BN,SAAS,CAAC,IAAM,CACd,GAAIe,KAAK,WAAY,CAAAX,uBAAuB,CAAE,CAC5CY,QAAQ,CAAC,CAAEC,IAAI,CAAE,OAAO,CAAEC,WAAW,CAAE,4BAA6B,CAAC,CAAC,CACxE,CAAC,IAAM,IAAIH,KAAK,WAAY,CAAAV,wBAAwB,CAAE,CACpDW,QAAQ,CAAC,CAAEC,IAAI,CAAE,OAAO,CAAEC,WAAW,CAAE,8BAA+B,CAAC,CAAC,CAC1E,CAAC,IAAM,IAAIH,KAAK,WAAY,CAAAb,uBAAuB,CAAE,CACnDc,QAAQ,CAAC,CAAEC,IAAI,CAAE,OAAO,CAAEC,WAAW,CAAE,kGAAmG,CAAC,CAAC,CAC9I,CACF,CAAC,CAAE,CAACH,KAAK,CAAC,CAAC,CAEX,mBACEN,IAAA,CAACR,MAAM,EACLkB,OAAO,CAAC,UAAU,CAClBP,OAAO,CAAEA,OAAQ,CAAAQ,QAAA,CAEhBP,OAAO,IAAAQ,MAAA,CAAMR,OAAO,CAACS,MAAM,CAAC,CAAC,CAAE,CAAC,CAAC,QAAAD,MAAA,CAAMR,OAAO,CAACS,MAAM,CAACT,OAAO,CAACU,MAAM,CAAG,CAAC,CAAC,OAAAF,MAAA,CAAKd,eAAe,CAACO,OAAO,CAAC,CAACU,KAAK,MAAM,gBAAgB,CAC7H,CAAC,CAEb,CAAC,CAED,cAAe,CAAAd,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module"}