{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Request = void 0;\nconst __1 = require(\"../\");\nconst keys_1 = require(\"../keys\");\nconst Challenge_1 = require(\"./Challenge\");\nconst Hash160_1 = require(\"./Hash160\");\nconst bufferutils_1 = require(\"../../utils/bufferutils\");\nconst vdxf_1 = require(\"../../constants/vdxf\");\nconst address_1 = require(\"../../utils/address\");\nconst createHash = require(\"create-hash\");\nconst base64url_1 = require(\"base64url\");\nclass Request extends __1.VDXFObject {\n  constructor(request = {\n    system_id: \"\",\n    signing_id: \"\",\n    challenge: new Challenge_1.Challenge()\n  }, vdxfkey = __1.LOGIN_CONSENT_REQUEST_VDXF_KEY.vdxfid) {\n    super(vdxfkey);\n    this.system_id = request.system_id;\n    this.signing_id = request.signing_id;\n    this.signature = request.signature ? new __1.VerusIDSignature(request.signature, keys_1.IDENTITY_AUTH_SIG_VDXF_KEY) : undefined;\n    this.challenge = new Challenge_1.Challenge(request.challenge);\n  }\n  getChallengeHash(signedBlockheight, signatureVersion = 2) {\n    var heightBufferWriter = new bufferutils_1.default.BufferWriter(Buffer.allocUnsafe(4));\n    heightBufferWriter.writeUInt32(signedBlockheight);\n    if (signatureVersion === 1) {\n      return createHash(\"sha256\").update(vdxf_1.VERUS_DATA_SIGNATURE_PREFIX).update((0, address_1.fromBase58Check)(this.system_id).hash).update(heightBufferWriter.buffer).update((0, address_1.fromBase58Check)(this.signing_id).hash).update(this.challenge.toSha256()).digest();\n    } else {\n      return createHash(\"sha256\").update((0, address_1.fromBase58Check)(this.system_id).hash).update(heightBufferWriter.buffer).update((0, address_1.fromBase58Check)(this.signing_id).hash).update(vdxf_1.VERUS_DATA_SIGNATURE_PREFIX).update(this.challenge.toSha256()).digest();\n    }\n  }\n  toJson() {\n    return {\n      vdxfkey: this.vdxfkey,\n      system_id: this.system_id,\n      signing_id: this.signing_id,\n      signature: this.signature ? this.signature.toJson() : this.signature,\n      challenge: this.challenge.toJson()\n    };\n  }\n  _dataByteLength(signer = this.signing_id) {\n    let length = 0;\n    const _signing_id = Hash160_1.Hash160.fromAddress(signer);\n    const _signature = this.signature ? this.signature : new __1.VerusIDSignature({\n      signature: \"\"\n    }, keys_1.IDENTITY_AUTH_SIG_VDXF_KEY);\n    if (this.vdxfkey === __1.LOGIN_CONSENT_REQUEST_VDXF_KEY.vdxfid) {\n      const _system_id = Hash160_1.Hash160.fromAddress(this.system_id);\n      length += _system_id.byteLength();\n    }\n    length += _signing_id.byteLength();\n    length += _signature.byteLength();\n    length += this.challenge.byteLength();\n    return length;\n  }\n  _toDataBuffer(signer = this.signing_id) {\n    const writer = new bufferutils_1.default.BufferWriter(Buffer.alloc(this.dataByteLength()));\n    const _signing_id = Hash160_1.Hash160.fromAddress(signer);\n    const _signature = this.signature ? this.signature : new __1.VerusIDSignature({\n      signature: \"\"\n    }, keys_1.IDENTITY_AUTH_SIG_VDXF_KEY);\n    if (this.vdxfkey === __1.LOGIN_CONSENT_REQUEST_VDXF_KEY.vdxfid) {\n      const _system_id = Hash160_1.Hash160.fromAddress(this.system_id);\n      writer.writeSlice(_system_id.toBuffer());\n    }\n    writer.writeSlice(_signing_id.toBuffer());\n    writer.writeSlice(_signature.toBuffer());\n    writer.writeSlice(this.challenge.toBuffer());\n    return writer.buffer;\n  }\n  dataByteLength() {\n    return this._dataByteLength();\n  }\n  toDataBuffer() {\n    return this._toDataBuffer();\n  }\n  _fromDataBuffer(buffer, offset) {\n    const reader = new bufferutils_1.default.BufferReader(buffer, offset);\n    const reqLength = reader.readCompactSize();\n    if (reqLength == 0) {\n      throw new Error(\"Cannot create request from empty buffer\");\n    } else {\n      if (this.vdxfkey === __1.LOGIN_CONSENT_REQUEST_VDXF_KEY.vdxfid) {\n        this.system_id = (0, address_1.toBase58Check)(reader.readSlice(vdxf_1.HASH160_BYTE_LENGTH), vdxf_1.I_ADDR_VERSION);\n      }\n      this.signing_id = (0, address_1.toBase58Check)(reader.readSlice(vdxf_1.HASH160_BYTE_LENGTH), this.vdxfkey === __1.LOGIN_CONSENT_REQUEST_VDXF_KEY.vdxfid ? vdxf_1.I_ADDR_VERSION : vdxf_1.R_ADDR_VERSION);\n      const _sig = new __1.VerusIDSignature();\n      reader.offset = _sig.fromBuffer(reader.buffer, reader.offset);\n      this.signature = _sig;\n      if (this.vdxfkey === __1.LOGIN_CONSENT_REQUEST_VDXF_KEY.vdxfid) {\n        const _challenge = new Challenge_1.Challenge();\n        reader.offset = _challenge.fromBuffer(reader.buffer, reader.offset);\n        this.challenge = _challenge;\n      }\n    }\n    return reader.offset;\n  }\n  fromDataBuffer(buffer, offset) {\n    return this._fromDataBuffer(buffer, offset);\n  }\n  toWalletDeeplinkUri() {\n    if (this.signature == null) throw new Error(\"Request must be signed before it can be used as a deep link\");\n    return `${__1.WALLET_VDXF_KEY.vdxfid.toLowerCase()}://x-callback-url/${__1.LOGIN_CONSENT_REQUEST_VDXF_KEY.vdxfid}/?${__1.LOGIN_CONSENT_REQUEST_VDXF_KEY.vdxfid}=${this.toString()}`;\n  }\n  static fromWalletDeeplinkUri(uri) {\n    const split = uri.split(`${__1.LOGIN_CONSENT_REQUEST_VDXF_KEY.vdxfid}=`);\n    const req = new Request();\n    req.fromBuffer(base64url_1.default.toBuffer(split[1]));\n    return req;\n  }\n  toQrString() {\n    if (this.signature == null) throw new Error(\"Request must be signed before it can be used as a deep link\");\n    return this.toString(true);\n  }\n  static fromQrString(qrstring) {\n    const req = new Request();\n    req.fromBuffer(base64url_1.default.toBuffer(qrstring));\n    return req;\n  }\n}\nexports.Request = Request;","map":{"version":3,"names":["Object","defineProperty","exports","value","Request","__1","require","keys_1","Challenge_1","Hash160_1","bufferutils_1","vdxf_1","address_1","createHash","base64url_1","VDXFObject","constructor","request","system_id","signing_id","challenge","Challenge","vdxfkey","LOGIN_CONSENT_REQUEST_VDXF_KEY","vdxfid","signature","VerusIDSignature","IDENTITY_AUTH_SIG_VDXF_KEY","undefined","getChallengeHash","signedBlockheight","signatureVersion","heightBufferWriter","default","BufferWriter","Buffer","allocUnsafe","writeUInt32","update","VERUS_DATA_SIGNATURE_PREFIX","fromBase58Check","hash","buffer","toSha256","digest","toJson","_dataByteLength","signer","length","_signing_id","Hash160","fromAddress","_signature","_system_id","byteLength","_toDataBuffer","writer","alloc","dataByteLength","writeSlice","toBuffer","toDataBuffer","_fromDataBuffer","offset","reader","BufferReader","reqLength","readCompactSize","Error","toBase58Check","readSlice","HASH160_BYTE_LENGTH","I_ADDR_VERSION","R_ADDR_VERSION","_sig","fromBuffer","_challenge","fromDataBuffer","toWalletDeeplinkUri","WALLET_VDXF_KEY","toLowerCase","toString","fromWalletDeeplinkUri","uri","split","req","toQrString","fromQrString","qrstring"],"sources":["/Users/oddfl3x/Code/varB/NATIBridgeWebsite-main/node_modules/verus-typescript-primitives/dist/vdxf/classes/Request.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Request = void 0;\nconst __1 = require(\"../\");\nconst keys_1 = require(\"../keys\");\nconst Challenge_1 = require(\"./Challenge\");\nconst Hash160_1 = require(\"./Hash160\");\nconst bufferutils_1 = require(\"../../utils/bufferutils\");\nconst vdxf_1 = require(\"../../constants/vdxf\");\nconst address_1 = require(\"../../utils/address\");\nconst createHash = require(\"create-hash\");\nconst base64url_1 = require(\"base64url\");\nclass Request extends __1.VDXFObject {\n    constructor(request = {\n        system_id: \"\",\n        signing_id: \"\",\n        challenge: new Challenge_1.Challenge(),\n    }, vdxfkey = __1.LOGIN_CONSENT_REQUEST_VDXF_KEY.vdxfid) {\n        super(vdxfkey);\n        this.system_id = request.system_id;\n        this.signing_id = request.signing_id;\n        this.signature = request.signature\n            ? new __1.VerusIDSignature(request.signature, keys_1.IDENTITY_AUTH_SIG_VDXF_KEY)\n            : undefined;\n        this.challenge = new Challenge_1.Challenge(request.challenge);\n    }\n    getChallengeHash(signedBlockheight, signatureVersion = 2) {\n        var heightBufferWriter = new bufferutils_1.default.BufferWriter(Buffer.allocUnsafe(4));\n        heightBufferWriter.writeUInt32(signedBlockheight);\n        if (signatureVersion === 1) {\n            return createHash(\"sha256\")\n                .update(vdxf_1.VERUS_DATA_SIGNATURE_PREFIX)\n                .update((0, address_1.fromBase58Check)(this.system_id).hash)\n                .update(heightBufferWriter.buffer)\n                .update((0, address_1.fromBase58Check)(this.signing_id).hash)\n                .update(this.challenge.toSha256())\n                .digest();\n        }\n        else {\n            return createHash(\"sha256\")\n                .update((0, address_1.fromBase58Check)(this.system_id).hash)\n                .update(heightBufferWriter.buffer)\n                .update((0, address_1.fromBase58Check)(this.signing_id).hash)\n                .update(vdxf_1.VERUS_DATA_SIGNATURE_PREFIX)\n                .update(this.challenge.toSha256())\n                .digest();\n        }\n    }\n    toJson() {\n        return {\n            vdxfkey: this.vdxfkey,\n            system_id: this.system_id,\n            signing_id: this.signing_id,\n            signature: this.signature ? this.signature.toJson() : this.signature,\n            challenge: this.challenge.toJson(),\n        };\n    }\n    _dataByteLength(signer = this.signing_id) {\n        let length = 0;\n        const _signing_id = Hash160_1.Hash160.fromAddress(signer);\n        const _signature = this.signature\n            ? this.signature\n            : new __1.VerusIDSignature({ signature: \"\" }, keys_1.IDENTITY_AUTH_SIG_VDXF_KEY);\n        if (this.vdxfkey === __1.LOGIN_CONSENT_REQUEST_VDXF_KEY.vdxfid) {\n            const _system_id = Hash160_1.Hash160.fromAddress(this.system_id);\n            length += _system_id.byteLength();\n        }\n        length += _signing_id.byteLength();\n        length += _signature.byteLength();\n        length += this.challenge.byteLength();\n        return length;\n    }\n    _toDataBuffer(signer = this.signing_id) {\n        const writer = new bufferutils_1.default.BufferWriter(Buffer.alloc(this.dataByteLength()));\n        const _signing_id = Hash160_1.Hash160.fromAddress(signer);\n        const _signature = this.signature\n            ? this.signature\n            : new __1.VerusIDSignature({ signature: \"\" }, keys_1.IDENTITY_AUTH_SIG_VDXF_KEY);\n        if (this.vdxfkey === __1.LOGIN_CONSENT_REQUEST_VDXF_KEY.vdxfid) {\n            const _system_id = Hash160_1.Hash160.fromAddress(this.system_id);\n            writer.writeSlice(_system_id.toBuffer());\n        }\n        writer.writeSlice(_signing_id.toBuffer());\n        writer.writeSlice(_signature.toBuffer());\n        writer.writeSlice(this.challenge.toBuffer());\n        return writer.buffer;\n    }\n    dataByteLength() {\n        return this._dataByteLength();\n    }\n    toDataBuffer() {\n        return this._toDataBuffer();\n    }\n    _fromDataBuffer(buffer, offset) {\n        const reader = new bufferutils_1.default.BufferReader(buffer, offset);\n        const reqLength = reader.readCompactSize();\n        if (reqLength == 0) {\n            throw new Error(\"Cannot create request from empty buffer\");\n        }\n        else {\n            if (this.vdxfkey === __1.LOGIN_CONSENT_REQUEST_VDXF_KEY.vdxfid) {\n                this.system_id = (0, address_1.toBase58Check)(reader.readSlice(vdxf_1.HASH160_BYTE_LENGTH), vdxf_1.I_ADDR_VERSION);\n            }\n            this.signing_id = (0, address_1.toBase58Check)(reader.readSlice(vdxf_1.HASH160_BYTE_LENGTH), this.vdxfkey === __1.LOGIN_CONSENT_REQUEST_VDXF_KEY.vdxfid\n                ? vdxf_1.I_ADDR_VERSION\n                : vdxf_1.R_ADDR_VERSION);\n            const _sig = new __1.VerusIDSignature();\n            reader.offset = _sig.fromBuffer(reader.buffer, reader.offset);\n            this.signature = _sig;\n            if (this.vdxfkey === __1.LOGIN_CONSENT_REQUEST_VDXF_KEY.vdxfid) {\n                const _challenge = new Challenge_1.Challenge();\n                reader.offset = _challenge.fromBuffer(reader.buffer, reader.offset);\n                this.challenge = _challenge;\n            }\n        }\n        return reader.offset;\n    }\n    fromDataBuffer(buffer, offset) {\n        return this._fromDataBuffer(buffer, offset);\n    }\n    toWalletDeeplinkUri() {\n        if (this.signature == null)\n            throw new Error(\"Request must be signed before it can be used as a deep link\");\n        return `${__1.WALLET_VDXF_KEY.vdxfid.toLowerCase()}://x-callback-url/${__1.LOGIN_CONSENT_REQUEST_VDXF_KEY.vdxfid}/?${__1.LOGIN_CONSENT_REQUEST_VDXF_KEY.vdxfid}=${this.toString()}`;\n    }\n    static fromWalletDeeplinkUri(uri) {\n        const split = uri.split(`${__1.LOGIN_CONSENT_REQUEST_VDXF_KEY.vdxfid}=`);\n        const req = new Request();\n        req.fromBuffer(base64url_1.default.toBuffer(split[1]));\n        return req;\n    }\n    toQrString() {\n        if (this.signature == null)\n            throw new Error(\"Request must be signed before it can be used as a deep link\");\n        return this.toString(true);\n    }\n    static fromQrString(qrstring) {\n        const req = new Request();\n        req.fromBuffer(base64url_1.default.toBuffer(qrstring));\n        return req;\n    }\n}\nexports.Request = Request;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}