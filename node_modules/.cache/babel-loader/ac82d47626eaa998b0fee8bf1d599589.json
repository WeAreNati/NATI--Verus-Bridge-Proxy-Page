{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Identity = exports.IDENTITY_MAX_NAME_LEN = exports.IDENTITY_MAX_UNLOCK_DELAY = exports.IDENTITY_FLAG_TOKENIZED_CONTROL = exports.IDENTITY_FLAG_LOCKED = exports.IDENTITY_FLAG_ACTIVECURRENCY = exports.IDENTITY_FLAG_REVOKED = exports.IDENITTY_VERSION_INVALID = exports.IDENTITY_VERSION_PBAAS = exports.IDENTITY_VERSION_VAULT = void 0;\nconst varuint_1 = require(\"../utils/varuint\");\nconst bufferutils_1 = require(\"../utils/bufferutils\");\nconst Principal_1 = require(\"./Principal\");\nconst address_1 = require(\"../utils/address\");\nconst vdxf_1 = require(\"../constants/vdxf\");\nconst bn_js_1 = require(\"bn.js\");\nconst IdentityID_1 = require(\"./IdentityID\");\nconst SaplingPaymentAddress_1 = require(\"./SaplingPaymentAddress\");\nconst ContentMultiMap_1 = require(\"./ContentMultiMap\");\nconst KeyID_1 = require(\"./KeyID\");\nexports.IDENTITY_VERSION_VAULT = new bn_js_1.BN(2, 10);\nexports.IDENTITY_VERSION_PBAAS = new bn_js_1.BN(3, 10);\nexports.IDENITTY_VERSION_INVALID = new bn_js_1.BN(0, 10);\nexports.IDENTITY_FLAG_REVOKED = new bn_js_1.BN(\"8000\", 16); // set when this identity is revoked\nexports.IDENTITY_FLAG_ACTIVECURRENCY = new bn_js_1.BN(\"1\", 16); // flag that is set when this ID is being used as an active currency name\nexports.IDENTITY_FLAG_LOCKED = new bn_js_1.BN(\"2\", 16); // set when this identity is locked\nexports.IDENTITY_FLAG_TOKENIZED_CONTROL = new bn_js_1.BN(\"4\", 16); // set when revocation/recovery over this identity can be performed by anyone who controls its token\nexports.IDENTITY_MAX_UNLOCK_DELAY = new bn_js_1.BN(60).mul(new bn_js_1.BN(24)).mul(new bn_js_1.BN(22)).mul(new bn_js_1.BN(365)); // 21+ year maximum unlock time for an ID w/1 minute blocks, not adjusted for avg blocktime in first PBaaS\nexports.IDENTITY_MAX_NAME_LEN = new bn_js_1.BN(64);\nconst {\n  BufferReader,\n  BufferWriter\n} = bufferutils_1.default;\nclass Identity extends Principal_1.Principal {\n  constructor(data) {\n    super(data);\n    if (data === null || data === void 0 ? void 0 : data.parent) this.parent = data.parent;\n    if (data === null || data === void 0 ? void 0 : data.system_id) this.system_id = data.system_id;\n    if (data === null || data === void 0 ? void 0 : data.name) this.name = data.name;\n    if (data === null || data === void 0 ? void 0 : data.content_map) this.content_map = data.content_map;else this.content_map = new Map();\n    if (data === null || data === void 0 ? void 0 : data.content_multimap) this.content_multimap = data.content_multimap;else this.content_multimap = new ContentMultiMap_1.ContentMultiMap({\n      kv_content: new Map()\n    });\n    if (data === null || data === void 0 ? void 0 : data.revocation_authority) this.revocation_authority = data.revocation_authority;\n    if (data === null || data === void 0 ? void 0 : data.recovery_authority) this.recovery_authority = data.recovery_authority;\n    if (data === null || data === void 0 ? void 0 : data.private_addresses) this.private_addresses = data.private_addresses;\n    if (data === null || data === void 0 ? void 0 : data.unlock_after) this.unlock_after = data.unlock_after;\n  }\n  getByteLength() {\n    let length = 0;\n    length += super.getByteLength();\n    length += this.parent.getByteLength();\n    const nameLength = Buffer.from(this.name, \"utf8\").length;\n    length += varuint_1.default.encodingLength(nameLength);\n    length += nameLength;\n    if (this.version.gte(exports.IDENTITY_VERSION_PBAAS)) {\n      length += this.content_multimap.getByteLength();\n    }\n    if (this.version.lt(exports.IDENTITY_VERSION_PBAAS)) {\n      length += varuint_1.default.encodingLength(this.content_map.size);\n      for (const m of this.content_map.entries()) {\n        length += 20; //uint160 key\n        length += 32; //uint256 hash\n      }\n    }\n    length += varuint_1.default.encodingLength(this.content_map.size);\n    for (const m of this.content_map.entries()) {\n      length += 20; //uint160 key\n      length += 32; //uint256 hash\n    }\n    length += this.revocation_authority.getByteLength(); //uint160 revocation authority\n    length += this.recovery_authority.getByteLength(); //uint160 recovery authority\n    // privateaddresses\n    length += varuint_1.default.encodingLength(this.private_addresses ? this.private_addresses.length : 0);\n    if (this.private_addresses) {\n      for (const n of this.private_addresses) {\n        length += n.getByteLength();\n      }\n    }\n    // post PBAAS\n    if (this.version.gte(exports.IDENTITY_VERSION_VAULT)) {\n      length += this.system_id.getByteLength(); //uint160 systemid\n      length += 4; //uint32 unlockafter\n    }\n    return length;\n  }\n  toBuffer() {\n    const writer = new BufferWriter(Buffer.alloc(this.getByteLength()));\n    writer.writeSlice(super.toBuffer());\n    writer.writeSlice(this.parent.toBuffer());\n    writer.writeVarSlice(Buffer.from(this.name, \"utf8\"));\n    //contentmultimap\n    if (this.version.gte(exports.IDENTITY_VERSION_PBAAS)) {\n      writer.writeSlice(this.content_multimap.toBuffer());\n    }\n    //contentmap\n    if (this.version.lt(exports.IDENTITY_VERSION_PBAAS)) {\n      writer.writeCompactSize(this.content_map.size);\n      for (const [key, value] of this.content_map.entries()) {\n        writer.writeSlice((0, address_1.fromBase58Check)(key).hash);\n        writer.writeSlice(value);\n      }\n    }\n    //contentmap2\n    writer.writeCompactSize(this.content_map.size);\n    for (const [key, value] of this.content_map.entries()) {\n      writer.writeSlice((0, address_1.fromBase58Check)(key).hash);\n      writer.writeSlice(value);\n    }\n    writer.writeSlice(this.revocation_authority.toBuffer());\n    writer.writeSlice(this.recovery_authority.toBuffer());\n    // privateaddresses\n    writer.writeCompactSize(this.private_addresses ? this.private_addresses.length : 0);\n    if (this.private_addresses) {\n      for (const n of this.private_addresses) {\n        writer.writeSlice(n.toBuffer());\n      }\n    }\n    // post PBAAS\n    if (this.version.gte(exports.IDENTITY_VERSION_VAULT)) {\n      writer.writeSlice(this.system_id.toBuffer());\n      writer.writeUInt32(this.unlock_after.toNumber());\n    }\n    return writer.buffer;\n  }\n  fromBuffer(buffer) {\n    let offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    let multimapKeylists = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    const reader = new BufferReader(buffer, offset);\n    reader.offset = super.fromBuffer(reader.buffer, reader.offset);\n    const _parent = new IdentityID_1.IdentityID();\n    reader.offset = _parent.fromBuffer(reader.buffer, reader.offset);\n    this.parent = _parent;\n    this.name = Buffer.from(reader.readVarSlice()).toString('utf8');\n    //contentmultimap\n    if (this.version.gte(exports.IDENTITY_VERSION_PBAAS)) {\n      const multimap = new ContentMultiMap_1.ContentMultiMap();\n      reader.offset = multimap.fromBuffer(reader.buffer, reader.offset, multimapKeylists);\n      this.content_multimap = multimap;\n    }\n    // contentmap\n    if (this.version.lt(exports.IDENTITY_VERSION_PBAAS)) {\n      const contentMapSize = reader.readVarInt();\n      this.content_map = new Map();\n      for (var i = 0; i < contentMapSize.toNumber(); i++) {\n        const contentMapKey = (0, address_1.toBase58Check)(reader.readSlice(20), vdxf_1.I_ADDR_VERSION);\n        this.content_map.set(contentMapKey, reader.readSlice(32));\n      }\n    }\n    const contentMapSize = reader.readVarInt();\n    this.content_map = new Map();\n    for (var i = 0; i < contentMapSize.toNumber(); i++) {\n      const contentMapKey = (0, address_1.toBase58Check)(reader.readSlice(20), vdxf_1.I_ADDR_VERSION);\n      this.content_map.set(contentMapKey, reader.readSlice(32));\n    }\n    const _revocation = new IdentityID_1.IdentityID();\n    reader.offset = _revocation.fromBuffer(reader.buffer, reader.offset);\n    this.revocation_authority = _revocation;\n    const _recovery = new IdentityID_1.IdentityID();\n    reader.offset = _recovery.fromBuffer(reader.buffer, reader.offset);\n    this.recovery_authority = _recovery;\n    const numPrivateAddresses = reader.readVarInt();\n    if (numPrivateAddresses.gt(new bn_js_1.BN(0))) this.private_addresses = [];\n    for (var i = 0; i < numPrivateAddresses.toNumber(); i++) {\n      const saplingAddr = new SaplingPaymentAddress_1.SaplingPaymentAddress();\n      reader.offset = saplingAddr.fromBuffer(reader.buffer, reader.offset);\n      this.private_addresses.push(saplingAddr);\n    }\n    if (this.version.gte(exports.IDENTITY_VERSION_VAULT)) {\n      const _system = new IdentityID_1.IdentityID();\n      reader.offset = _system.fromBuffer(reader.buffer, reader.offset);\n      this.system_id = _system;\n      this.unlock_after = new bn_js_1.BN(reader.readUInt32(), 10);\n    } else {\n      this.system_id = _parent;\n      this.unlock_after = new bn_js_1.BN(0);\n    }\n    return reader.offset;\n  }\n  toJson() {\n    const contentmap = {};\n    for (const [key, value] of this.content_map.entries()) {\n      const valueCopy = Buffer.from(value);\n      contentmap[(0, address_1.fromBase58Check)(key).hash.reverse().toString('hex')] = valueCopy.reverse().toString('hex');\n    }\n    const ret = {\n      contentmap,\n      contentmultimap: this.content_multimap.toJson(),\n      flags: this.flags.toNumber(),\n      minimumsignatures: this.min_sigs.toNumber(),\n      name: this.name,\n      parent: this.parent.toAddress(),\n      primaryaddresses: this.primary_addresses.map(x => x.toAddress()),\n      recoveryauthority: this.recovery_authority.toAddress(),\n      revocationauthority: this.revocation_authority.toAddress(),\n      systemid: this.system_id.toAddress(),\n      timelock: this.unlock_after.toNumber(),\n      version: this.version.toNumber(),\n      identityaddress: this.getIdentityAddress()\n    };\n    if (this.private_addresses != null && this.private_addresses.length > 0) {\n      ret.privateaddress = this.private_addresses[0].toAddressString();\n    }\n    return ret;\n  }\n  getIdentityAddress() {\n    return (0, address_1.nameAndParentAddrToIAddr)(this.name, this.parent.toAddress());\n  }\n  isRevoked() {\n    return !!this.flags.and(exports.IDENTITY_FLAG_REVOKED).toNumber();\n  }\n  isLocked() {\n    return !!this.flags.and(exports.IDENTITY_FLAG_LOCKED).toNumber();\n  }\n  lock(unlockTime) {\n    let unlockAfter = unlockTime;\n    if (unlockTime.lte(new bn_js_1.BN(0))) {\n      unlockAfter = new bn_js_1.BN(1);\n    } else if (unlockTime.gt(exports.IDENTITY_MAX_UNLOCK_DELAY)) {\n      unlockAfter = exports.IDENTITY_MAX_UNLOCK_DELAY;\n    }\n    this.flags = this.flags.xor(exports.IDENTITY_FLAG_LOCKED);\n    this.unlock_after = unlockAfter;\n  }\n  unlock() {\n    let height = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new bn_js_1.BN(0);\n    let txExpiryHeight = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new bn_js_1.BN(0);\n    if (this.isRevoked()) {\n      this.flags = this.flags.and(exports.IDENTITY_FLAG_LOCKED.notn(16));\n      this.unlock_after = new bn_js_1.BN(0);\n    } else if (this.isLocked()) {\n      this.flags = this.flags.and(exports.IDENTITY_FLAG_LOCKED.notn(16));\n      this.unlock_after = this.unlock_after.add(txExpiryHeight);\n    } else if (height.gt(this.unlock_after)) {\n      this.unlock_after = new bn_js_1.BN(0);\n    }\n    if (this.unlock_after.gt(txExpiryHeight.add(exports.IDENTITY_MAX_UNLOCK_DELAY))) {\n      this.unlock_after = txExpiryHeight.add(exports.IDENTITY_MAX_UNLOCK_DELAY);\n    }\n  }\n  revoke() {\n    this.flags = this.flags.xor(exports.IDENTITY_FLAG_REVOKED);\n    this.unlock();\n  }\n  unrevoke() {\n    this.flags = this.flags.and(exports.IDENTITY_FLAG_REVOKED.notn(16));\n  }\n  upgradeVersion() {\n    let version = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Identity.VERSION_CURRENT;\n    if (version.eq(this.version)) return;\n    if (version.lt(this.version)) throw new Error(\"Cannot downgrade version\");\n    if (version.lt(Identity.VERSION_PBAAS)) throw new Error(\"Cannot upgrade to a version less than PBAAS\");\n    if (version.gt(Identity.VERSION_CURRENT)) throw new Error(\"Cannot upgrade to a version greater than the current known version\");\n    if (this.version.lt(Identity.VERSION_VAULT)) {\n      this.system_id = this.parent ? this.parent : IdentityID_1.IdentityID.fromAddress(this.getIdentityAddress());\n      this.version = Identity.VERSION_VAULT;\n    }\n    if (this.version.lt(Identity.VERSION_PBAAS)) {\n      this.version = Identity.VERSION_PBAAS;\n    }\n  }\n  static fromJson(json) {\n    const contentmap = new Map();\n    for (const key in json.contentmap) {\n      const reverseKey = Buffer.from(key, 'hex').reverse();\n      const iAddrKey = (0, address_1.toBase58Check)(reverseKey, vdxf_1.I_ADDR_VERSION);\n      contentmap.set(iAddrKey, Buffer.from(json.contentmap[key], 'hex').reverse());\n    }\n    return new Identity({\n      version: new bn_js_1.BN(json.version, 10),\n      flags: new bn_js_1.BN(json.flags, 10),\n      min_sigs: new bn_js_1.BN(json.minimumsignatures, 10),\n      primary_addresses: json.primaryaddresses.map(x => KeyID_1.KeyID.fromAddress(x)),\n      parent: IdentityID_1.IdentityID.fromAddress(json.parent),\n      system_id: json.systemid ? IdentityID_1.IdentityID.fromAddress(json.systemid) : undefined,\n      name: json.name,\n      content_map: contentmap,\n      content_multimap: ContentMultiMap_1.ContentMultiMap.fromJson(json.contentmultimap),\n      revocation_authority: IdentityID_1.IdentityID.fromAddress(json.revocationauthority),\n      recovery_authority: IdentityID_1.IdentityID.fromAddress(json.recoveryauthority),\n      private_addresses: json.privateaddress == null ? [] : [SaplingPaymentAddress_1.SaplingPaymentAddress.fromAddressString(json.privateaddress)],\n      unlock_after: new bn_js_1.BN(json.timelock, 10)\n    });\n  }\n}\nexports.Identity = Identity;\nIdentity.VERSION_INVALID = new bn_js_1.BN(0);\nIdentity.VERSION_VERUSID = new bn_js_1.BN(1);\nIdentity.VERSION_VAULT = new bn_js_1.BN(2);\nIdentity.VERSION_PBAAS = new bn_js_1.BN(3);\nIdentity.VERSION_CURRENT = Identity.VERSION_PBAAS;\nIdentity.VERSION_FIRSTVALID = new bn_js_1.BN(1);\nIdentity.VERSION_LASTVALID = new bn_js_1.BN(3);","map":{"version":3,"names":["Object","defineProperty","exports","value","Identity","IDENTITY_MAX_NAME_LEN","IDENTITY_MAX_UNLOCK_DELAY","IDENTITY_FLAG_TOKENIZED_CONTROL","IDENTITY_FLAG_LOCKED","IDENTITY_FLAG_ACTIVECURRENCY","IDENTITY_FLAG_REVOKED","IDENITTY_VERSION_INVALID","IDENTITY_VERSION_PBAAS","IDENTITY_VERSION_VAULT","varuint_1","require","bufferutils_1","Principal_1","address_1","vdxf_1","bn_js_1","IdentityID_1","SaplingPaymentAddress_1","ContentMultiMap_1","KeyID_1","BN","mul","BufferReader","BufferWriter","default","Principal","constructor","data","parent","system_id","name","content_map","Map","content_multimap","ContentMultiMap","kv_content","revocation_authority","recovery_authority","private_addresses","unlock_after","getByteLength","length","nameLength","Buffer","from","encodingLength","version","gte","lt","size","m","entries","n","toBuffer","writer","alloc","writeSlice","writeVarSlice","writeCompactSize","key","fromBase58Check","hash","writeUInt32","toNumber","buffer","fromBuffer","offset","arguments","undefined","multimapKeylists","reader","_parent","IdentityID","readVarSlice","toString","multimap","contentMapSize","readVarInt","i","contentMapKey","toBase58Check","readSlice","I_ADDR_VERSION","set","_revocation","_recovery","numPrivateAddresses","gt","saplingAddr","SaplingPaymentAddress","push","_system","readUInt32","toJson","contentmap","valueCopy","reverse","ret","contentmultimap","flags","minimumsignatures","min_sigs","toAddress","primaryaddresses","primary_addresses","map","x","recoveryauthority","revocationauthority","systemid","timelock","identityaddress","getIdentityAddress","privateaddress","toAddressString","nameAndParentAddrToIAddr","isRevoked","and","isLocked","lock","unlockTime","unlockAfter","lte","xor","unlock","height","txExpiryHeight","notn","add","revoke","unrevoke","upgradeVersion","VERSION_CURRENT","eq","Error","VERSION_PBAAS","VERSION_VAULT","fromAddress","fromJson","json","reverseKey","iAddrKey","KeyID","fromAddressString","VERSION_INVALID","VERSION_VERUSID","VERSION_FIRSTVALID","VERSION_LASTVALID"],"sources":["/Users/oddfl3x/Code/varB/vARRRBridgeWebsite-main/node_modules/verus-typescript-primitives/dist/pbaas/Identity.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Identity = exports.IDENTITY_MAX_NAME_LEN = exports.IDENTITY_MAX_UNLOCK_DELAY = exports.IDENTITY_FLAG_TOKENIZED_CONTROL = exports.IDENTITY_FLAG_LOCKED = exports.IDENTITY_FLAG_ACTIVECURRENCY = exports.IDENTITY_FLAG_REVOKED = exports.IDENITTY_VERSION_INVALID = exports.IDENTITY_VERSION_PBAAS = exports.IDENTITY_VERSION_VAULT = void 0;\nconst varuint_1 = require(\"../utils/varuint\");\nconst bufferutils_1 = require(\"../utils/bufferutils\");\nconst Principal_1 = require(\"./Principal\");\nconst address_1 = require(\"../utils/address\");\nconst vdxf_1 = require(\"../constants/vdxf\");\nconst bn_js_1 = require(\"bn.js\");\nconst IdentityID_1 = require(\"./IdentityID\");\nconst SaplingPaymentAddress_1 = require(\"./SaplingPaymentAddress\");\nconst ContentMultiMap_1 = require(\"./ContentMultiMap\");\nconst KeyID_1 = require(\"./KeyID\");\nexports.IDENTITY_VERSION_VAULT = new bn_js_1.BN(2, 10);\nexports.IDENTITY_VERSION_PBAAS = new bn_js_1.BN(3, 10);\nexports.IDENITTY_VERSION_INVALID = new bn_js_1.BN(0, 10);\nexports.IDENTITY_FLAG_REVOKED = new bn_js_1.BN(\"8000\", 16); // set when this identity is revoked\nexports.IDENTITY_FLAG_ACTIVECURRENCY = new bn_js_1.BN(\"1\", 16); // flag that is set when this ID is being used as an active currency name\nexports.IDENTITY_FLAG_LOCKED = new bn_js_1.BN(\"2\", 16); // set when this identity is locked\nexports.IDENTITY_FLAG_TOKENIZED_CONTROL = new bn_js_1.BN(\"4\", 16); // set when revocation/recovery over this identity can be performed by anyone who controls its token\nexports.IDENTITY_MAX_UNLOCK_DELAY = new bn_js_1.BN(60).mul(new bn_js_1.BN(24)).mul(new bn_js_1.BN(22)).mul(new bn_js_1.BN(365)); // 21+ year maximum unlock time for an ID w/1 minute blocks, not adjusted for avg blocktime in first PBaaS\nexports.IDENTITY_MAX_NAME_LEN = new bn_js_1.BN(64);\nconst { BufferReader, BufferWriter } = bufferutils_1.default;\nclass Identity extends Principal_1.Principal {\n    constructor(data) {\n        super(data);\n        if (data === null || data === void 0 ? void 0 : data.parent)\n            this.parent = data.parent;\n        if (data === null || data === void 0 ? void 0 : data.system_id)\n            this.system_id = data.system_id;\n        if (data === null || data === void 0 ? void 0 : data.name)\n            this.name = data.name;\n        if (data === null || data === void 0 ? void 0 : data.content_map)\n            this.content_map = data.content_map;\n        else\n            this.content_map = new Map();\n        if (data === null || data === void 0 ? void 0 : data.content_multimap)\n            this.content_multimap = data.content_multimap;\n        else\n            this.content_multimap = new ContentMultiMap_1.ContentMultiMap({ kv_content: new Map() });\n        if (data === null || data === void 0 ? void 0 : data.revocation_authority)\n            this.revocation_authority = data.revocation_authority;\n        if (data === null || data === void 0 ? void 0 : data.recovery_authority)\n            this.recovery_authority = data.recovery_authority;\n        if (data === null || data === void 0 ? void 0 : data.private_addresses)\n            this.private_addresses = data.private_addresses;\n        if (data === null || data === void 0 ? void 0 : data.unlock_after)\n            this.unlock_after = data.unlock_after;\n    }\n    getByteLength() {\n        let length = 0;\n        length += super.getByteLength();\n        length += this.parent.getByteLength();\n        const nameLength = Buffer.from(this.name, \"utf8\").length;\n        length += varuint_1.default.encodingLength(nameLength);\n        length += nameLength;\n        if (this.version.gte(exports.IDENTITY_VERSION_PBAAS)) {\n            length += this.content_multimap.getByteLength();\n        }\n        if (this.version.lt(exports.IDENTITY_VERSION_PBAAS)) {\n            length += varuint_1.default.encodingLength(this.content_map.size);\n            for (const m of this.content_map.entries()) {\n                length += 20; //uint160 key\n                length += 32; //uint256 hash\n            }\n        }\n        length += varuint_1.default.encodingLength(this.content_map.size);\n        for (const m of this.content_map.entries()) {\n            length += 20; //uint160 key\n            length += 32; //uint256 hash\n        }\n        length += this.revocation_authority.getByteLength(); //uint160 revocation authority\n        length += this.recovery_authority.getByteLength(); //uint160 recovery authority\n        // privateaddresses\n        length += varuint_1.default.encodingLength(this.private_addresses ? this.private_addresses.length : 0);\n        if (this.private_addresses) {\n            for (const n of this.private_addresses) {\n                length += n.getByteLength();\n            }\n        }\n        // post PBAAS\n        if (this.version.gte(exports.IDENTITY_VERSION_VAULT)) {\n            length += this.system_id.getByteLength(); //uint160 systemid\n            length += 4; //uint32 unlockafter\n        }\n        return length;\n    }\n    toBuffer() {\n        const writer = new BufferWriter(Buffer.alloc(this.getByteLength()));\n        writer.writeSlice(super.toBuffer());\n        writer.writeSlice(this.parent.toBuffer());\n        writer.writeVarSlice(Buffer.from(this.name, \"utf8\"));\n        //contentmultimap\n        if (this.version.gte(exports.IDENTITY_VERSION_PBAAS)) {\n            writer.writeSlice(this.content_multimap.toBuffer());\n        }\n        //contentmap\n        if (this.version.lt(exports.IDENTITY_VERSION_PBAAS)) {\n            writer.writeCompactSize(this.content_map.size);\n            for (const [key, value] of this.content_map.entries()) {\n                writer.writeSlice((0, address_1.fromBase58Check)(key).hash);\n                writer.writeSlice(value);\n            }\n        }\n        //contentmap2\n        writer.writeCompactSize(this.content_map.size);\n        for (const [key, value] of this.content_map.entries()) {\n            writer.writeSlice((0, address_1.fromBase58Check)(key).hash);\n            writer.writeSlice(value);\n        }\n        writer.writeSlice(this.revocation_authority.toBuffer());\n        writer.writeSlice(this.recovery_authority.toBuffer());\n        // privateaddresses\n        writer.writeCompactSize(this.private_addresses ? this.private_addresses.length : 0);\n        if (this.private_addresses) {\n            for (const n of this.private_addresses) {\n                writer.writeSlice(n.toBuffer());\n            }\n        }\n        // post PBAAS\n        if (this.version.gte(exports.IDENTITY_VERSION_VAULT)) {\n            writer.writeSlice(this.system_id.toBuffer());\n            writer.writeUInt32(this.unlock_after.toNumber());\n        }\n        return writer.buffer;\n    }\n    fromBuffer(buffer, offset = 0, multimapKeylists = []) {\n        const reader = new BufferReader(buffer, offset);\n        reader.offset = super.fromBuffer(reader.buffer, reader.offset);\n        const _parent = new IdentityID_1.IdentityID();\n        reader.offset = _parent.fromBuffer(reader.buffer, reader.offset);\n        this.parent = _parent;\n        this.name = Buffer.from(reader.readVarSlice()).toString('utf8');\n        //contentmultimap\n        if (this.version.gte(exports.IDENTITY_VERSION_PBAAS)) {\n            const multimap = new ContentMultiMap_1.ContentMultiMap();\n            reader.offset = multimap.fromBuffer(reader.buffer, reader.offset, multimapKeylists);\n            this.content_multimap = multimap;\n        }\n        // contentmap\n        if (this.version.lt(exports.IDENTITY_VERSION_PBAAS)) {\n            const contentMapSize = reader.readVarInt();\n            this.content_map = new Map();\n            for (var i = 0; i < contentMapSize.toNumber(); i++) {\n                const contentMapKey = (0, address_1.toBase58Check)(reader.readSlice(20), vdxf_1.I_ADDR_VERSION);\n                this.content_map.set(contentMapKey, reader.readSlice(32));\n            }\n        }\n        const contentMapSize = reader.readVarInt();\n        this.content_map = new Map();\n        for (var i = 0; i < contentMapSize.toNumber(); i++) {\n            const contentMapKey = (0, address_1.toBase58Check)(reader.readSlice(20), vdxf_1.I_ADDR_VERSION);\n            this.content_map.set(contentMapKey, reader.readSlice(32));\n        }\n        const _revocation = new IdentityID_1.IdentityID();\n        reader.offset = _revocation.fromBuffer(reader.buffer, reader.offset);\n        this.revocation_authority = _revocation;\n        const _recovery = new IdentityID_1.IdentityID();\n        reader.offset = _recovery.fromBuffer(reader.buffer, reader.offset);\n        this.recovery_authority = _recovery;\n        const numPrivateAddresses = reader.readVarInt();\n        if (numPrivateAddresses.gt(new bn_js_1.BN(0)))\n            this.private_addresses = [];\n        for (var i = 0; i < numPrivateAddresses.toNumber(); i++) {\n            const saplingAddr = new SaplingPaymentAddress_1.SaplingPaymentAddress();\n            reader.offset = saplingAddr.fromBuffer(reader.buffer, reader.offset);\n            this.private_addresses.push(saplingAddr);\n        }\n        if (this.version.gte(exports.IDENTITY_VERSION_VAULT)) {\n            const _system = new IdentityID_1.IdentityID();\n            reader.offset = _system.fromBuffer(reader.buffer, reader.offset);\n            this.system_id = _system;\n            this.unlock_after = new bn_js_1.BN(reader.readUInt32(), 10);\n        }\n        else {\n            this.system_id = _parent;\n            this.unlock_after = new bn_js_1.BN(0);\n        }\n        return reader.offset;\n    }\n    toJson() {\n        const contentmap = {};\n        for (const [key, value] of this.content_map.entries()) {\n            const valueCopy = Buffer.from(value);\n            contentmap[(0, address_1.fromBase58Check)(key).hash.reverse().toString('hex')] = valueCopy.reverse().toString('hex');\n        }\n        const ret = {\n            contentmap,\n            contentmultimap: this.content_multimap.toJson(),\n            flags: this.flags.toNumber(),\n            minimumsignatures: this.min_sigs.toNumber(),\n            name: this.name,\n            parent: this.parent.toAddress(),\n            primaryaddresses: this.primary_addresses.map(x => x.toAddress()),\n            recoveryauthority: this.recovery_authority.toAddress(),\n            revocationauthority: this.revocation_authority.toAddress(),\n            systemid: this.system_id.toAddress(),\n            timelock: this.unlock_after.toNumber(),\n            version: this.version.toNumber(),\n            identityaddress: this.getIdentityAddress()\n        };\n        if (this.private_addresses != null && this.private_addresses.length > 0) {\n            ret.privateaddress = this.private_addresses[0].toAddressString();\n        }\n        return ret;\n    }\n    getIdentityAddress() {\n        return (0, address_1.nameAndParentAddrToIAddr)(this.name, this.parent.toAddress());\n    }\n    isRevoked() {\n        return !!(this.flags.and(exports.IDENTITY_FLAG_REVOKED).toNumber());\n    }\n    isLocked() {\n        return !!(this.flags.and(exports.IDENTITY_FLAG_LOCKED).toNumber());\n    }\n    lock(unlockTime) {\n        let unlockAfter = unlockTime;\n        if (unlockTime.lte(new bn_js_1.BN(0))) {\n            unlockAfter = new bn_js_1.BN(1);\n        }\n        else if (unlockTime.gt(exports.IDENTITY_MAX_UNLOCK_DELAY)) {\n            unlockAfter = exports.IDENTITY_MAX_UNLOCK_DELAY;\n        }\n        this.flags = this.flags.xor(exports.IDENTITY_FLAG_LOCKED);\n        this.unlock_after = unlockAfter;\n    }\n    unlock(height = new bn_js_1.BN(0), txExpiryHeight = new bn_js_1.BN(0)) {\n        if (this.isRevoked()) {\n            this.flags = this.flags.and(exports.IDENTITY_FLAG_LOCKED.notn(16));\n            this.unlock_after = new bn_js_1.BN(0);\n        }\n        else if (this.isLocked()) {\n            this.flags = this.flags.and(exports.IDENTITY_FLAG_LOCKED.notn(16));\n            this.unlock_after = this.unlock_after.add(txExpiryHeight);\n        }\n        else if (height.gt(this.unlock_after)) {\n            this.unlock_after = new bn_js_1.BN(0);\n        }\n        if (this.unlock_after.gt((txExpiryHeight.add(exports.IDENTITY_MAX_UNLOCK_DELAY)))) {\n            this.unlock_after = txExpiryHeight.add(exports.IDENTITY_MAX_UNLOCK_DELAY);\n        }\n    }\n    revoke() {\n        this.flags = this.flags.xor(exports.IDENTITY_FLAG_REVOKED);\n        this.unlock();\n    }\n    unrevoke() {\n        this.flags = this.flags.and(exports.IDENTITY_FLAG_REVOKED.notn(16));\n    }\n    upgradeVersion(version = Identity.VERSION_CURRENT) {\n        if (version.eq(this.version))\n            return;\n        if (version.lt(this.version))\n            throw new Error(\"Cannot downgrade version\");\n        if (version.lt(Identity.VERSION_PBAAS))\n            throw new Error(\"Cannot upgrade to a version less than PBAAS\");\n        if (version.gt(Identity.VERSION_CURRENT))\n            throw new Error(\"Cannot upgrade to a version greater than the current known version\");\n        if (this.version.lt(Identity.VERSION_VAULT)) {\n            this.system_id = this.parent ? this.parent : IdentityID_1.IdentityID.fromAddress(this.getIdentityAddress());\n            this.version = Identity.VERSION_VAULT;\n        }\n        if (this.version.lt(Identity.VERSION_PBAAS)) {\n            this.version = Identity.VERSION_PBAAS;\n        }\n    }\n    static fromJson(json) {\n        const contentmap = new Map();\n        for (const key in json.contentmap) {\n            const reverseKey = Buffer.from(key, 'hex').reverse();\n            const iAddrKey = (0, address_1.toBase58Check)(reverseKey, vdxf_1.I_ADDR_VERSION);\n            contentmap.set(iAddrKey, Buffer.from(json.contentmap[key], 'hex').reverse());\n        }\n        return new Identity({\n            version: new bn_js_1.BN(json.version, 10),\n            flags: new bn_js_1.BN(json.flags, 10),\n            min_sigs: new bn_js_1.BN(json.minimumsignatures, 10),\n            primary_addresses: json.primaryaddresses.map(x => KeyID_1.KeyID.fromAddress(x)),\n            parent: IdentityID_1.IdentityID.fromAddress(json.parent),\n            system_id: json.systemid ? IdentityID_1.IdentityID.fromAddress(json.systemid) : undefined,\n            name: json.name,\n            content_map: contentmap,\n            content_multimap: ContentMultiMap_1.ContentMultiMap.fromJson(json.contentmultimap),\n            revocation_authority: IdentityID_1.IdentityID.fromAddress(json.revocationauthority),\n            recovery_authority: IdentityID_1.IdentityID.fromAddress(json.recoveryauthority),\n            private_addresses: json.privateaddress == null ? [] : [SaplingPaymentAddress_1.SaplingPaymentAddress.fromAddressString(json.privateaddress)],\n            unlock_after: new bn_js_1.BN(json.timelock, 10)\n        });\n    }\n}\nexports.Identity = Identity;\nIdentity.VERSION_INVALID = new bn_js_1.BN(0);\nIdentity.VERSION_VERUSID = new bn_js_1.BN(1);\nIdentity.VERSION_VAULT = new bn_js_1.BN(2);\nIdentity.VERSION_PBAAS = new bn_js_1.BN(3);\nIdentity.VERSION_CURRENT = Identity.VERSION_PBAAS;\nIdentity.VERSION_FIRSTVALID = new bn_js_1.BN(1);\nIdentity.VERSION_LASTVALID = new bn_js_1.BN(3);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}