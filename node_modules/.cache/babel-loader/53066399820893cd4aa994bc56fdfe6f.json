{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CurrencyValueMap = void 0;\nconst varint_1 = require(\"../utils/varint\");\nconst varuint_1 = require(\"../utils/varuint\");\nconst address_1 = require(\"../utils/address\");\nconst bufferutils_1 = require(\"../utils/bufferutils\");\nconst bn_js_1 = require(\"bn.js\");\nconst vdxf_1 = require(\"../constants/vdxf\");\nconst {\n  BufferReader,\n  BufferWriter\n} = bufferutils_1.default;\nclass CurrencyValueMap {\n  constructor(data = {}) {\n    this.value_map = new Map(data.value_map || []);\n    this.multivalue = !!data.multivalue;\n  }\n  getNumValues() {\n    return new bn_js_1.BN(this.value_map.size, 10);\n  }\n  getByteLength() {\n    let byteLength = 0;\n    if (this.multivalue) {\n      byteLength += varuint_1.default.encodingLength(this.value_map.size);\n    }\n    for (const [key, value] of this.value_map) {\n      byteLength += 20;\n      byteLength += this.multivalue ? 8 : varint_1.default.encodingLength(value);\n    }\n    return byteLength;\n  }\n  toBuffer() {\n    const bufferWriter = new BufferWriter(Buffer.alloc(this.getByteLength()));\n    if (this.multivalue) {\n      bufferWriter.writeCompactSize(this.value_map.size);\n    }\n    for (const [key, value] of this.value_map) {\n      const {\n        hash\n      } = (0, address_1.fromBase58Check)(key);\n      bufferWriter.writeSlice(hash);\n      if (this.multivalue) bufferWriter.writeInt64(value);else bufferWriter.writeVarInt(value);\n    }\n    return bufferWriter.buffer;\n  }\n  fromBuffer(buffer, offset = 0) {\n    const reader = new BufferReader(buffer, offset);\n    let count;\n    if (this.multivalue) {\n      count = reader.readCompactSize();\n    } else {\n      count = 1;\n    }\n    for (let i = 0; i < count; i++) {\n      const hash = reader.readSlice(20);\n      const value = this.multivalue ? reader.readInt64() : reader.readVarInt();\n      const base58Key = (0, address_1.toBase58Check)(hash, vdxf_1.I_ADDR_VERSION);\n      this.value_map.set(base58Key, value);\n    }\n    return reader.offset;\n  }\n}\nexports.CurrencyValueMap = CurrencyValueMap;","map":{"version":3,"names":["Object","defineProperty","exports","value","CurrencyValueMap","varint_1","require","varuint_1","address_1","bufferutils_1","bn_js_1","vdxf_1","BufferReader","BufferWriter","default","constructor","data","value_map","Map","multivalue","getNumValues","BN","size","getByteLength","byteLength","encodingLength","key","toBuffer","bufferWriter","Buffer","alloc","writeCompactSize","hash","fromBase58Check","writeSlice","writeInt64","writeVarInt","buffer","fromBuffer","offset","reader","count","readCompactSize","i","readSlice","readInt64","readVarInt","base58Key","toBase58Check","I_ADDR_VERSION","set"],"sources":["/Users/oddfl3x/Code/varB/vARRRBridgeWebsite-main/node_modules/verus-typescript-primitives/dist/pbaas/CurrencyValueMap.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CurrencyValueMap = void 0;\nconst varint_1 = require(\"../utils/varint\");\nconst varuint_1 = require(\"../utils/varuint\");\nconst address_1 = require(\"../utils/address\");\nconst bufferutils_1 = require(\"../utils/bufferutils\");\nconst bn_js_1 = require(\"bn.js\");\nconst vdxf_1 = require(\"../constants/vdxf\");\nconst { BufferReader, BufferWriter } = bufferutils_1.default;\nclass CurrencyValueMap {\n    constructor(data = {}) {\n        this.value_map = new Map(data.value_map || []);\n        this.multivalue = !!(data.multivalue);\n    }\n    getNumValues() {\n        return new bn_js_1.BN(this.value_map.size, 10);\n    }\n    getByteLength() {\n        let byteLength = 0;\n        if (this.multivalue) {\n            byteLength += varuint_1.default.encodingLength(this.value_map.size);\n        }\n        for (const [key, value] of this.value_map) {\n            byteLength += 20;\n            byteLength += this.multivalue ? 8 : varint_1.default.encodingLength(value);\n        }\n        return byteLength;\n    }\n    toBuffer() {\n        const bufferWriter = new BufferWriter(Buffer.alloc(this.getByteLength()));\n        if (this.multivalue) {\n            bufferWriter.writeCompactSize(this.value_map.size);\n        }\n        for (const [key, value] of this.value_map) {\n            const { hash } = (0, address_1.fromBase58Check)(key);\n            bufferWriter.writeSlice(hash);\n            if (this.multivalue)\n                bufferWriter.writeInt64(value);\n            else\n                bufferWriter.writeVarInt(value);\n        }\n        return bufferWriter.buffer;\n    }\n    fromBuffer(buffer, offset = 0) {\n        const reader = new BufferReader(buffer, offset);\n        let count;\n        if (this.multivalue) {\n            count = reader.readCompactSize();\n        }\n        else {\n            count = 1;\n        }\n        for (let i = 0; i < count; i++) {\n            const hash = reader.readSlice(20);\n            const value = this.multivalue ? reader.readInt64() : reader.readVarInt();\n            const base58Key = (0, address_1.toBase58Check)(hash, vdxf_1.I_ADDR_VERSION);\n            this.value_map.set(base58Key, value);\n        }\n        return reader.offset;\n    }\n}\nexports.CurrencyValueMap = CurrencyValueMap;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}