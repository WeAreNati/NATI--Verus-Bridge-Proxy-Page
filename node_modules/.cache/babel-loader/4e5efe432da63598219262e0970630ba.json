{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TransferDestination = exports.FLAG_MASK = exports.FLAG_DEST_GATEWAY = exports.FLAG_DEST_AUX = exports.LAST_VALID_TYPE_NO_FLAGS = exports.DEST_RAW = exports.DEST_ETHNFT = exports.DEST_ETH = exports.DEST_NESTEDTRANSFER = exports.DEST_QUANTUM = exports.DEST_REGISTERCURRENCY = exports.DEST_FULLID = exports.DEST_ID = exports.DEST_SH = exports.DEST_PKH = exports.DEST_PK = exports.DEST_INVALID = void 0;\nconst bufferutils_1 = require(\"../utils/bufferutils\");\nconst bn_js_1 = require(\"bn.js\");\nconst varuint_1 = require(\"../utils/varuint\");\nconst address_1 = require(\"../utils/address\");\nconst vdxf_1 = require(\"../constants/vdxf\");\nconst {\n  BufferReader,\n  BufferWriter\n} = bufferutils_1.default;\nexports.DEST_INVALID = new bn_js_1.BN(0, 10);\nexports.DEST_PK = new bn_js_1.BN(1, 10);\nexports.DEST_PKH = new bn_js_1.BN(2, 10);\nexports.DEST_SH = new bn_js_1.BN(3, 10);\nexports.DEST_ID = new bn_js_1.BN(4, 10);\nexports.DEST_FULLID = new bn_js_1.BN(5, 10);\nexports.DEST_REGISTERCURRENCY = new bn_js_1.BN(6, 10);\nexports.DEST_QUANTUM = new bn_js_1.BN(7, 10);\nexports.DEST_NESTEDTRANSFER = new bn_js_1.BN(8, 10); // used to chain transfers, enabling them to be routed through multiple systems\nexports.DEST_ETH = new bn_js_1.BN(9, 10);\nexports.DEST_ETHNFT = new bn_js_1.BN(10, 10); // used when defining a mapped NFT to gateway that uses an ETH compatible model\nexports.DEST_RAW = new bn_js_1.BN(11, 10);\nexports.LAST_VALID_TYPE_NO_FLAGS = exports.DEST_RAW;\nexports.FLAG_DEST_AUX = new bn_js_1.BN(64, 10);\nexports.FLAG_DEST_GATEWAY = new bn_js_1.BN(128, 10);\nexports.FLAG_MASK = exports.FLAG_DEST_AUX.add(exports.FLAG_DEST_GATEWAY);\nclass TransferDestination {\n  constructor(data) {\n    this.type = exports.DEST_INVALID;\n    this.destination_bytes = Buffer.alloc(0);\n    this.gateway_id = null;\n    this.gateway_code = null;\n    this.fees = new bn_js_1.BN(0, 10);\n    this.aux_dests = [];\n    if (data != null) {\n      if (data.type != null) this.type = data.type;\n      if (data.destination_bytes != null) this.destination_bytes = data.destination_bytes;\n      if (data.gateway_id != null) this.gateway_id = data.gateway_id;\n      if (data.gateway_code != null) this.gateway_code = data.gateway_code;\n      if (data.fees != null) this.fees = data.fees;\n      if (data.aux_dests != null) this.aux_dests = data.aux_dests;\n    }\n  }\n  isGateway() {\n    return !!this.type.and(exports.FLAG_DEST_GATEWAY).toNumber();\n  }\n  hasAuxDests() {\n    return !!this.type.and(exports.FLAG_DEST_AUX).toNumber();\n  }\n  isIAddr() {\n    return this.typeNoFlags().eq(exports.DEST_ID);\n  }\n  isPKH() {\n    return this.typeNoFlags().eq(exports.DEST_PKH);\n  }\n  isETHAccount() {\n    return this.typeNoFlags().eq(exports.DEST_ETH);\n  }\n  typeNoFlags() {\n    return this.type.and(exports.FLAG_MASK.notn(exports.FLAG_MASK.bitLength()));\n  }\n  getAddressString() {\n    if (this.isPKH()) {\n      return (0, address_1.toBase58Check)(this.destination_bytes, vdxf_1.R_ADDR_VERSION);\n    } else if (this.isIAddr()) {\n      return (0, address_1.toBase58Check)(this.destination_bytes, vdxf_1.I_ADDR_VERSION);\n    } else if (this.isETHAccount()) {\n      return \"0x\" + this.destination_bytes.toString('hex');\n    } else {\n      throw new Error(\"Cannot get address for unsupported transfer destination type.\");\n    }\n  }\n  getByteLength() {\n    let length = 0;\n    length += 1; // type\n    length += varuint_1.default.encodingLength(this.destination_bytes.length); // destination_bytes compact size\n    length += this.destination_bytes.length; // destination_bytes\n    if (this.isGateway()) {\n      length += (0, address_1.fromBase58Check)(this.gateway_id).hash.length; // gateway_id\n      if (this.gateway_code) {\n        length += (0, address_1.fromBase58Check)(this.gateway_code).hash.length; // gateway_code\n      } else {\n        length += 20;\n      }\n      length += 8; // fees\n    }\n    if (this.hasAuxDests()) {\n      length += varuint_1.default.encodingLength(this.aux_dests.length); // aux dests compact size\n      for (const dest of this.aux_dests) {\n        const destLength = dest.getByteLength();\n        length += varuint_1.default.encodingLength(destLength); // one aux dest compact size\n        length += destLength; // one aux dest compact size\n      }\n    }\n    return length;\n  }\n  toBuffer() {\n    const writer = new BufferWriter(Buffer.alloc(this.getByteLength()));\n    writer.writeUInt8(this.type.toNumber());\n    writer.writeVarSlice(this.destination_bytes);\n    if (this.isGateway()) {\n      writer.writeSlice((0, address_1.fromBase58Check)(this.gateway_id).hash);\n      if (this.gateway_code) {\n        writer.writeSlice((0, address_1.fromBase58Check)(this.gateway_code).hash);\n      } else {\n        writer.writeSlice(Buffer.alloc(20));\n      }\n      writer.writeInt64(this.fees);\n    }\n    if (this.hasAuxDests()) {\n      writer.writeCompactSize(this.aux_dests.length);\n      this.aux_dests.forEach(aux_dest => writer.writeVarSlice(aux_dest.toBuffer()));\n    }\n    return writer.buffer;\n  }\n  fromBuffer(buffer, offset = 0) {\n    const reader = new BufferReader(buffer, offset);\n    this.type = new bn_js_1.BN(reader.readUInt8(), 10);\n    this.destination_bytes = reader.readVarSlice();\n    if (this.isGateway()) {\n      this.gateway_id = (0, address_1.toBase58Check)(reader.readSlice(20), vdxf_1.I_ADDR_VERSION);\n      this.gateway_code = (0, address_1.toBase58Check)(reader.readSlice(20), vdxf_1.I_ADDR_VERSION);\n      this.fees = reader.readInt64();\n    }\n    if (this.hasAuxDests()) {\n      const numAuxDests = reader.readCompactSize();\n      for (let i = 0; i < numAuxDests; i++) {\n        const newAuxDest = new TransferDestination();\n        newAuxDest.fromBuffer(reader.readVarSlice());\n        this.aux_dests.push(newAuxDest);\n      }\n    }\n    return reader.offset;\n  }\n  static fromJson(data) {\n    return new TransferDestination({\n      type: new bn_js_1.BN(data.type),\n      destination_bytes: Buffer.from(data.destination_bytes, 'hex'),\n      gateway_id: data.gateway_id,\n      gateway_code: data.gateway_code,\n      fees: new bn_js_1.BN(data.fees),\n      aux_dests: data.aux_dests.map(x => TransferDestination.fromJson(x))\n    });\n  }\n  toJson() {\n    return {\n      type: this.type.toString(),\n      destination_bytes: this.destination_bytes.toString('hex'),\n      gateway_id: this.gateway_id,\n      gateway_code: this.gateway_code,\n      fees: this.fees.toString(),\n      aux_dests: this.aux_dests.map(x => x.toJson())\n    };\n  }\n}\nexports.TransferDestination = TransferDestination;","map":{"version":3,"names":["Object","defineProperty","exports","value","TransferDestination","FLAG_MASK","FLAG_DEST_GATEWAY","FLAG_DEST_AUX","LAST_VALID_TYPE_NO_FLAGS","DEST_RAW","DEST_ETHNFT","DEST_ETH","DEST_NESTEDTRANSFER","DEST_QUANTUM","DEST_REGISTERCURRENCY","DEST_FULLID","DEST_ID","DEST_SH","DEST_PKH","DEST_PK","DEST_INVALID","bufferutils_1","require","bn_js_1","varuint_1","address_1","vdxf_1","BufferReader","BufferWriter","default","BN","add","constructor","data","type","destination_bytes","Buffer","alloc","gateway_id","gateway_code","fees","aux_dests","isGateway","and","toNumber","hasAuxDests","isIAddr","typeNoFlags","eq","isPKH","isETHAccount","notn","bitLength","getAddressString","toBase58Check","R_ADDR_VERSION","I_ADDR_VERSION","toString","Error","getByteLength","length","encodingLength","fromBase58Check","hash","dest","destLength","toBuffer","writer","writeUInt8","writeVarSlice","writeSlice","writeInt64","writeCompactSize","forEach","aux_dest","buffer","fromBuffer","offset","reader","readUInt8","readVarSlice","readSlice","readInt64","numAuxDests","readCompactSize","i","newAuxDest","push","fromJson","from","map","x","toJson"],"sources":["/Users/oddfl3x/Code/varB/NATI<>Verus Bridge Proxy Page/node_modules/verus-typescript-primitives/dist/pbaas/TransferDestination.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TransferDestination = exports.FLAG_MASK = exports.FLAG_DEST_GATEWAY = exports.FLAG_DEST_AUX = exports.LAST_VALID_TYPE_NO_FLAGS = exports.DEST_RAW = exports.DEST_ETHNFT = exports.DEST_ETH = exports.DEST_NESTEDTRANSFER = exports.DEST_QUANTUM = exports.DEST_REGISTERCURRENCY = exports.DEST_FULLID = exports.DEST_ID = exports.DEST_SH = exports.DEST_PKH = exports.DEST_PK = exports.DEST_INVALID = void 0;\nconst bufferutils_1 = require(\"../utils/bufferutils\");\nconst bn_js_1 = require(\"bn.js\");\nconst varuint_1 = require(\"../utils/varuint\");\nconst address_1 = require(\"../utils/address\");\nconst vdxf_1 = require(\"../constants/vdxf\");\nconst { BufferReader, BufferWriter } = bufferutils_1.default;\nexports.DEST_INVALID = new bn_js_1.BN(0, 10);\nexports.DEST_PK = new bn_js_1.BN(1, 10);\nexports.DEST_PKH = new bn_js_1.BN(2, 10);\nexports.DEST_SH = new bn_js_1.BN(3, 10);\nexports.DEST_ID = new bn_js_1.BN(4, 10);\nexports.DEST_FULLID = new bn_js_1.BN(5, 10);\nexports.DEST_REGISTERCURRENCY = new bn_js_1.BN(6, 10);\nexports.DEST_QUANTUM = new bn_js_1.BN(7, 10);\nexports.DEST_NESTEDTRANSFER = new bn_js_1.BN(8, 10); // used to chain transfers, enabling them to be routed through multiple systems\nexports.DEST_ETH = new bn_js_1.BN(9, 10);\nexports.DEST_ETHNFT = new bn_js_1.BN(10, 10); // used when defining a mapped NFT to gateway that uses an ETH compatible model\nexports.DEST_RAW = new bn_js_1.BN(11, 10);\nexports.LAST_VALID_TYPE_NO_FLAGS = exports.DEST_RAW;\nexports.FLAG_DEST_AUX = new bn_js_1.BN(64, 10);\nexports.FLAG_DEST_GATEWAY = new bn_js_1.BN(128, 10);\nexports.FLAG_MASK = exports.FLAG_DEST_AUX.add(exports.FLAG_DEST_GATEWAY);\nclass TransferDestination {\n    constructor(data) {\n        this.type = exports.DEST_INVALID;\n        this.destination_bytes = Buffer.alloc(0);\n        this.gateway_id = null;\n        this.gateway_code = null;\n        this.fees = new bn_js_1.BN(0, 10);\n        this.aux_dests = [];\n        if (data != null) {\n            if (data.type != null)\n                this.type = data.type;\n            if (data.destination_bytes != null)\n                this.destination_bytes = data.destination_bytes;\n            if (data.gateway_id != null)\n                this.gateway_id = data.gateway_id;\n            if (data.gateway_code != null)\n                this.gateway_code = data.gateway_code;\n            if (data.fees != null)\n                this.fees = data.fees;\n            if (data.aux_dests != null)\n                this.aux_dests = data.aux_dests;\n        }\n    }\n    isGateway() {\n        return !!(this.type.and(exports.FLAG_DEST_GATEWAY).toNumber());\n    }\n    hasAuxDests() {\n        return !!(this.type.and(exports.FLAG_DEST_AUX).toNumber());\n    }\n    isIAddr() {\n        return this.typeNoFlags().eq(exports.DEST_ID);\n    }\n    isPKH() {\n        return this.typeNoFlags().eq(exports.DEST_PKH);\n    }\n    isETHAccount() {\n        return this.typeNoFlags().eq(exports.DEST_ETH);\n    }\n    typeNoFlags() {\n        return this.type.and(exports.FLAG_MASK.notn(exports.FLAG_MASK.bitLength()));\n    }\n    getAddressString() {\n        if (this.isPKH()) {\n            return (0, address_1.toBase58Check)(this.destination_bytes, vdxf_1.R_ADDR_VERSION);\n        }\n        else if (this.isIAddr()) {\n            return (0, address_1.toBase58Check)(this.destination_bytes, vdxf_1.I_ADDR_VERSION);\n        }\n        else if (this.isETHAccount()) {\n            return \"0x\" + this.destination_bytes.toString('hex');\n        }\n        else {\n            throw new Error(\"Cannot get address for unsupported transfer destination type.\");\n        }\n    }\n    getByteLength() {\n        let length = 0;\n        length += 1; // type\n        length += varuint_1.default.encodingLength(this.destination_bytes.length); // destination_bytes compact size\n        length += this.destination_bytes.length; // destination_bytes\n        if (this.isGateway()) {\n            length += (0, address_1.fromBase58Check)(this.gateway_id).hash.length; // gateway_id\n            if (this.gateway_code) {\n                length += (0, address_1.fromBase58Check)(this.gateway_code).hash.length; // gateway_code\n            }\n            else {\n                length += 20;\n            }\n            length += 8; // fees\n        }\n        if (this.hasAuxDests()) {\n            length += varuint_1.default.encodingLength(this.aux_dests.length); // aux dests compact size\n            for (const dest of this.aux_dests) {\n                const destLength = dest.getByteLength();\n                length += varuint_1.default.encodingLength(destLength); // one aux dest compact size\n                length += destLength; // one aux dest compact size\n            }\n        }\n        return length;\n    }\n    toBuffer() {\n        const writer = new BufferWriter(Buffer.alloc(this.getByteLength()));\n        writer.writeUInt8(this.type.toNumber());\n        writer.writeVarSlice(this.destination_bytes);\n        if (this.isGateway()) {\n            writer.writeSlice((0, address_1.fromBase58Check)(this.gateway_id).hash);\n            if (this.gateway_code) {\n                writer.writeSlice((0, address_1.fromBase58Check)(this.gateway_code).hash);\n            }\n            else {\n                writer.writeSlice(Buffer.alloc(20));\n            }\n            writer.writeInt64(this.fees);\n        }\n        if (this.hasAuxDests()) {\n            writer.writeCompactSize(this.aux_dests.length);\n            this.aux_dests.forEach((aux_dest) => writer.writeVarSlice(aux_dest.toBuffer()));\n        }\n        return writer.buffer;\n    }\n    fromBuffer(buffer, offset = 0) {\n        const reader = new BufferReader(buffer, offset);\n        this.type = new bn_js_1.BN(reader.readUInt8(), 10);\n        this.destination_bytes = reader.readVarSlice();\n        if (this.isGateway()) {\n            this.gateway_id = (0, address_1.toBase58Check)(reader.readSlice(20), vdxf_1.I_ADDR_VERSION);\n            this.gateway_code = (0, address_1.toBase58Check)(reader.readSlice(20), vdxf_1.I_ADDR_VERSION);\n            this.fees = reader.readInt64();\n        }\n        if (this.hasAuxDests()) {\n            const numAuxDests = reader.readCompactSize();\n            for (let i = 0; i < numAuxDests; i++) {\n                const newAuxDest = new TransferDestination();\n                newAuxDest.fromBuffer(reader.readVarSlice());\n                this.aux_dests.push(newAuxDest);\n            }\n        }\n        return reader.offset;\n    }\n    static fromJson(data) {\n        return new TransferDestination({\n            type: new bn_js_1.BN(data.type),\n            destination_bytes: Buffer.from(data.destination_bytes, 'hex'),\n            gateway_id: data.gateway_id,\n            gateway_code: data.gateway_code,\n            fees: new bn_js_1.BN(data.fees),\n            aux_dests: data.aux_dests.map(x => TransferDestination.fromJson(x))\n        });\n    }\n    toJson() {\n        return {\n            type: this.type.toString(),\n            destination_bytes: this.destination_bytes.toString('hex'),\n            gateway_id: this.gateway_id,\n            gateway_code: this.gateway_code,\n            fees: this.fees.toString(),\n            aux_dests: this.aux_dests.map(x => x.toJson())\n        };\n    }\n}\nexports.TransferDestination = TransferDestination;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}