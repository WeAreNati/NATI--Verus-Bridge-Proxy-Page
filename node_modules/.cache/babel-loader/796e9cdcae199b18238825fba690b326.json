{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Challenge = exports.Attestation = exports.AltAuthFactor = exports.Audience = exports.RequestedPermission = exports.ProvisioningInfo = exports.Subject = exports.RedirectUri = void 0;\nconst __1 = require(\"../\");\nconst bufferutils_1 = require(\"../../utils/bufferutils\");\nconst varuint_1 = require(\"../../utils/varuint\");\nconst Context_1 = require(\"./Context\");\nconst Hash160_1 = require(\"./Hash160\");\nclass RedirectUri extends __1.VDXFObject {\n  constructor() {\n    let uri = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    let vdxfkey = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n    super(vdxfkey);\n    this.uri = uri;\n  }\n  dataByteLength() {\n    return this.toDataBuffer().length;\n  }\n  toDataBuffer() {\n    return Buffer.from(this.uri, \"utf-8\");\n  }\n  fromDataBuffer(buffer, offset) {\n    const reader = new bufferutils_1.default.BufferReader(buffer, offset);\n    this.uri = reader.readVarSlice().toString(\"utf-8\");\n    return reader.offset;\n  }\n  toJson() {\n    return {\n      uri: this.uri,\n      vdxfkey: this.vdxfkey\n    };\n  }\n}\nexports.RedirectUri = RedirectUri;\nclass Subject extends __1.Utf8OrBase58Object {\n  constructor() {\n    let data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    let vdxfkey = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n    super(data, vdxfkey, [__1.ID_ADDRESS_VDXF_KEY.vdxfid, __1.ID_PARENT_VDXF_KEY.vdxfid, __1.ID_SYSTEMID_VDXF_KEY.vdxfid]);\n  }\n}\nexports.Subject = Subject;\nclass ProvisioningInfo extends __1.Utf8OrBase58Object {\n  constructor() {\n    let data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    let vdxfkey = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n    super(data, vdxfkey, [__1.ID_ADDRESS_VDXF_KEY.vdxfid, __1.ID_PARENT_VDXF_KEY.vdxfid, __1.ID_SYSTEMID_VDXF_KEY.vdxfid]);\n  }\n}\nexports.ProvisioningInfo = ProvisioningInfo;\nclass RequestedPermission extends __1.Utf8DataVdxfObject {\n  constructor() {\n    let vdxfkey = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    super(\"\", vdxfkey);\n  }\n}\nexports.RequestedPermission = RequestedPermission;\nclass Audience extends __1.Utf8DataVdxfObject {}\nexports.Audience = Audience;\nclass AltAuthFactor extends __1.Utf8DataVdxfObject {}\nexports.AltAuthFactor = AltAuthFactor;\nclass Attestation extends __1.Utf8DataVdxfObject {}\nexports.Attestation = Attestation;\nclass Challenge extends __1.VDXFObject {\n  constructor() {\n    let challenge = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      challenge_id: \"\",\n      created_at: 0\n    };\n    let vdxfkey = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : __1.LOGIN_CONSENT_CHALLENGE_VDXF_KEY.vdxfid;\n    super(vdxfkey);\n    this.challenge_id = challenge.challenge_id;\n    this.requested_access = challenge.requested_access ? challenge.requested_access.map(x => new RequestedPermission(x.vdxfkey)) : challenge.requested_access;\n    this.requested_access_audience = challenge.requested_access_audience;\n    this.subject = challenge.subject ? challenge.subject.map(x => new Subject(x.data, x.vdxfkey)) : challenge.subject;\n    this.provisioning_info = challenge.provisioning_info ? challenge.provisioning_info.map(x => new ProvisioningInfo(x.data, x.vdxfkey)) : challenge.provisioning_info;\n    this.alt_auth_factors = challenge.alt_auth_factors;\n    this.session_id = challenge.session_id;\n    this.attestations = challenge.attestations;\n    this.redirect_uris = challenge.redirect_uris ? challenge.redirect_uris.map(x => new RedirectUri(x.uri, x.vdxfkey)) : challenge.redirect_uris;\n    this.created_at = challenge.created_at;\n    this.salt = challenge.salt;\n    this.context = challenge.context ? new Context_1.Context(challenge.context.kv) : challenge.context;\n    this.skip = challenge.skip ? true : false;\n  }\n  dataByteLength() {\n    let length = 0;\n    const _challenge_id = Hash160_1.Hash160.fromAddress(this.challenge_id, true);\n    const _created_at = this.created_at;\n    const _salt = this.salt ? Hash160_1.Hash160.fromAddress(this.salt, true) : Hash160_1.Hash160.getEmpty();\n    const _session_id = this.session_id ? Hash160_1.Hash160.fromAddress(this.session_id, true) : Hash160_1.Hash160.getEmpty();\n    const _requested_access = this.requested_access ? this.requested_access : [];\n    const _requested_access_audience = [];\n    const _subject = this.subject ? this.subject : [];\n    const _provisioning_info = this.provisioning_info ? this.provisioning_info : [];\n    const _alt_auth_factors = [];\n    const _attestations = [];\n    const _redirect_uris = this.redirect_uris ? this.redirect_uris : [];\n    const _context = this.context ? this.context : new Context_1.Context({});\n    length += _challenge_id.byteLength();\n    length += 8; // created_at\n    length += _salt.byteLength();\n    if (this.vdxfkey === __1.LOGIN_CONSENT_CHALLENGE_VDXF_KEY.vdxfid) {\n      length += 1; // skip\n      length += _session_id.byteLength();\n      length += varuint_1.default.encodingLength(_requested_access.length);\n      length += _requested_access.reduce((sum, current) => sum + current.byteLength(), 0);\n      length += varuint_1.default.encodingLength(_requested_access_audience.length);\n      length += varuint_1.default.encodingLength(_subject.length);\n      length += _subject.reduce((sum, current) => sum + current.byteLength(), 0);\n      length += varuint_1.default.encodingLength(_provisioning_info.length);\n      length += _provisioning_info.reduce((sum, current) => sum + current.byteLength(), 0);\n      length += varuint_1.default.encodingLength(_alt_auth_factors.length);\n      length += varuint_1.default.encodingLength(_attestations.length);\n      length += varuint_1.default.encodingLength(_redirect_uris.length);\n      length += _redirect_uris.reduce((sum, current) => sum + current.byteLength(), 0);\n    }\n    length += _context.byteLength();\n    return length;\n  }\n  toDataBuffer() {\n    const buffer = Buffer.alloc(this.dataByteLength());\n    const writer = new bufferutils_1.default.BufferWriter(buffer);\n    const _challenge_id = Hash160_1.Hash160.fromAddress(this.challenge_id, true);\n    const _created_at = this.created_at;\n    const _salt = this.salt ? Hash160_1.Hash160.fromAddress(this.salt, true) : Hash160_1.Hash160.getEmpty();\n    const _session_id = this.session_id ? Hash160_1.Hash160.fromAddress(this.session_id, true) : Hash160_1.Hash160.getEmpty();\n    const _requested_access = this.requested_access ? this.requested_access : [];\n    const _requested_access_audience = [];\n    const _subject = this.subject ? this.subject : [];\n    const _provisioning_info = this.provisioning_info ? this.provisioning_info : [];\n    const _alt_auth_factors = [];\n    const _attestations = [];\n    const _redirect_uris = this.redirect_uris ? this.redirect_uris : [];\n    const _context = this.context ? this.context : new Context_1.Context({});\n    writer.writeSlice(_challenge_id.toBuffer());\n    writer.writeUInt64(_created_at);\n    writer.writeSlice(_salt.toBuffer());\n    if (this.vdxfkey === __1.LOGIN_CONSENT_CHALLENGE_VDXF_KEY.vdxfid) {\n      writer.writeUInt8(this.skip ? 1 : 0);\n      writer.writeSlice(_session_id.toBuffer());\n      writer.writeArray(_requested_access.map(x => x.toBuffer()));\n      writer.writeArray(_requested_access_audience.map(x => x.toBuffer()));\n      writer.writeArray(_subject.map(x => x.toBuffer()));\n      writer.writeArray(_provisioning_info.map(x => x.toBuffer()));\n      writer.writeArray(_alt_auth_factors.map(x => x.toBuffer()));\n      writer.writeArray(_attestations.map(x => x.toBuffer()));\n      writer.writeArray(_redirect_uris.map(x => x.toBuffer()));\n    }\n    writer.writeSlice(_context.toBuffer());\n    return writer.buffer;\n  }\n  fromDataBuffer(buffer, offset) {\n    const reader = new bufferutils_1.default.BufferReader(buffer, offset);\n    const challengeLength = reader.readCompactSize();\n    if (challengeLength == 0) {\n      throw new Error(\"Cannot create challenge from empty buffer\");\n    } else {\n      const _challenge_id = new Hash160_1.Hash160();\n      reader.offset = _challenge_id.fromBuffer(reader.buffer, true, reader.offset);\n      this.challenge_id = _challenge_id.toAddress();\n      this.created_at = reader.readUInt64();\n      const _salt = new Hash160_1.Hash160();\n      reader.offset = _salt.fromBuffer(reader.buffer, true, reader.offset);\n      this.salt = _salt.toAddress();\n      if (this.vdxfkey === __1.LOGIN_CONSENT_CHALLENGE_VDXF_KEY.vdxfid) {\n        this.skip = reader.readUInt8() === 1 ? true : false;\n        const _session_id = new Hash160_1.Hash160();\n        reader.offset = _session_id.fromBuffer(reader.buffer, true, reader.offset);\n        this.session_id = _session_id.toAddress();\n        this.requested_access = [];\n        const requestedAccessLength = reader.readCompactSize();\n        for (let i = 0; i < requestedAccessLength; i++) {\n          const _perm = new RequestedPermission();\n          reader.offset = _perm.fromBuffer(reader.buffer, reader.offset);\n          this.requested_access.push(_perm);\n        }\n        this.requested_access_audience = [];\n        const audienceLength = reader.readCompactSize();\n        if (audienceLength > 0) {\n          throw new Error(\"Requested access audience currently unsupported\");\n        }\n        this.subject = [];\n        const subjectLength = reader.readCompactSize();\n        for (let i = 0; i < subjectLength; i++) {\n          const _subject = new Subject();\n          reader.offset = _subject.fromBuffer(reader.buffer, reader.offset);\n          this.subject.push(_subject);\n        }\n        this.provisioning_info = [];\n        const provisioningInfoLength = reader.readCompactSize();\n        for (let i = 0; i < provisioningInfoLength; i++) {\n          const _provisioning_info = new ProvisioningInfo();\n          reader.offset = _provisioning_info.fromBuffer(reader.buffer, reader.offset);\n          this.provisioning_info.push(_provisioning_info);\n        }\n        this.alt_auth_factors = [];\n        const altAuthFactorLength = reader.readCompactSize();\n        if (altAuthFactorLength > 0) {\n          throw new Error(\"Alt auth factors currently unsupported\");\n        }\n        this.attestations = [];\n        const attestationsLength = reader.readCompactSize();\n        if (attestationsLength > 0) {\n          throw new Error(\"Attestations currently unsupported\");\n        }\n        this.redirect_uris = [];\n        const urisLength = reader.readCompactSize();\n        for (let i = 0; i < urisLength; i++) {\n          const _redirect_uri = new RedirectUri();\n          reader.offset = _redirect_uri.fromBuffer(reader.buffer, reader.offset);\n          this.redirect_uris.push(_redirect_uri);\n        }\n      }\n      const _context = new Context_1.Context();\n      reader.offset = _context.fromBuffer(reader.buffer, reader.offset);\n      this.context = _context;\n    }\n    return reader.offset;\n  }\n  toJson() {\n    return {\n      vdxfkey: this.vdxfkey,\n      challenge_id: this.challenge_id,\n      requested_access: this.requested_access,\n      requested_access_audience: this.requested_access_audience,\n      subject: this.subject,\n      provisioning_info: this.provisioning_info,\n      alt_auth_factors: this.alt_auth_factors,\n      session_id: this.session_id,\n      attestations: this.attestations,\n      redirect_uris: this.redirect_uris ? this.redirect_uris.map(x => x.toJson()) : this.redirect_uris,\n      created_at: this.created_at,\n      salt: this.salt,\n      context: this.context,\n      skip: this.skip\n    };\n  }\n}\nexports.Challenge = Challenge;","map":{"version":3,"names":["Object","defineProperty","exports","value","Challenge","Attestation","AltAuthFactor","Audience","RequestedPermission","ProvisioningInfo","Subject","RedirectUri","__1","require","bufferutils_1","varuint_1","Context_1","Hash160_1","VDXFObject","constructor","uri","arguments","length","undefined","vdxfkey","dataByteLength","toDataBuffer","Buffer","from","fromDataBuffer","buffer","offset","reader","default","BufferReader","readVarSlice","toString","toJson","Utf8OrBase58Object","data","ID_ADDRESS_VDXF_KEY","vdxfid","ID_PARENT_VDXF_KEY","ID_SYSTEMID_VDXF_KEY","Utf8DataVdxfObject","challenge","challenge_id","created_at","LOGIN_CONSENT_CHALLENGE_VDXF_KEY","requested_access","map","x","requested_access_audience","subject","provisioning_info","alt_auth_factors","session_id","attestations","redirect_uris","salt","context","Context","kv","skip","_challenge_id","Hash160","fromAddress","_created_at","_salt","getEmpty","_session_id","_requested_access","_requested_access_audience","_subject","_provisioning_info","_alt_auth_factors","_attestations","_redirect_uris","_context","byteLength","encodingLength","reduce","sum","current","alloc","writer","BufferWriter","writeSlice","toBuffer","writeUInt64","writeUInt8","writeArray","challengeLength","readCompactSize","Error","fromBuffer","toAddress","readUInt64","readUInt8","requestedAccessLength","i","_perm","push","audienceLength","subjectLength","provisioningInfoLength","altAuthFactorLength","attestationsLength","urisLength","_redirect_uri"],"sources":["/Users/oddfl3x/Code/varB/vARRRBridgeWebsite-main/node_modules/verus-typescript-primitives/dist/vdxf/classes/Challenge.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Challenge = exports.Attestation = exports.AltAuthFactor = exports.Audience = exports.RequestedPermission = exports.ProvisioningInfo = exports.Subject = exports.RedirectUri = void 0;\nconst __1 = require(\"../\");\nconst bufferutils_1 = require(\"../../utils/bufferutils\");\nconst varuint_1 = require(\"../../utils/varuint\");\nconst Context_1 = require(\"./Context\");\nconst Hash160_1 = require(\"./Hash160\");\nclass RedirectUri extends __1.VDXFObject {\n    constructor(uri = \"\", vdxfkey = \"\") {\n        super(vdxfkey);\n        this.uri = uri;\n    }\n    dataByteLength() {\n        return this.toDataBuffer().length;\n    }\n    toDataBuffer() {\n        return Buffer.from(this.uri, \"utf-8\");\n    }\n    fromDataBuffer(buffer, offset) {\n        const reader = new bufferutils_1.default.BufferReader(buffer, offset);\n        this.uri = reader.readVarSlice().toString(\"utf-8\");\n        return reader.offset;\n    }\n    toJson() {\n        return {\n            uri: this.uri,\n            vdxfkey: this.vdxfkey,\n        };\n    }\n}\nexports.RedirectUri = RedirectUri;\nclass Subject extends __1.Utf8OrBase58Object {\n    constructor(data = \"\", vdxfkey = \"\") {\n        super(data, vdxfkey, [\n            __1.ID_ADDRESS_VDXF_KEY.vdxfid,\n            __1.ID_PARENT_VDXF_KEY.vdxfid,\n            __1.ID_SYSTEMID_VDXF_KEY.vdxfid,\n        ]);\n    }\n}\nexports.Subject = Subject;\nclass ProvisioningInfo extends __1.Utf8OrBase58Object {\n    constructor(data = \"\", vdxfkey = \"\") {\n        super(data, vdxfkey, [\n            __1.ID_ADDRESS_VDXF_KEY.vdxfid,\n            __1.ID_PARENT_VDXF_KEY.vdxfid,\n            __1.ID_SYSTEMID_VDXF_KEY.vdxfid,\n        ]);\n    }\n}\nexports.ProvisioningInfo = ProvisioningInfo;\nclass RequestedPermission extends __1.Utf8DataVdxfObject {\n    constructor(vdxfkey = \"\") {\n        super(\"\", vdxfkey);\n    }\n}\nexports.RequestedPermission = RequestedPermission;\nclass Audience extends __1.Utf8DataVdxfObject {\n}\nexports.Audience = Audience;\nclass AltAuthFactor extends __1.Utf8DataVdxfObject {\n}\nexports.AltAuthFactor = AltAuthFactor;\nclass Attestation extends __1.Utf8DataVdxfObject {\n}\nexports.Attestation = Attestation;\nclass Challenge extends __1.VDXFObject {\n    constructor(challenge = { challenge_id: \"\", created_at: 0 }, vdxfkey = __1.LOGIN_CONSENT_CHALLENGE_VDXF_KEY.vdxfid) {\n        super(vdxfkey);\n        this.challenge_id = challenge.challenge_id;\n        this.requested_access = challenge.requested_access\n            ? challenge.requested_access.map((x) => new RequestedPermission(x.vdxfkey))\n            : challenge.requested_access;\n        this.requested_access_audience = challenge.requested_access_audience;\n        this.subject = challenge.subject\n            ? challenge.subject.map((x) => new Subject(x.data, x.vdxfkey))\n            : challenge.subject;\n        this.provisioning_info = challenge.provisioning_info\n            ? challenge.provisioning_info.map((x) => new ProvisioningInfo(x.data, x.vdxfkey))\n            : challenge.provisioning_info;\n        this.alt_auth_factors = challenge.alt_auth_factors;\n        this.session_id = challenge.session_id;\n        this.attestations = challenge.attestations;\n        this.redirect_uris = challenge.redirect_uris\n            ? challenge.redirect_uris.map((x) => new RedirectUri(x.uri, x.vdxfkey))\n            : challenge.redirect_uris;\n        this.created_at = challenge.created_at;\n        this.salt = challenge.salt;\n        this.context = challenge.context\n            ? new Context_1.Context(challenge.context.kv)\n            : challenge.context;\n        this.skip = challenge.skip ? true : false;\n    }\n    dataByteLength() {\n        let length = 0;\n        const _challenge_id = Hash160_1.Hash160.fromAddress(this.challenge_id, true);\n        const _created_at = this.created_at;\n        const _salt = this.salt\n            ? Hash160_1.Hash160.fromAddress(this.salt, true)\n            : Hash160_1.Hash160.getEmpty();\n        const _session_id = this.session_id\n            ? Hash160_1.Hash160.fromAddress(this.session_id, true)\n            : Hash160_1.Hash160.getEmpty();\n        const _requested_access = this.requested_access\n            ? this.requested_access\n            : [];\n        const _requested_access_audience = [];\n        const _subject = this.subject ? this.subject : [];\n        const _provisioning_info = this.provisioning_info ? this.provisioning_info : [];\n        const _alt_auth_factors = [];\n        const _attestations = [];\n        const _redirect_uris = this.redirect_uris ? this.redirect_uris : [];\n        const _context = this.context ? this.context : new Context_1.Context({});\n        length += _challenge_id.byteLength();\n        length += 8; // created_at\n        length += _salt.byteLength();\n        if (this.vdxfkey === __1.LOGIN_CONSENT_CHALLENGE_VDXF_KEY.vdxfid) {\n            length += 1; // skip\n            length += _session_id.byteLength();\n            length += varuint_1.default.encodingLength(_requested_access.length);\n            length += _requested_access.reduce((sum, current) => sum + current.byteLength(), 0);\n            length += varuint_1.default.encodingLength(_requested_access_audience.length);\n            length += varuint_1.default.encodingLength(_subject.length);\n            length += _subject.reduce((sum, current) => sum + current.byteLength(), 0);\n            length += varuint_1.default.encodingLength(_provisioning_info.length);\n            length += _provisioning_info.reduce((sum, current) => sum + current.byteLength(), 0);\n            length += varuint_1.default.encodingLength(_alt_auth_factors.length);\n            length += varuint_1.default.encodingLength(_attestations.length);\n            length += varuint_1.default.encodingLength(_redirect_uris.length);\n            length += _redirect_uris.reduce((sum, current) => sum + current.byteLength(), 0);\n        }\n        length += _context.byteLength();\n        return length;\n    }\n    toDataBuffer() {\n        const buffer = Buffer.alloc(this.dataByteLength());\n        const writer = new bufferutils_1.default.BufferWriter(buffer);\n        const _challenge_id = Hash160_1.Hash160.fromAddress(this.challenge_id, true);\n        const _created_at = this.created_at;\n        const _salt = this.salt\n            ? Hash160_1.Hash160.fromAddress(this.salt, true)\n            : Hash160_1.Hash160.getEmpty();\n        const _session_id = this.session_id\n            ? Hash160_1.Hash160.fromAddress(this.session_id, true)\n            : Hash160_1.Hash160.getEmpty();\n        const _requested_access = this.requested_access\n            ? this.requested_access\n            : [];\n        const _requested_access_audience = [];\n        const _subject = this.subject ? this.subject : [];\n        const _provisioning_info = this.provisioning_info ? this.provisioning_info : [];\n        const _alt_auth_factors = [];\n        const _attestations = [];\n        const _redirect_uris = this.redirect_uris ? this.redirect_uris : [];\n        const _context = this.context ? this.context : new Context_1.Context({});\n        writer.writeSlice(_challenge_id.toBuffer());\n        writer.writeUInt64(_created_at);\n        writer.writeSlice(_salt.toBuffer());\n        if (this.vdxfkey === __1.LOGIN_CONSENT_CHALLENGE_VDXF_KEY.vdxfid) {\n            writer.writeUInt8(this.skip ? 1 : 0);\n            writer.writeSlice(_session_id.toBuffer());\n            writer.writeArray(_requested_access.map((x) => x.toBuffer()));\n            writer.writeArray(_requested_access_audience.map((x) => x.toBuffer()));\n            writer.writeArray(_subject.map((x) => x.toBuffer()));\n            writer.writeArray(_provisioning_info.map((x) => x.toBuffer()));\n            writer.writeArray(_alt_auth_factors.map((x) => x.toBuffer()));\n            writer.writeArray(_attestations.map((x) => x.toBuffer()));\n            writer.writeArray(_redirect_uris.map((x) => x.toBuffer()));\n        }\n        writer.writeSlice(_context.toBuffer());\n        return writer.buffer;\n    }\n    fromDataBuffer(buffer, offset) {\n        const reader = new bufferutils_1.default.BufferReader(buffer, offset);\n        const challengeLength = reader.readCompactSize();\n        if (challengeLength == 0) {\n            throw new Error(\"Cannot create challenge from empty buffer\");\n        }\n        else {\n            const _challenge_id = new Hash160_1.Hash160();\n            reader.offset = _challenge_id.fromBuffer(reader.buffer, true, reader.offset);\n            this.challenge_id = _challenge_id.toAddress();\n            this.created_at = reader.readUInt64();\n            const _salt = new Hash160_1.Hash160();\n            reader.offset = _salt.fromBuffer(reader.buffer, true, reader.offset);\n            this.salt = _salt.toAddress();\n            if (this.vdxfkey === __1.LOGIN_CONSENT_CHALLENGE_VDXF_KEY.vdxfid) {\n                this.skip = reader.readUInt8() === 1 ? true : false;\n                const _session_id = new Hash160_1.Hash160();\n                reader.offset = _session_id.fromBuffer(reader.buffer, true, reader.offset);\n                this.session_id = _session_id.toAddress();\n                this.requested_access = [];\n                const requestedAccessLength = reader.readCompactSize();\n                for (let i = 0; i < requestedAccessLength; i++) {\n                    const _perm = new RequestedPermission();\n                    reader.offset = _perm.fromBuffer(reader.buffer, reader.offset);\n                    this.requested_access.push(_perm);\n                }\n                this.requested_access_audience = [];\n                const audienceLength = reader.readCompactSize();\n                if (audienceLength > 0) {\n                    throw new Error(\"Requested access audience currently unsupported\");\n                }\n                this.subject = [];\n                const subjectLength = reader.readCompactSize();\n                for (let i = 0; i < subjectLength; i++) {\n                    const _subject = new Subject();\n                    reader.offset = _subject.fromBuffer(reader.buffer, reader.offset);\n                    this.subject.push(_subject);\n                }\n                this.provisioning_info = [];\n                const provisioningInfoLength = reader.readCompactSize();\n                for (let i = 0; i < provisioningInfoLength; i++) {\n                    const _provisioning_info = new ProvisioningInfo();\n                    reader.offset = _provisioning_info.fromBuffer(reader.buffer, reader.offset);\n                    this.provisioning_info.push(_provisioning_info);\n                }\n                this.alt_auth_factors = [];\n                const altAuthFactorLength = reader.readCompactSize();\n                if (altAuthFactorLength > 0) {\n                    throw new Error(\"Alt auth factors currently unsupported\");\n                }\n                this.attestations = [];\n                const attestationsLength = reader.readCompactSize();\n                if (attestationsLength > 0) {\n                    throw new Error(\"Attestations currently unsupported\");\n                }\n                this.redirect_uris = [];\n                const urisLength = reader.readCompactSize();\n                for (let i = 0; i < urisLength; i++) {\n                    const _redirect_uri = new RedirectUri();\n                    reader.offset = _redirect_uri.fromBuffer(reader.buffer, reader.offset);\n                    this.redirect_uris.push(_redirect_uri);\n                }\n            }\n            const _context = new Context_1.Context();\n            reader.offset = _context.fromBuffer(reader.buffer, reader.offset);\n            this.context = _context;\n        }\n        return reader.offset;\n    }\n    toJson() {\n        return {\n            vdxfkey: this.vdxfkey,\n            challenge_id: this.challenge_id,\n            requested_access: this.requested_access,\n            requested_access_audience: this.requested_access_audience,\n            subject: this.subject,\n            provisioning_info: this.provisioning_info,\n            alt_auth_factors: this.alt_auth_factors,\n            session_id: this.session_id,\n            attestations: this.attestations,\n            redirect_uris: this.redirect_uris\n                ? this.redirect_uris.map((x) => x.toJson())\n                : this.redirect_uris,\n            created_at: this.created_at,\n            salt: this.salt,\n            context: this.context,\n            skip: this.skip,\n        };\n    }\n}\nexports.Challenge = Challenge;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}