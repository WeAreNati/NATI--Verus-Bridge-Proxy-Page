{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TokenOutput = exports.TOKEN_OUTPUT_VERSION_MULTIVALUE = exports.TOKEN_OUTPUT_VERSION_LASTVALID = exports.TOKEN_OUTPUT_VERSION_FIRSTVALID = exports.TOKEN_OUTPUT_VERSION_CURRENT = exports.TOKEN_OUTPUT_VERSION_INVALID = void 0;\nconst CurrencyValueMap_1 = require(\"./CurrencyValueMap\");\nconst varint_1 = require(\"../utils/varint\");\nconst bufferutils_1 = require(\"../utils/bufferutils\");\nconst bn_js_1 = require(\"bn.js\");\nconst {\n  BufferReader,\n  BufferWriter\n} = bufferutils_1.default;\nexports.TOKEN_OUTPUT_VERSION_INVALID = new bn_js_1.BN(0, 10);\nexports.TOKEN_OUTPUT_VERSION_CURRENT = new bn_js_1.BN(1, 10);\nexports.TOKEN_OUTPUT_VERSION_FIRSTVALID = new bn_js_1.BN(1, 10);\nexports.TOKEN_OUTPUT_VERSION_LASTVALID = new bn_js_1.BN(1, 10);\nexports.TOKEN_OUTPUT_VERSION_MULTIVALUE = new bn_js_1.BN('80000000', 16);\nclass TokenOutput {\n  constructor(data) {\n    this.version = exports.TOKEN_OUTPUT_VERSION_INVALID;\n    this.reserve_values = new CurrencyValueMap_1.CurrencyValueMap();\n    if (data != null) {\n      if (data.values != null) this.reserve_values = data.values;\n      if (data.version != null) this.version = data.version;\n    }\n  }\n  getByteLength() {\n    return varint_1.default.encodingLength(this.version) + this.reserve_values.getByteLength();\n  }\n  toBuffer() {\n    const multivalue = !!this.version.and(exports.TOKEN_OUTPUT_VERSION_MULTIVALUE).toNumber();\n    if (multivalue) {\n      this.reserve_values.multivalue = true;\n    }\n    const serializedSize = this.getByteLength();\n    const writer = new BufferWriter(Buffer.alloc(serializedSize));\n    writer.writeVarInt(this.version);\n    writer.writeSlice(this.reserve_values.toBuffer());\n    return writer.buffer;\n  }\n  fromBuffer(buffer, offset = 0) {\n    const reader = new BufferReader(buffer, offset);\n    this.version = reader.readVarInt();\n    const multivalue = !!this.version.and(exports.TOKEN_OUTPUT_VERSION_MULTIVALUE).toNumber();\n    this.reserve_values = new CurrencyValueMap_1.CurrencyValueMap({\n      multivalue\n    });\n    reader.offset = this.reserve_values.fromBuffer(reader.buffer, reader.offset);\n    return reader.offset;\n  }\n  firstCurrency() {\n    const iterator = this.reserve_values.value_map.entries().next();\n    return iterator.done ? null : iterator.value[0];\n  }\n  firstValue() {\n    const iterator = this.reserve_values.value_map.entries().next();\n    return iterator.done ? null : iterator.value[1];\n  }\n  getVersion() {\n    return this.version;\n  }\n  isValid() {\n    return this.version.gte(exports.TOKEN_OUTPUT_VERSION_FIRSTVALID) && this.version.lte(exports.TOKEN_OUTPUT_VERSION_LASTVALID);\n  }\n}\nexports.TokenOutput = TokenOutput;","map":{"version":3,"names":["Object","defineProperty","exports","value","TokenOutput","TOKEN_OUTPUT_VERSION_MULTIVALUE","TOKEN_OUTPUT_VERSION_LASTVALID","TOKEN_OUTPUT_VERSION_FIRSTVALID","TOKEN_OUTPUT_VERSION_CURRENT","TOKEN_OUTPUT_VERSION_INVALID","CurrencyValueMap_1","require","varint_1","bufferutils_1","bn_js_1","BufferReader","BufferWriter","default","BN","constructor","data","version","reserve_values","CurrencyValueMap","values","getByteLength","encodingLength","toBuffer","multivalue","and","toNumber","serializedSize","writer","Buffer","alloc","writeVarInt","writeSlice","buffer","fromBuffer","offset","reader","readVarInt","firstCurrency","iterator","value_map","entries","next","done","firstValue","getVersion","isValid","gte","lte"],"sources":["/Users/oddfl3x/Code/varB/NATIBridgeWebsite-main/node_modules/verus-typescript-primitives/dist/pbaas/TokenOutput.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TokenOutput = exports.TOKEN_OUTPUT_VERSION_MULTIVALUE = exports.TOKEN_OUTPUT_VERSION_LASTVALID = exports.TOKEN_OUTPUT_VERSION_FIRSTVALID = exports.TOKEN_OUTPUT_VERSION_CURRENT = exports.TOKEN_OUTPUT_VERSION_INVALID = void 0;\nconst CurrencyValueMap_1 = require(\"./CurrencyValueMap\");\nconst varint_1 = require(\"../utils/varint\");\nconst bufferutils_1 = require(\"../utils/bufferutils\");\nconst bn_js_1 = require(\"bn.js\");\nconst { BufferReader, BufferWriter } = bufferutils_1.default;\nexports.TOKEN_OUTPUT_VERSION_INVALID = new bn_js_1.BN(0, 10);\nexports.TOKEN_OUTPUT_VERSION_CURRENT = new bn_js_1.BN(1, 10);\nexports.TOKEN_OUTPUT_VERSION_FIRSTVALID = new bn_js_1.BN(1, 10);\nexports.TOKEN_OUTPUT_VERSION_LASTVALID = new bn_js_1.BN(1, 10);\nexports.TOKEN_OUTPUT_VERSION_MULTIVALUE = new bn_js_1.BN('80000000', 16);\nclass TokenOutput {\n    constructor(data) {\n        this.version = exports.TOKEN_OUTPUT_VERSION_INVALID;\n        this.reserve_values = new CurrencyValueMap_1.CurrencyValueMap();\n        if (data != null) {\n            if (data.values != null)\n                this.reserve_values = data.values;\n            if (data.version != null)\n                this.version = data.version;\n        }\n    }\n    getByteLength() {\n        return varint_1.default.encodingLength(this.version) + this.reserve_values.getByteLength();\n    }\n    toBuffer() {\n        const multivalue = !!(this.version.and(exports.TOKEN_OUTPUT_VERSION_MULTIVALUE).toNumber());\n        if (multivalue) {\n            this.reserve_values.multivalue = true;\n        }\n        const serializedSize = this.getByteLength();\n        const writer = new BufferWriter(Buffer.alloc(serializedSize));\n        writer.writeVarInt(this.version);\n        writer.writeSlice(this.reserve_values.toBuffer());\n        return writer.buffer;\n    }\n    fromBuffer(buffer, offset = 0) {\n        const reader = new BufferReader(buffer, offset);\n        this.version = reader.readVarInt();\n        const multivalue = !!(this.version.and(exports.TOKEN_OUTPUT_VERSION_MULTIVALUE).toNumber());\n        this.reserve_values = new CurrencyValueMap_1.CurrencyValueMap({ multivalue });\n        reader.offset = this.reserve_values.fromBuffer(reader.buffer, reader.offset);\n        return reader.offset;\n    }\n    firstCurrency() {\n        const iterator = this.reserve_values.value_map.entries().next();\n        return iterator.done ? null : iterator.value[0];\n    }\n    firstValue() {\n        const iterator = this.reserve_values.value_map.entries().next();\n        return iterator.done ? null : iterator.value[1];\n    }\n    getVersion() {\n        return this.version;\n    }\n    isValid() {\n        return (this.version.gte(exports.TOKEN_OUTPUT_VERSION_FIRSTVALID) &&\n            this.version.lte(exports.TOKEN_OUTPUT_VERSION_LASTVALID));\n    }\n}\nexports.TokenOutput = TokenOutput;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,WAAW,GAAGF,OAAO,CAACG,+BAA+B,GAAGH,OAAO,CAACI,8BAA8B,GAAGJ,OAAO,CAACK,+BAA+B,GAAGL,OAAO,CAACM,4BAA4B,GAAGN,OAAO,CAACO,4BAA4B,GAAG,KAAK,CAAC;AACvO,MAAMC,kBAAkB,GAAGC,OAAO,CAAC,oBAAoB,CAAC;AACxD,MAAMC,QAAQ,GAAGD,OAAO,CAAC,iBAAiB,CAAC;AAC3C,MAAME,aAAa,GAAGF,OAAO,CAAC,sBAAsB,CAAC;AACrD,MAAMG,OAAO,GAAGH,OAAO,CAAC,OAAO,CAAC;AAChC,MAAM;EAAEI,YAAY;EAAEC;AAAa,CAAC,GAAGH,aAAa,CAACI,OAAO;AAC5Df,OAAO,CAACO,4BAA4B,GAAG,IAAIK,OAAO,CAACI,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;AAC5DhB,OAAO,CAACM,4BAA4B,GAAG,IAAIM,OAAO,CAACI,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;AAC5DhB,OAAO,CAACK,+BAA+B,GAAG,IAAIO,OAAO,CAACI,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;AAC/DhB,OAAO,CAACI,8BAA8B,GAAG,IAAIQ,OAAO,CAACI,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;AAC9DhB,OAAO,CAACG,+BAA+B,GAAG,IAAIS,OAAO,CAACI,EAAE,CAAC,UAAU,EAAE,EAAE,CAAC;AACxE,MAAMd,WAAW,CAAC;EACde,WAAWA,CAACC,IAAI,EAAE;IACd,IAAI,CAACC,OAAO,GAAGnB,OAAO,CAACO,4BAA4B;IACnD,IAAI,CAACa,cAAc,GAAG,IAAIZ,kBAAkB,CAACa,gBAAgB,CAAC,CAAC;IAC/D,IAAIH,IAAI,IAAI,IAAI,EAAE;MACd,IAAIA,IAAI,CAACI,MAAM,IAAI,IAAI,EACnB,IAAI,CAACF,cAAc,GAAGF,IAAI,CAACI,MAAM;MACrC,IAAIJ,IAAI,CAACC,OAAO,IAAI,IAAI,EACpB,IAAI,CAACA,OAAO,GAAGD,IAAI,CAACC,OAAO;IACnC;EACJ;EACAI,aAAaA,CAAA,EAAG;IACZ,OAAOb,QAAQ,CAACK,OAAO,CAACS,cAAc,CAAC,IAAI,CAACL,OAAO,CAAC,GAAG,IAAI,CAACC,cAAc,CAACG,aAAa,CAAC,CAAC;EAC9F;EACAE,QAAQA,CAAA,EAAG;IACP,MAAMC,UAAU,GAAG,CAAC,CAAE,IAAI,CAACP,OAAO,CAACQ,GAAG,CAAC3B,OAAO,CAACG,+BAA+B,CAAC,CAACyB,QAAQ,CAAC,CAAE;IAC3F,IAAIF,UAAU,EAAE;MACZ,IAAI,CAACN,cAAc,CAACM,UAAU,GAAG,IAAI;IACzC;IACA,MAAMG,cAAc,GAAG,IAAI,CAACN,aAAa,CAAC,CAAC;IAC3C,MAAMO,MAAM,GAAG,IAAIhB,YAAY,CAACiB,MAAM,CAACC,KAAK,CAACH,cAAc,CAAC,CAAC;IAC7DC,MAAM,CAACG,WAAW,CAAC,IAAI,CAACd,OAAO,CAAC;IAChCW,MAAM,CAACI,UAAU,CAAC,IAAI,CAACd,cAAc,CAACK,QAAQ,CAAC,CAAC,CAAC;IACjD,OAAOK,MAAM,CAACK,MAAM;EACxB;EACAC,UAAUA,CAACD,MAAM,EAAEE,MAAM,GAAG,CAAC,EAAE;IAC3B,MAAMC,MAAM,GAAG,IAAIzB,YAAY,CAACsB,MAAM,EAAEE,MAAM,CAAC;IAC/C,IAAI,CAAClB,OAAO,GAAGmB,MAAM,CAACC,UAAU,CAAC,CAAC;IAClC,MAAMb,UAAU,GAAG,CAAC,CAAE,IAAI,CAACP,OAAO,CAACQ,GAAG,CAAC3B,OAAO,CAACG,+BAA+B,CAAC,CAACyB,QAAQ,CAAC,CAAE;IAC3F,IAAI,CAACR,cAAc,GAAG,IAAIZ,kBAAkB,CAACa,gBAAgB,CAAC;MAAEK;IAAW,CAAC,CAAC;IAC7EY,MAAM,CAACD,MAAM,GAAG,IAAI,CAACjB,cAAc,CAACgB,UAAU,CAACE,MAAM,CAACH,MAAM,EAAEG,MAAM,CAACD,MAAM,CAAC;IAC5E,OAAOC,MAAM,CAACD,MAAM;EACxB;EACAG,aAAaA,CAAA,EAAG;IACZ,MAAMC,QAAQ,GAAG,IAAI,CAACrB,cAAc,CAACsB,SAAS,CAACC,OAAO,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC;IAC/D,OAAOH,QAAQ,CAACI,IAAI,GAAG,IAAI,GAAGJ,QAAQ,CAACxC,KAAK,CAAC,CAAC,CAAC;EACnD;EACA6C,UAAUA,CAAA,EAAG;IACT,MAAML,QAAQ,GAAG,IAAI,CAACrB,cAAc,CAACsB,SAAS,CAACC,OAAO,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC;IAC/D,OAAOH,QAAQ,CAACI,IAAI,GAAG,IAAI,GAAGJ,QAAQ,CAACxC,KAAK,CAAC,CAAC,CAAC;EACnD;EACA8C,UAAUA,CAAA,EAAG;IACT,OAAO,IAAI,CAAC5B,OAAO;EACvB;EACA6B,OAAOA,CAAA,EAAG;IACN,OAAQ,IAAI,CAAC7B,OAAO,CAAC8B,GAAG,CAACjD,OAAO,CAACK,+BAA+B,CAAC,IAC7D,IAAI,CAACc,OAAO,CAAC+B,GAAG,CAAClD,OAAO,CAACI,8BAA8B,CAAC;EAChE;AACJ;AACAJ,OAAO,CAACE,WAAW,GAAGA,WAAW","ignoreList":[]},"metadata":{},"sourceType":"script"}