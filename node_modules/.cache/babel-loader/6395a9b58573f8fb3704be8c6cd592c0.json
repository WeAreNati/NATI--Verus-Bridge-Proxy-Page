{"ast":null,"code":"import { AbstractConnector } from '@web3-react/abstract-connector';\nimport invariant from 'tiny-invariant';\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  _setPrototypeOf(subClass, superClass);\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nfunction _construct(Parent, args, Class) {\n  if (_isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) _setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n  return _construct.apply(null, arguments);\n}\nfunction _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}\nfunction _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !_isNativeFunction(Class)) return Class;\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n      _cache.set(Class, Wrapper);\n    }\n    function Wrapper() {\n      return _construct(Class, arguments, _getPrototypeOf(this).constructor);\n    }\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return _setPrototypeOf(Wrapper, Class);\n  };\n  return _wrapNativeSuper(Class);\n}\nvar RequestError = /*#__PURE__*/function (_Error) {\n  _inheritsLoose(RequestError, _Error);\n  function RequestError(message, code, data) {\n    var _this;\n    _this = _Error.call(this) || this;\n    _this.code = code;\n    _this.data = data;\n    _this.name = _this.constructor.name;\n    _this.message = message;\n    return _this;\n  }\n  return RequestError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\nvar MiniRpcProvider = function MiniRpcProvider(chainId, url) {\n  var _this3 = this;\n  var _this2 = this;\n  this.isMetaMask = false;\n  this.sendAsync = function (request, callback) {\n    console.log('sendAsync', request.method, request.params);\n    _this2.request(request.method, request.params).then(function (result) {\n      return callback(null, {\n        jsonrpc: '2.0',\n        id: request.id,\n        result: result\n      });\n    })[\"catch\"](function (error) {\n      return callback(error, null);\n    });\n  };\n  this.request = function (method, params) {\n    try {\n      if (typeof method !== 'string') {\n        params = method.params;\n        method = method.method;\n      }\n      return Promise.resolve(fetch(_this3.url, {\n        method: 'POST',\n        body: JSON.stringify({\n          jsonrpc: '2.0',\n          id: 1,\n          method: method,\n          params: params\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })).then(function (response) {\n        if (!response.ok) throw new RequestError(response.status + \": \" + response.statusText, -32000);\n        return Promise.resolve(response.json()).then(function (body) {\n          if ('error' in body) {\n            var _body$error, _body$error2, _body$error3;\n            throw new RequestError(body == null ? void 0 : (_body$error = body.error) == null ? void 0 : _body$error.message, body == null ? void 0 : (_body$error2 = body.error) == null ? void 0 : _body$error2.code, body == null ? void 0 : (_body$error3 = body.error) == null ? void 0 : _body$error3.data);\n          } else if ('result' in body) {\n            return body.result;\n          } else {\n            throw new RequestError(\"Received unexpected JSON-RPC response to \" + method + \" request.\", -32000, body);\n          }\n        });\n      });\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  this.chainId = chainId;\n  this.url = url;\n  var parsed = new URL(url);\n  this.host = parsed.host;\n  this.path = parsed.pathname;\n};\nvar NetworkConnector = /*#__PURE__*/function (_AbstractConnector) {\n  _inheritsLoose(NetworkConnector, _AbstractConnector);\n  function NetworkConnector(_ref) {\n    var _this4;\n    var urls = _ref.urls,\n      defaultChainId = _ref.defaultChainId;\n    !(defaultChainId || Object.keys(urls).length === 1) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'defaultChainId is a required argument with >1 url') : invariant(false) : void 0;\n    _this4 = _AbstractConnector.call(this, {\n      supportedChainIds: Object.keys(urls).map(function (k) {\n        return Number(k);\n      })\n    }) || this;\n    _this4.currentChainId = defaultChainId || Number(Object.keys(urls)[0]);\n    _this4.providers = Object.keys(urls).reduce(function (accumulator, chainId) {\n      accumulator[Number(chainId)] = new MiniRpcProvider(Number(chainId), urls[Number(chainId)]);\n      return accumulator;\n    }, {});\n    return _this4;\n  }\n  var _proto = NetworkConnector.prototype;\n  _proto.activate = function activate() {\n    try {\n      var _this6 = this;\n      return Promise.resolve({\n        provider: _this6.providers[_this6.currentChainId],\n        chainId: _this6.currentChainId,\n        account: null\n      });\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  _proto.getProvider = function getProvider() {\n    try {\n      var _this8 = this;\n      return Promise.resolve(_this8.providers[_this8.currentChainId]);\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  _proto.getChainId = function getChainId() {\n    try {\n      var _this10 = this;\n      return Promise.resolve(_this10.currentChainId);\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  _proto.getAccount = function getAccount() {\n    return Promise.resolve(null);\n  };\n  _proto.deactivate = function deactivate() {\n    return;\n  };\n  _proto.changeChainId = function changeChainId(chainId) {\n    !Object.keys(this.providers).includes(chainId.toString()) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"No url found for chainId \" + chainId) : invariant(false) : void 0;\n    this.currentChainId = chainId;\n    this.emitUpdate({\n      provider: this.providers[this.currentChainId],\n      chainId: chainId\n    });\n  };\n  return NetworkConnector;\n}(AbstractConnector);\nexport { NetworkConnector, RequestError };","map":{"version":3,"sources":["../src/index.ts"],"names":["RequestError","Error","message","name","constructor","MiniRpcProvider","chainId","url","parsed","URL","host","path","pathname","request","callback","console","log","method","params","then","jsonrpc","id","result","error","response","fetch","body","stringify","headers","ok","status","statusText","json","code","data","NetworkConnector","AbstractConnector","urls","defaultChainId","Object","keys","length","supportedChainIds","map","k","Number","currentChainId","providers","reduce","accumulator","activate","provider","account","getProvider","getChainId","getAccount","deactivate","changeChainId","includes","toString","emitUpdate"],"mappings":"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","sourcesContent":["import { ConnectorUpdate } from '@web3-react/types'\nimport { AbstractConnector } from '@web3-react/abstract-connector'\nimport invariant from 'tiny-invariant'\n\n// taken from ethers.js, compatible interface with web3 provider\ntype AsyncSendable = {\n  isMetaMask?: boolean\n  host?: string\n  path?: string\n  sendAsync?: (request: any, callback: (error: any, response: any) => void) => void\n  send?: (request: any, callback: (error: any, response: any) => void) => void\n}\n\nexport class RequestError extends Error {\n  constructor(message: string, public code: number, public data?: unknown) {\n    super()\n    this.name = this.constructor.name\n    this.message = message\n  }\n}\n\nclass MiniRpcProvider implements AsyncSendable {\n  public readonly isMetaMask: false = false\n  public readonly chainId: number\n  public readonly url: string\n  public readonly host: string\n  public readonly path: string\n\n  constructor(chainId: number, url: string) {\n    this.chainId = chainId\n    this.url = url\n    const parsed = new URL(url)\n    this.host = parsed.host\n    this.path = parsed.pathname\n  }\n\n  public readonly sendAsync = (\n    request: { jsonrpc: '2.0'; id: number | string | null; method: string; params?: unknown[] | object },\n    callback: (error: any, response: any) => void\n  ): void => {\n    console.log('sendAsync', request.method, request.params)\n    this.request(request.method, request.params)\n      .then(result => callback(null, { jsonrpc: '2.0', id: request.id, result }))\n      .catch(error => callback(error, null))\n  }\n\n  public readonly request = async (\n    method: string | { method: string; params?: unknown[] | object },\n    params?: unknown[] | object\n  ): Promise<unknown> => {\n    if (typeof method !== 'string') {\n      params = (method as any).params\n      method = method.method\n    }\n\n    const response = await fetch(this.url, {\n      method: 'POST',\n      body: JSON.stringify({\n        jsonrpc: '2.0',\n        id: 1,\n        method,\n        params\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n    if (!response.ok) throw new RequestError(`${response.status}: ${response.statusText}`, -32000)\n    const body = await response.json()\n    if ('error' in body) {\n      throw new RequestError(body?.error?.message, body?.error?.code, body?.error?.data)\n    } else if ('result' in body) {\n      return body.result\n    } else {\n      throw new RequestError(`Received unexpected JSON-RPC response to ${method} request.`, -32000, body)\n    }\n  }\n}\n\ninterface NetworkConnectorArguments {\n  urls: { [chainId: number]: string }\n  defaultChainId?: number\n}\n\nexport class NetworkConnector extends AbstractConnector {\n  private readonly providers: { [chainId: number]: MiniRpcProvider }\n  private currentChainId: number\n\n  constructor({ urls, defaultChainId }: NetworkConnectorArguments) {\n    invariant(defaultChainId || Object.keys(urls).length === 1, 'defaultChainId is a required argument with >1 url')\n    super({ supportedChainIds: Object.keys(urls).map((k): number => Number(k)) })\n\n    this.currentChainId = defaultChainId || Number(Object.keys(urls)[0])\n    this.providers = Object.keys(urls).reduce<{ [chainId: number]: MiniRpcProvider }>((accumulator, chainId) => {\n      accumulator[Number(chainId)] = new MiniRpcProvider(Number(chainId), urls[Number(chainId)])\n      return accumulator\n    }, {})\n  }\n\n  public async activate(): Promise<ConnectorUpdate> {\n    return { provider: this.providers[this.currentChainId], chainId: this.currentChainId, account: null }\n  }\n\n  public async getProvider(): Promise<MiniRpcProvider> {\n    return this.providers[this.currentChainId]\n  }\n\n  public async getChainId(): Promise<number> {\n    return this.currentChainId\n  }\n\n  public async getAccount(): Promise<null> {\n    return null\n  }\n\n  public deactivate() {\n    return\n  }\n\n  public changeChainId(chainId: number) {\n    invariant(Object.keys(this.providers).includes(chainId.toString()), `No url found for chainId ${chainId}`)\n    this.currentChainId = chainId\n    this.emitUpdate({ provider: this.providers[this.currentChainId], chainId })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}