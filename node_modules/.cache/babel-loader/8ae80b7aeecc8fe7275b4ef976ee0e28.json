{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parseVdxfObjectString = void 0;\nconst base64url_1 = require(\"base64url\");\nconst classes_1 = require(\"./classes\");\nconst keys_1 = require(\"./keys\");\nconst bufferutils_1 = require(\"../utils/bufferutils\");\nconst vdxf_1 = require(\"../constants/vdxf\");\nconst address_1 = require(\"../utils/address\");\nfunction parseVdxfObjectString(str) {\n  const isDeeplinkUri = str.includes(\"x-callback-url\");\n  if (isDeeplinkUri) {\n    const splitUri = str.split('x-callback-url/');\n    const uriTail = splitUri[1];\n    if (uriTail == null) throw new Error(\"Failed to decode deeplink uri\");\n    const splitUriTail = uriTail.split('/');\n    const deeplinkType = splitUriTail[0];\n    if (deeplinkType == null) throw new Error(\"Failed to parse deeplink type\");\n    if (deeplinkType === keys_1.LOGIN_CONSENT_REQUEST_VDXF_KEY.vdxfid) {\n      return classes_1.LoginConsentRequest.fromWalletDeeplinkUri(str);\n    } else if (deeplinkType === keys_1.VERUSPAY_INVOICE_VDXF_KEY.vdxfid) {\n      return classes_1.VerusPayInvoice.fromWalletDeeplinkUri(str);\n    } else throw new Error(\"Unrecognized vdxf object type \" + deeplinkType);\n  } else {\n    const objBuf = base64url_1.default.toBuffer(str);\n    const reader = new bufferutils_1.default.BufferReader(objBuf, 0);\n    const vdxfKeyBuf = reader.readSlice(vdxf_1.HASH160_BYTE_LENGTH);\n    const vdxfKey = (0, address_1.toBase58Check)(vdxfKeyBuf, vdxf_1.I_ADDR_VERSION);\n    if (vdxfKey === keys_1.LOGIN_CONSENT_REQUEST_VDXF_KEY.vdxfid) {\n      return classes_1.LoginConsentRequest.fromQrString(str);\n    } else if (vdxfKey === keys_1.VERUSPAY_INVOICE_VDXF_KEY.vdxfid) {\n      return classes_1.VerusPayInvoice.fromQrString(str);\n    } else throw new Error(\"Unrecognized vdxf object type \" + vdxfKey);\n  }\n}\nexports.parseVdxfObjectString = parseVdxfObjectString;","map":{"version":3,"names":["Object","defineProperty","exports","value","parseVdxfObjectString","base64url_1","require","classes_1","keys_1","bufferutils_1","vdxf_1","address_1","str","isDeeplinkUri","includes","splitUri","split","uriTail","Error","splitUriTail","deeplinkType","LOGIN_CONSENT_REQUEST_VDXF_KEY","vdxfid","LoginConsentRequest","fromWalletDeeplinkUri","VERUSPAY_INVOICE_VDXF_KEY","VerusPayInvoice","objBuf","default","toBuffer","reader","BufferReader","vdxfKeyBuf","readSlice","HASH160_BYTE_LENGTH","vdxfKey","toBase58Check","I_ADDR_VERSION","fromQrString"],"sources":["/Users/oddfl3x/Code/varB/NATI<>Verus Bridge Proxy Page/node_modules/verus-typescript-primitives/dist/vdxf/parser.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseVdxfObjectString = void 0;\nconst base64url_1 = require(\"base64url\");\nconst classes_1 = require(\"./classes\");\nconst keys_1 = require(\"./keys\");\nconst bufferutils_1 = require(\"../utils/bufferutils\");\nconst vdxf_1 = require(\"../constants/vdxf\");\nconst address_1 = require(\"../utils/address\");\nfunction parseVdxfObjectString(str) {\n    const isDeeplinkUri = str.includes(\"x-callback-url\");\n    if (isDeeplinkUri) {\n        const splitUri = str.split('x-callback-url/');\n        const uriTail = splitUri[1];\n        if (uriTail == null)\n            throw new Error(\"Failed to decode deeplink uri\");\n        const splitUriTail = uriTail.split('/');\n        const deeplinkType = splitUriTail[0];\n        if (deeplinkType == null)\n            throw new Error(\"Failed to parse deeplink type\");\n        if (deeplinkType === keys_1.LOGIN_CONSENT_REQUEST_VDXF_KEY.vdxfid) {\n            return classes_1.LoginConsentRequest.fromWalletDeeplinkUri(str);\n        }\n        else if (deeplinkType === keys_1.VERUSPAY_INVOICE_VDXF_KEY.vdxfid) {\n            return classes_1.VerusPayInvoice.fromWalletDeeplinkUri(str);\n        }\n        else\n            throw new Error(\"Unrecognized vdxf object type \" + deeplinkType);\n    }\n    else {\n        const objBuf = base64url_1.default.toBuffer(str);\n        const reader = new bufferutils_1.default.BufferReader(objBuf, 0);\n        const vdxfKeyBuf = reader.readSlice(vdxf_1.HASH160_BYTE_LENGTH);\n        const vdxfKey = (0, address_1.toBase58Check)(vdxfKeyBuf, vdxf_1.I_ADDR_VERSION);\n        if (vdxfKey === keys_1.LOGIN_CONSENT_REQUEST_VDXF_KEY.vdxfid) {\n            return classes_1.LoginConsentRequest.fromQrString(str);\n        }\n        else if (vdxfKey === keys_1.VERUSPAY_INVOICE_VDXF_KEY.vdxfid) {\n            return classes_1.VerusPayInvoice.fromQrString(str);\n        }\n        else\n            throw new Error(\"Unrecognized vdxf object type \" + vdxfKey);\n    }\n}\nexports.parseVdxfObjectString = parseVdxfObjectString;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,qBAAqB,GAAG,KAAK,CAAC;AACtC,MAAMC,WAAW,GAAGC,OAAO,CAAC,WAAW,CAAC;AACxC,MAAMC,SAAS,GAAGD,OAAO,CAAC,WAAW,CAAC;AACtC,MAAME,MAAM,GAAGF,OAAO,CAAC,QAAQ,CAAC;AAChC,MAAMG,aAAa,GAAGH,OAAO,CAAC,sBAAsB,CAAC;AACrD,MAAMI,MAAM,GAAGJ,OAAO,CAAC,mBAAmB,CAAC;AAC3C,MAAMK,SAAS,GAAGL,OAAO,CAAC,kBAAkB,CAAC;AAC7C,SAASF,qBAAqBA,CAACQ,GAAG,EAAE;EAChC,MAAMC,aAAa,GAAGD,GAAG,CAACE,QAAQ,CAAC,gBAAgB,CAAC;EACpD,IAAID,aAAa,EAAE;IACf,MAAME,QAAQ,GAAGH,GAAG,CAACI,KAAK,CAAC,iBAAiB,CAAC;IAC7C,MAAMC,OAAO,GAAGF,QAAQ,CAAC,CAAC,CAAC;IAC3B,IAAIE,OAAO,IAAI,IAAI,EACf,MAAM,IAAIC,KAAK,CAAC,+BAA+B,CAAC;IACpD,MAAMC,YAAY,GAAGF,OAAO,CAACD,KAAK,CAAC,GAAG,CAAC;IACvC,MAAMI,YAAY,GAAGD,YAAY,CAAC,CAAC,CAAC;IACpC,IAAIC,YAAY,IAAI,IAAI,EACpB,MAAM,IAAIF,KAAK,CAAC,+BAA+B,CAAC;IACpD,IAAIE,YAAY,KAAKZ,MAAM,CAACa,8BAA8B,CAACC,MAAM,EAAE;MAC/D,OAAOf,SAAS,CAACgB,mBAAmB,CAACC,qBAAqB,CAACZ,GAAG,CAAC;IACnE,CAAC,MACI,IAAIQ,YAAY,KAAKZ,MAAM,CAACiB,yBAAyB,CAACH,MAAM,EAAE;MAC/D,OAAOf,SAAS,CAACmB,eAAe,CAACF,qBAAqB,CAACZ,GAAG,CAAC;IAC/D,CAAC,MAEG,MAAM,IAAIM,KAAK,CAAC,gCAAgC,GAAGE,YAAY,CAAC;EACxE,CAAC,MACI;IACD,MAAMO,MAAM,GAAGtB,WAAW,CAACuB,OAAO,CAACC,QAAQ,CAACjB,GAAG,CAAC;IAChD,MAAMkB,MAAM,GAAG,IAAIrB,aAAa,CAACmB,OAAO,CAACG,YAAY,CAACJ,MAAM,EAAE,CAAC,CAAC;IAChE,MAAMK,UAAU,GAAGF,MAAM,CAACG,SAAS,CAACvB,MAAM,CAACwB,mBAAmB,CAAC;IAC/D,MAAMC,OAAO,GAAG,CAAC,CAAC,EAAExB,SAAS,CAACyB,aAAa,EAAEJ,UAAU,EAAEtB,MAAM,CAAC2B,cAAc,CAAC;IAC/E,IAAIF,OAAO,KAAK3B,MAAM,CAACa,8BAA8B,CAACC,MAAM,EAAE;MAC1D,OAAOf,SAAS,CAACgB,mBAAmB,CAACe,YAAY,CAAC1B,GAAG,CAAC;IAC1D,CAAC,MACI,IAAIuB,OAAO,KAAK3B,MAAM,CAACiB,yBAAyB,CAACH,MAAM,EAAE;MAC1D,OAAOf,SAAS,CAACmB,eAAe,CAACY,YAAY,CAAC1B,GAAG,CAAC;IACtD,CAAC,MAEG,MAAM,IAAIM,KAAK,CAAC,gCAAgC,GAAGiB,OAAO,CAAC;EACnE;AACJ;AACAjC,OAAO,CAACE,qBAAqB,GAAGA,qBAAqB","ignoreList":[]},"metadata":{},"sourceType":"script"}