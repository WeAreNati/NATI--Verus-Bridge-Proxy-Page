{"ast":null,"code":"'use strict';\n\nlet ALPHABET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l';\n\n// pre-compute lookup table\nlet ALPHABET_MAP = {};\nfor (let z = 0; z < ALPHABET.length; z++) {\n  let x = ALPHABET.charAt(z);\n  if (ALPHABET_MAP[x] !== undefined) throw new TypeError(x + ' is ambiguous');\n  ALPHABET_MAP[x] = z;\n}\nfunction polymodStep(pre) {\n  let b = pre >> 25;\n  return (pre & 0x1FFFFFF) << 5 ^ -(b >> 0 & 1) & 0x3b6a57b2 ^ -(b >> 1 & 1) & 0x26508e6d ^ -(b >> 2 & 1) & 0x1ea119fa ^ -(b >> 3 & 1) & 0x3d4233dd ^ -(b >> 4 & 1) & 0x2a1462b3;\n}\nfunction prefixChk(prefix) {\n  let chk = 1;\n  for (let i = 0; i < prefix.length; ++i) {\n    let c = prefix.charCodeAt(i);\n    if (c < 33 || c > 126) throw new Error('Invalid prefix (' + prefix + ')');\n    chk = polymodStep(chk) ^ c >> 5;\n  }\n  chk = polymodStep(chk);\n  for (let i = 0; i < prefix.length; ++i) {\n    let v = prefix.charCodeAt(i);\n    chk = polymodStep(chk) ^ v & 0x1f;\n  }\n  return chk;\n}\nfunction encode(prefix, words) {\n  // too long?\n  if (prefix.length + 7 + words.length > 90) throw new TypeError('Exceeds Bech32 maximum length');\n  prefix = prefix.toLowerCase();\n\n  // determine chk mod\n  let chk = prefixChk(prefix);\n  let result = prefix + '1';\n  for (let i = 0; i < words.length; ++i) {\n    let x = words[i];\n    if (x >> 5 !== 0) throw new Error('Non 5-bit word');\n    chk = polymodStep(chk) ^ x;\n    result += ALPHABET.charAt(x);\n  }\n  for (let i = 0; i < 6; ++i) {\n    chk = polymodStep(chk);\n  }\n  chk ^= 1;\n  for (let i = 0; i < 6; ++i) {\n    let v = chk >> (5 - i) * 5 & 0x1f;\n    result += ALPHABET.charAt(v);\n  }\n  return result;\n}\nfunction decode(str) {\n  if (str.length < 8) throw new TypeError(str + ' too short');\n  if (str.length > 90) throw new TypeError(str + ' too long');\n\n  // don't allow mixed case\n  let lowered = str.toLowerCase();\n  let uppered = str.toUpperCase();\n  if (str !== lowered && str !== uppered) throw new Error('Mixed-case string ' + str);\n  str = lowered;\n  let split = str.lastIndexOf('1');\n  if (split === 0) throw new Error('Missing prefix for ' + str);\n  let prefix = str.slice(0, split);\n  let wordChars = str.slice(split + 1);\n  if (wordChars.length < 6) throw new Error('Data too short');\n  let chk = prefixChk(prefix);\n  let words = [];\n  for (let i = 0; i < wordChars.length; ++i) {\n    let c = wordChars.charAt(i);\n    let v = ALPHABET_MAP[c];\n    if (v === undefined) throw new Error('Unknown character ' + c);\n    chk = polymodStep(chk) ^ v;\n\n    // not in the checksum?\n    if (i + 6 >= wordChars.length) continue;\n    words.push(v);\n  }\n  if (chk !== 1) throw new Error('Invalid checksum for ' + str);\n  return {\n    prefix,\n    words\n  };\n}\nfunction convert(data, inBits, outBits, pad) {\n  let value = 0;\n  let bits = 0;\n  let maxV = (1 << outBits) - 1;\n  let result = [];\n  for (let i = 0; i < data.length; ++i) {\n    value = value << inBits | data[i];\n    bits += inBits;\n    while (bits >= outBits) {\n      bits -= outBits;\n      result.push(value >> bits & maxV);\n    }\n  }\n  if (pad) {\n    if (bits > 0) {\n      result.push(value << outBits - bits & maxV);\n    }\n  } else {\n    if (bits >= inBits) throw new Error('Excess padding');\n    if (value << outBits - bits & maxV) throw new Error('Non-zero padding');\n  }\n  return result;\n}\nfunction toWords(bytes) {\n  return convert(bytes, 8, 5, true);\n}\nfunction fromWords(words) {\n  return convert(words, 5, 8, false);\n}\nmodule.exports = {\n  decode,\n  encode,\n  toWords,\n  fromWords\n};","map":{"version":3,"names":["ALPHABET","ALPHABET_MAP","z","length","x","charAt","undefined","TypeError","polymodStep","pre","b","prefixChk","prefix","chk","i","c","charCodeAt","Error","v","encode","words","toLowerCase","result","decode","str","lowered","uppered","toUpperCase","split","lastIndexOf","slice","wordChars","push","convert","data","inBits","outBits","pad","value","bits","maxV","toWords","bytes","fromWords","module","exports"],"sources":["/Users/oddfl3x/Code/varB/vARRRBridgeWebsite-main/node_modules/@bitgo/utxo-lib/node_modules/bech32/index.js"],"sourcesContent":["'use strict'\nlet ALPHABET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l'\n\n// pre-compute lookup table\nlet ALPHABET_MAP = {}\nfor (let z = 0; z < ALPHABET.length; z++) {\n  let x = ALPHABET.charAt(z)\n\n  if (ALPHABET_MAP[x] !== undefined) throw new TypeError(x + ' is ambiguous')\n  ALPHABET_MAP[x] = z\n}\n\nfunction polymodStep (pre) {\n  let b = pre >> 25\n  return ((pre & 0x1FFFFFF) << 5) ^\n    (-((b >> 0) & 1) & 0x3b6a57b2) ^\n    (-((b >> 1) & 1) & 0x26508e6d) ^\n    (-((b >> 2) & 1) & 0x1ea119fa) ^\n    (-((b >> 3) & 1) & 0x3d4233dd) ^\n    (-((b >> 4) & 1) & 0x2a1462b3)\n}\n\nfunction prefixChk (prefix) {\n  let chk = 1\n  for (let i = 0; i < prefix.length; ++i) {\n    let c = prefix.charCodeAt(i)\n    if (c < 33 || c > 126) throw new Error('Invalid prefix (' + prefix + ')')\n\n    chk = polymodStep(chk) ^ (c >> 5)\n  }\n  chk = polymodStep(chk)\n\n  for (let i = 0; i < prefix.length; ++i) {\n    let v = prefix.charCodeAt(i)\n    chk = polymodStep(chk) ^ (v & 0x1f)\n  }\n  return chk\n}\n\nfunction encode (prefix, words) {\n  // too long?\n  if ((prefix.length + 7 + words.length) > 90) throw new TypeError('Exceeds Bech32 maximum length')\n  prefix = prefix.toLowerCase()\n\n  // determine chk mod\n  let chk = prefixChk(prefix)\n  let result = prefix + '1'\n  for (let i = 0; i < words.length; ++i) {\n    let x = words[i]\n    if ((x >> 5) !== 0) throw new Error('Non 5-bit word')\n\n    chk = polymodStep(chk) ^ x\n    result += ALPHABET.charAt(x)\n  }\n\n  for (let i = 0; i < 6; ++i) {\n    chk = polymodStep(chk)\n  }\n  chk ^= 1\n\n  for (let i = 0; i < 6; ++i) {\n    let v = (chk >> ((5 - i) * 5)) & 0x1f\n    result += ALPHABET.charAt(v)\n  }\n\n  return result\n}\n\nfunction decode (str) {\n  if (str.length < 8) throw new TypeError(str + ' too short')\n  if (str.length > 90) throw new TypeError(str + ' too long')\n\n  // don't allow mixed case\n  let lowered = str.toLowerCase()\n  let uppered = str.toUpperCase()\n  if (str !== lowered && str !== uppered) throw new Error('Mixed-case string ' + str)\n  str = lowered\n\n  let split = str.lastIndexOf('1')\n  if (split === 0) throw new Error('Missing prefix for ' + str)\n\n  let prefix = str.slice(0, split)\n  let wordChars = str.slice(split + 1)\n  if (wordChars.length < 6) throw new Error('Data too short')\n\n  let chk = prefixChk(prefix)\n  let words = []\n  for (let i = 0; i < wordChars.length; ++i) {\n    let c = wordChars.charAt(i)\n    let v = ALPHABET_MAP[c]\n    if (v === undefined) throw new Error('Unknown character ' + c)\n    chk = polymodStep(chk) ^ v\n\n    // not in the checksum?\n    if (i + 6 >= wordChars.length) continue\n    words.push(v)\n  }\n\n  if (chk !== 1) throw new Error('Invalid checksum for ' + str)\n  return { prefix, words }\n}\n\nfunction convert (data, inBits, outBits, pad) {\n  let value = 0\n  let bits = 0\n  let maxV = (1 << outBits) - 1\n\n  let result = []\n  for (let i = 0; i < data.length; ++i) {\n    value = (value << inBits) | data[i]\n    bits += inBits\n\n    while (bits >= outBits) {\n      bits -= outBits\n      result.push((value >> bits) & maxV)\n    }\n  }\n\n  if (pad) {\n    if (bits > 0) {\n      result.push((value << (outBits - bits)) & maxV)\n    }\n  } else {\n    if (bits >= inBits) throw new Error('Excess padding')\n    if ((value << (outBits - bits)) & maxV) throw new Error('Non-zero padding')\n  }\n\n  return result\n}\n\nfunction toWords (bytes) {\n  return convert(bytes, 8, 5, true)\n}\n\nfunction fromWords (words) {\n  return convert(words, 5, 8, false)\n}\n\nmodule.exports = { decode, encode, toWords, fromWords }\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}