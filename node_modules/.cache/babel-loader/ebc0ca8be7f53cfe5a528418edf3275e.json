{"ast":null,"code":"var script = require('./script');\nvar templates = require('./templates');\nfor (var key in templates) {\n  script[key] = templates[key];\n}\nmodule.exports = {\n  bitgo: require('./bitgo'),\n  bufferutils: require('./bufferutils'),\n  Block: require('./block'),\n  ECPair: require('./ecpair'),\n  ECSignature: require('./ecsignature'),\n  HDNode: require('./hdnode'),\n  Transaction: require('./transaction'),\n  TransactionBuilder: require('./transaction_builder'),\n  SmartTransactionSignatures: require('./smart_transaction_signatures'),\n  SmartTransactionSignature: require('./smart_transaction_signature'),\n  TxDestination: require('./tx_destination'),\n  OptCCParams: require('./optccparams'),\n  IdentitySignature: require('./identity_signature'),\n  smarttxs: require('./smart_transactions'),\n  address: require('./address'),\n  coins: require('./coins'),\n  crypto: require('./crypto'),\n  networks: require('./networks'),\n  opcodes: require('bitcoin-ops'),\n  script: script\n};","map":{"version":3,"names":["script","require","templates","key","module","exports","bitgo","bufferutils","Block","ECPair","ECSignature","HDNode","Transaction","TransactionBuilder","SmartTransactionSignatures","SmartTransactionSignature","TxDestination","OptCCParams","IdentitySignature","smarttxs","address","coins","crypto","networks","opcodes"],"sources":["/Users/oddfl3x/Code/varB/vARRRBridgeWebsite-main/node_modules/@bitgo/utxo-lib/dist/src/index.js"],"sourcesContent":["var script = require('./script');\nvar templates = require('./templates');\nfor (var key in templates) {\n    script[key] = templates[key];\n}\nmodule.exports = {\n    bitgo: require('./bitgo'),\n    bufferutils: require('./bufferutils'),\n    Block: require('./block'),\n    ECPair: require('./ecpair'),\n    ECSignature: require('./ecsignature'),\n    HDNode: require('./hdnode'),\n    Transaction: require('./transaction'),\n    TransactionBuilder: require('./transaction_builder'),\n    SmartTransactionSignatures: require('./smart_transaction_signatures'),\n    SmartTransactionSignature: require('./smart_transaction_signature'),\n    TxDestination: require('./tx_destination'),\n    OptCCParams: require('./optccparams'),\n    IdentitySignature: require('./identity_signature'),\n    smarttxs: require('./smart_transactions'),\n    address: require('./address'),\n    coins: require('./coins'),\n    crypto: require('./crypto'),\n    networks: require('./networks'),\n    opcodes: require('bitcoin-ops'),\n    script: script\n};\n"],"mappings":"AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,UAAU,CAAC;AAChC,IAAIC,SAAS,GAAGD,OAAO,CAAC,aAAa,CAAC;AACtC,KAAK,IAAIE,GAAG,IAAID,SAAS,EAAE;EACvBF,MAAM,CAACG,GAAG,CAAC,GAAGD,SAAS,CAACC,GAAG,CAAC;AAChC;AACAC,MAAM,CAACC,OAAO,GAAG;EACbC,KAAK,EAAEL,OAAO,CAAC,SAAS,CAAC;EACzBM,WAAW,EAAEN,OAAO,CAAC,eAAe,CAAC;EACrCO,KAAK,EAAEP,OAAO,CAAC,SAAS,CAAC;EACzBQ,MAAM,EAAER,OAAO,CAAC,UAAU,CAAC;EAC3BS,WAAW,EAAET,OAAO,CAAC,eAAe,CAAC;EACrCU,MAAM,EAAEV,OAAO,CAAC,UAAU,CAAC;EAC3BW,WAAW,EAAEX,OAAO,CAAC,eAAe,CAAC;EACrCY,kBAAkB,EAAEZ,OAAO,CAAC,uBAAuB,CAAC;EACpDa,0BAA0B,EAAEb,OAAO,CAAC,gCAAgC,CAAC;EACrEc,yBAAyB,EAAEd,OAAO,CAAC,+BAA+B,CAAC;EACnEe,aAAa,EAAEf,OAAO,CAAC,kBAAkB,CAAC;EAC1CgB,WAAW,EAAEhB,OAAO,CAAC,eAAe,CAAC;EACrCiB,iBAAiB,EAAEjB,OAAO,CAAC,sBAAsB,CAAC;EAClDkB,QAAQ,EAAElB,OAAO,CAAC,sBAAsB,CAAC;EACzCmB,OAAO,EAAEnB,OAAO,CAAC,WAAW,CAAC;EAC7BoB,KAAK,EAAEpB,OAAO,CAAC,SAAS,CAAC;EACzBqB,MAAM,EAAErB,OAAO,CAAC,UAAU,CAAC;EAC3BsB,QAAQ,EAAEtB,OAAO,CAAC,YAAY,CAAC;EAC/BuB,OAAO,EAAEvB,OAAO,CAAC,aAAa,CAAC;EAC/BD,MAAM,EAAEA;AACZ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script"}