{"ast":null,"code":"// OP_DUP OP_HASH160 {pubKeyHash} OP_EQUALVERIFY OP_CHECKSIG\nvar bscript = require('../../script');\nvar types = require('../../types');\nvar typeforce = require('typeforce');\nvar OPS = require('bitcoin-ops');\nfunction check(script) {\n  var buffer = bscript.compile(script);\n  return buffer.length === 25 && buffer[0] === OPS.OP_DUP && buffer[1] === OPS.OP_HASH160 && buffer[2] === 0x14 && buffer[23] === OPS.OP_EQUALVERIFY && buffer[24] === OPS.OP_CHECKSIG;\n}\ncheck.toJSON = function () {\n  return 'pubKeyHash output';\n};\nfunction encode(pubKeyHash) {\n  typeforce(types.Hash160bit, pubKeyHash);\n  return bscript.compile([OPS.OP_DUP, OPS.OP_HASH160, pubKeyHash, OPS.OP_EQUALVERIFY, OPS.OP_CHECKSIG]);\n}\nfunction decode(buffer) {\n  typeforce(check, buffer);\n  return buffer.slice(3, 23);\n}\nmodule.exports = {\n  check: check,\n  decode: decode,\n  encode: encode\n};","map":{"version":3,"names":["bscript","require","types","typeforce","OPS","check","script","buffer","compile","length","OP_DUP","OP_HASH160","OP_EQUALVERIFY","OP_CHECKSIG","toJSON","encode","pubKeyHash","Hash160bit","decode","slice","module","exports"],"sources":["/Users/oddfl3x/Code/varB/NATI<>Verus Bridge Proxy Page/node_modules/@bitgo/utxo-lib/dist/src/templates/pubkeyhash/output.js"],"sourcesContent":["// OP_DUP OP_HASH160 {pubKeyHash} OP_EQUALVERIFY OP_CHECKSIG\nvar bscript = require('../../script');\nvar types = require('../../types');\nvar typeforce = require('typeforce');\nvar OPS = require('bitcoin-ops');\nfunction check(script) {\n    var buffer = bscript.compile(script);\n    return buffer.length === 25 &&\n        buffer[0] === OPS.OP_DUP &&\n        buffer[1] === OPS.OP_HASH160 &&\n        buffer[2] === 0x14 &&\n        buffer[23] === OPS.OP_EQUALVERIFY &&\n        buffer[24] === OPS.OP_CHECKSIG;\n}\ncheck.toJSON = function () { return 'pubKeyHash output'; };\nfunction encode(pubKeyHash) {\n    typeforce(types.Hash160bit, pubKeyHash);\n    return bscript.compile([\n        OPS.OP_DUP,\n        OPS.OP_HASH160,\n        pubKeyHash,\n        OPS.OP_EQUALVERIFY,\n        OPS.OP_CHECKSIG\n    ]);\n}\nfunction decode(buffer) {\n    typeforce(check, buffer);\n    return buffer.slice(3, 23);\n}\nmodule.exports = {\n    check: check,\n    decode: decode,\n    encode: encode\n};\n"],"mappings":"AAAA;AACA,IAAIA,OAAO,GAAGC,OAAO,CAAC,cAAc,CAAC;AACrC,IAAIC,KAAK,GAAGD,OAAO,CAAC,aAAa,CAAC;AAClC,IAAIE,SAAS,GAAGF,OAAO,CAAC,WAAW,CAAC;AACpC,IAAIG,GAAG,GAAGH,OAAO,CAAC,aAAa,CAAC;AAChC,SAASI,KAAKA,CAACC,MAAM,EAAE;EACnB,IAAIC,MAAM,GAAGP,OAAO,CAACQ,OAAO,CAACF,MAAM,CAAC;EACpC,OAAOC,MAAM,CAACE,MAAM,KAAK,EAAE,IACvBF,MAAM,CAAC,CAAC,CAAC,KAAKH,GAAG,CAACM,MAAM,IACxBH,MAAM,CAAC,CAAC,CAAC,KAAKH,GAAG,CAACO,UAAU,IAC5BJ,MAAM,CAAC,CAAC,CAAC,KAAK,IAAI,IAClBA,MAAM,CAAC,EAAE,CAAC,KAAKH,GAAG,CAACQ,cAAc,IACjCL,MAAM,CAAC,EAAE,CAAC,KAAKH,GAAG,CAACS,WAAW;AACtC;AACAR,KAAK,CAACS,MAAM,GAAG,YAAY;EAAE,OAAO,mBAAmB;AAAE,CAAC;AAC1D,SAASC,MAAMA,CAACC,UAAU,EAAE;EACxBb,SAAS,CAACD,KAAK,CAACe,UAAU,EAAED,UAAU,CAAC;EACvC,OAAOhB,OAAO,CAACQ,OAAO,CAAC,CACnBJ,GAAG,CAACM,MAAM,EACVN,GAAG,CAACO,UAAU,EACdK,UAAU,EACVZ,GAAG,CAACQ,cAAc,EAClBR,GAAG,CAACS,WAAW,CAClB,CAAC;AACN;AACA,SAASK,MAAMA,CAACX,MAAM,EAAE;EACpBJ,SAAS,CAACE,KAAK,EAAEE,MAAM,CAAC;EACxB,OAAOA,MAAM,CAACY,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;AAC9B;AACAC,MAAM,CAACC,OAAO,GAAG;EACbhB,KAAK,EAAEA,KAAK;EACZa,MAAM,EAAEA,MAAM;EACdH,MAAM,EAAEA;AACZ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script"}