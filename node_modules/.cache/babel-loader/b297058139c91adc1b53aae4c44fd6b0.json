{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SignedSessionObject = void 0;\nconst __1 = require(\"../../\");\nconst keys_1 = require(\"../../keys\");\nconst Hash160_1 = require(\"../Hash160\");\nconst bufferutils_1 = require(\"../../../utils/bufferutils\");\nconst vdxf_1 = require(\"../../../constants/vdxf\");\nconst address_1 = require(\"../../../utils/address\");\nconst createHash = require(\"create-hash\");\nconst SignedSessionObjectData_1 = require(\"./SignedSessionObjectData\");\nclass SignedSessionObject extends __1.VDXFObject {\n  constructor(request = {\n    system_id: \"\",\n    signing_id: \"\",\n    data: new SignedSessionObjectData_1.SignedSessionObjectData()\n  }) {\n    super(keys_1.SIGNED_SESSION_OBJECT.vdxfid);\n    this.system_id = request.system_id;\n    this.signing_id = request.signing_id;\n    this.signature = request.signature ? new __1.VerusIDSignature(request.signature, keys_1.IDENTITY_AUTH_SIG_VDXF_KEY) : undefined;\n    this.data = new SignedSessionObjectData_1.SignedSessionObjectData(request.data);\n  }\n  getDataHash(signedBlockheight, signatureVersion = 2) {\n    var heightBufferWriter = new bufferutils_1.default.BufferWriter(Buffer.allocUnsafe(4));\n    heightBufferWriter.writeUInt32(signedBlockheight);\n    if (signatureVersion === 1) {\n      return createHash(\"sha256\").update(vdxf_1.VERUS_DATA_SIGNATURE_PREFIX).update((0, address_1.fromBase58Check)(this.system_id).hash).update(heightBufferWriter.buffer).update((0, address_1.fromBase58Check)(this.signing_id).hash).update(this.data.toSha256()).digest();\n    } else {\n      return createHash(\"sha256\").update((0, address_1.fromBase58Check)(this.system_id).hash).update(heightBufferWriter.buffer).update((0, address_1.fromBase58Check)(this.signing_id).hash).update(vdxf_1.VERUS_DATA_SIGNATURE_PREFIX).update(this.data.toSha256()).digest();\n    }\n  }\n  toJson() {\n    return {\n      vdxfkey: this.vdxfkey,\n      system_id: this.system_id,\n      signing_id: this.signing_id,\n      signature: this.signature ? this.signature.toJson() : this.signature,\n      challenge: this.data.toJson()\n    };\n  }\n  _dataByteLength(signer = this.signing_id) {\n    let length = 0;\n    const _signing_id = Hash160_1.Hash160.fromAddress(signer);\n    const _signature = this.signature ? this.signature : new __1.VerusIDSignature({\n      signature: \"\"\n    }, keys_1.IDENTITY_AUTH_SIG_VDXF_KEY);\n    const _system_id = Hash160_1.Hash160.fromAddress(this.system_id);\n    length += _system_id.byteLength();\n    length += _signing_id.byteLength();\n    length += _signature.byteLength();\n    length += this.data.byteLength();\n    return length;\n  }\n  _toDataBuffer(signer = this.signing_id) {\n    const writer = new bufferutils_1.default.BufferWriter(Buffer.alloc(this.dataByteLength()));\n    const _signing_id = Hash160_1.Hash160.fromAddress(signer);\n    const _signature = this.signature ? this.signature : new __1.VerusIDSignature({\n      signature: \"\"\n    }, keys_1.IDENTITY_AUTH_SIG_VDXF_KEY);\n    const _system_id = Hash160_1.Hash160.fromAddress(this.system_id);\n    writer.writeSlice(_system_id.toBuffer());\n    writer.writeSlice(_signing_id.toBuffer());\n    writer.writeSlice(_signature.toBuffer());\n    writer.writeSlice(this.data.toBuffer());\n    return writer.buffer;\n  }\n  dataByteLength() {\n    return this._dataByteLength();\n  }\n  toDataBuffer() {\n    return this._toDataBuffer();\n  }\n  _fromDataBuffer(buffer, offset) {\n    const reader = new bufferutils_1.default.BufferReader(buffer, offset);\n    const reqLength = reader.readCompactSize();\n    if (reqLength == 0) {\n      throw new Error(\"Cannot create signed session object from empty buffer\");\n    } else {\n      this.system_id = (0, address_1.toBase58Check)(reader.readSlice(vdxf_1.HASH160_BYTE_LENGTH), vdxf_1.I_ADDR_VERSION);\n      this.signing_id = (0, address_1.toBase58Check)(reader.readSlice(vdxf_1.HASH160_BYTE_LENGTH), vdxf_1.I_ADDR_VERSION);\n      const _sig = new __1.VerusIDSignature();\n      reader.offset = _sig.fromBuffer(reader.buffer, reader.offset);\n      this.signature = _sig;\n      const _data = new SignedSessionObjectData_1.SignedSessionObjectData();\n      reader.offset = _data.fromBuffer(reader.buffer, reader.offset);\n      this.data = _data;\n    }\n    return reader.offset;\n  }\n  fromDataBuffer(buffer, offset) {\n    return this._fromDataBuffer(buffer, offset);\n  }\n  getHeaders() {\n    return {\n      ['VDXF-Key']: this.vdxfkey,\n      ['VDXF-Version']: this.version.toString(),\n      ['VerusID-Session-ID']: this.data.session_id,\n      ['VerusID-Timestamp-Micro']: this.data.timestamp_micro.toString(),\n      ['VerusID-Signature']: this.signature.signature // Signature of this SSO serialized\n    };\n  }\n  static fromHttpRequest(headers, body, system_id, signing_id) {\n    return new SignedSessionObject({\n      system_id,\n      signing_id,\n      signature: new __1.VerusIDSignature({\n        signature: headers['VerusID-Signature']\n      }, keys_1.IDENTITY_AUTH_SIG_VDXF_KEY),\n      data: new SignedSessionObjectData_1.SignedSessionObjectData({\n        session_id: headers['VerusID-Session-ID'],\n        timestamp_micro: Number(headers['VerusID-Timestamp-Micro']),\n        body\n      })\n    });\n  }\n}\nexports.SignedSessionObject = SignedSessionObject;","map":{"version":3,"names":["Object","defineProperty","exports","value","SignedSessionObject","__1","require","keys_1","Hash160_1","bufferutils_1","vdxf_1","address_1","createHash","SignedSessionObjectData_1","VDXFObject","constructor","request","system_id","signing_id","data","SignedSessionObjectData","SIGNED_SESSION_OBJECT","vdxfid","signature","VerusIDSignature","IDENTITY_AUTH_SIG_VDXF_KEY","undefined","getDataHash","signedBlockheight","signatureVersion","heightBufferWriter","default","BufferWriter","Buffer","allocUnsafe","writeUInt32","update","VERUS_DATA_SIGNATURE_PREFIX","fromBase58Check","hash","buffer","toSha256","digest","toJson","vdxfkey","challenge","_dataByteLength","signer","length","_signing_id","Hash160","fromAddress","_signature","_system_id","byteLength","_toDataBuffer","writer","alloc","dataByteLength","writeSlice","toBuffer","toDataBuffer","_fromDataBuffer","offset","reader","BufferReader","reqLength","readCompactSize","Error","toBase58Check","readSlice","HASH160_BYTE_LENGTH","I_ADDR_VERSION","_sig","fromBuffer","_data","fromDataBuffer","getHeaders","version","toString","session_id","timestamp_micro","fromHttpRequest","headers","body","Number"],"sources":["/Users/oddfl3x/Code/varB/NATIBridgeWebsite-main/node_modules/verus-typescript-primitives/dist/vdxf/classes/Web/SignedSessionObject.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SignedSessionObject = void 0;\nconst __1 = require(\"../../\");\nconst keys_1 = require(\"../../keys\");\nconst Hash160_1 = require(\"../Hash160\");\nconst bufferutils_1 = require(\"../../../utils/bufferutils\");\nconst vdxf_1 = require(\"../../../constants/vdxf\");\nconst address_1 = require(\"../../../utils/address\");\nconst createHash = require(\"create-hash\");\nconst SignedSessionObjectData_1 = require(\"./SignedSessionObjectData\");\nclass SignedSessionObject extends __1.VDXFObject {\n    constructor(request = {\n        system_id: \"\",\n        signing_id: \"\",\n        data: new SignedSessionObjectData_1.SignedSessionObjectData(),\n    }) {\n        super(keys_1.SIGNED_SESSION_OBJECT.vdxfid);\n        this.system_id = request.system_id;\n        this.signing_id = request.signing_id;\n        this.signature = request.signature\n            ? new __1.VerusIDSignature(request.signature, keys_1.IDENTITY_AUTH_SIG_VDXF_KEY)\n            : undefined;\n        this.data = new SignedSessionObjectData_1.SignedSessionObjectData(request.data);\n    }\n    getDataHash(signedBlockheight, signatureVersion = 2) {\n        var heightBufferWriter = new bufferutils_1.default.BufferWriter(Buffer.allocUnsafe(4));\n        heightBufferWriter.writeUInt32(signedBlockheight);\n        if (signatureVersion === 1) {\n            return createHash(\"sha256\")\n                .update(vdxf_1.VERUS_DATA_SIGNATURE_PREFIX)\n                .update((0, address_1.fromBase58Check)(this.system_id).hash)\n                .update(heightBufferWriter.buffer)\n                .update((0, address_1.fromBase58Check)(this.signing_id).hash)\n                .update(this.data.toSha256())\n                .digest();\n        }\n        else {\n            return createHash(\"sha256\")\n                .update((0, address_1.fromBase58Check)(this.system_id).hash)\n                .update(heightBufferWriter.buffer)\n                .update((0, address_1.fromBase58Check)(this.signing_id).hash)\n                .update(vdxf_1.VERUS_DATA_SIGNATURE_PREFIX)\n                .update(this.data.toSha256())\n                .digest();\n        }\n    }\n    toJson() {\n        return {\n            vdxfkey: this.vdxfkey,\n            system_id: this.system_id,\n            signing_id: this.signing_id,\n            signature: this.signature ? this.signature.toJson() : this.signature,\n            challenge: this.data.toJson(),\n        };\n    }\n    _dataByteLength(signer = this.signing_id) {\n        let length = 0;\n        const _signing_id = Hash160_1.Hash160.fromAddress(signer);\n        const _signature = this.signature\n            ? this.signature\n            : new __1.VerusIDSignature({ signature: \"\" }, keys_1.IDENTITY_AUTH_SIG_VDXF_KEY);\n        const _system_id = Hash160_1.Hash160.fromAddress(this.system_id);\n        length += _system_id.byteLength();\n        length += _signing_id.byteLength();\n        length += _signature.byteLength();\n        length += this.data.byteLength();\n        return length;\n    }\n    _toDataBuffer(signer = this.signing_id) {\n        const writer = new bufferutils_1.default.BufferWriter(Buffer.alloc(this.dataByteLength()));\n        const _signing_id = Hash160_1.Hash160.fromAddress(signer);\n        const _signature = this.signature\n            ? this.signature\n            : new __1.VerusIDSignature({ signature: \"\" }, keys_1.IDENTITY_AUTH_SIG_VDXF_KEY);\n        const _system_id = Hash160_1.Hash160.fromAddress(this.system_id);\n        writer.writeSlice(_system_id.toBuffer());\n        writer.writeSlice(_signing_id.toBuffer());\n        writer.writeSlice(_signature.toBuffer());\n        writer.writeSlice(this.data.toBuffer());\n        return writer.buffer;\n    }\n    dataByteLength() {\n        return this._dataByteLength();\n    }\n    toDataBuffer() {\n        return this._toDataBuffer();\n    }\n    _fromDataBuffer(buffer, offset) {\n        const reader = new bufferutils_1.default.BufferReader(buffer, offset);\n        const reqLength = reader.readCompactSize();\n        if (reqLength == 0) {\n            throw new Error(\"Cannot create signed session object from empty buffer\");\n        }\n        else {\n            this.system_id = (0, address_1.toBase58Check)(reader.readSlice(vdxf_1.HASH160_BYTE_LENGTH), vdxf_1.I_ADDR_VERSION);\n            this.signing_id = (0, address_1.toBase58Check)(reader.readSlice(vdxf_1.HASH160_BYTE_LENGTH), vdxf_1.I_ADDR_VERSION);\n            const _sig = new __1.VerusIDSignature();\n            reader.offset = _sig.fromBuffer(reader.buffer, reader.offset);\n            this.signature = _sig;\n            const _data = new SignedSessionObjectData_1.SignedSessionObjectData();\n            reader.offset = _data.fromBuffer(reader.buffer, reader.offset);\n            this.data = _data;\n        }\n        return reader.offset;\n    }\n    fromDataBuffer(buffer, offset) {\n        return this._fromDataBuffer(buffer, offset);\n    }\n    getHeaders() {\n        return {\n            ['VDXF-Key']: this.vdxfkey,\n            ['VDXF-Version']: this.version.toString(),\n            ['VerusID-Session-ID']: this.data.session_id,\n            ['VerusID-Timestamp-Micro']: this.data.timestamp_micro.toString(),\n            ['VerusID-Signature']: this.signature.signature // Signature of this SSO serialized\n        };\n    }\n    static fromHttpRequest(headers, body, system_id, signing_id) {\n        return new SignedSessionObject({\n            system_id,\n            signing_id,\n            signature: new __1.VerusIDSignature({ signature: headers['VerusID-Signature'] }, keys_1.IDENTITY_AUTH_SIG_VDXF_KEY),\n            data: new SignedSessionObjectData_1.SignedSessionObjectData({\n                session_id: headers['VerusID-Session-ID'],\n                timestamp_micro: Number(headers['VerusID-Timestamp-Micro']),\n                body\n            })\n        });\n    }\n}\nexports.SignedSessionObject = SignedSessionObject;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}