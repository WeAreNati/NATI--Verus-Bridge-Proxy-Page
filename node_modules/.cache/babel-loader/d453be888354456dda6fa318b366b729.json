{"ast":null,"code":"import React,{useState}from'react';import{LoadingButton}from'@mui/lab';import{Alert,Typography}from'@mui/material';import Grid from'@mui/material/Grid';import{Box}from'@mui/system';import{useWeb3React}from'@web3-react/core';import{useForm}from'react-hook-form';import web3 from'web3';import ERC20_ABI from'abis/ERC20Abi.json';import MARRR_ABI from'abis/marrrAbi.json';import{GLOBAL_ADDRESS,ETHEREUM_BLOCKCHAIN_NAME}from'constants/contractAddress';import useContract from'hooks/useContract';import{getContract}from'utils/contract';import{validateAddress}from'utils/rules';import AmountField from'./AmountField';import DestinationField from'./DestinationField';import{useToast}from'../Toast/ToastProvider';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const maxGas2=150000;export default function TransactionForm(){const[isTxPending,setIsTxPending]=useState(false);const[alert,setAlert]=useState(null);const{addToast}=useToast();const{account,library}=useWeb3React();const mARRRContract=useContract(GLOBAL_ADDRESS.MARRR,MARRR_ABI);const{handleSubmit,control,watch}=useForm({mode:'all'});const destination=watch('Swap to');const authoriseOneTokenAmount=async(destination,amount)=>{setAlert(\"Metamask will now pop up to allow the spend \".concat(amount,\"(\").concat(destination===\"mARRR\"?\"vARRR\":\"mARRR\",\") from your \").concat(ETHEREUM_BLOCKCHAIN_NAME,\" balance.\"));const tokenERC=GLOBAL_ADDRESS.VARRR;const tokenInstContract=getContract(tokenERC,ERC20_ABI,library,account);const decimals=web3.utils.toBN(await tokenInstContract.decimals());const ten=new web3.utils.BN(10);const base=ten.pow(new web3.utils.BN(decimals));const comps=amount.split('.');if(comps.length>2){throw new Error('Too many decimal points');}let whole=comps[0];let fraction=comps[1];if(!whole){whole='0';}if(!fraction){fraction='0';}if(fraction.length>decimals){throw new Error('Too many decimal places');}while(fraction.length<decimals){fraction+='0';}whole=new web3.utils.BN(whole);fraction=new web3.utils.BN(fraction);const bigAmount=whole.mul(base).add(fraction);const approve=await tokenInstContract.approve(GLOBAL_ADDRESS.MARRR,bigAmount.toString(),{from:account,gasLimit:maxGas2});setAlert(\"Authorising ERC20 Token, please wait...\");const reply=await approve.wait();if(reply.status===0){throw new Error(\"Authorising ERC20 Token Spend Failed, please check your balance.\");}setAlert(\"\\n      Your \".concat(ETHEREUM_BLOCKCHAIN_NAME,\" account has authorised the bridge to spend \").concat(destination===\"mARRR\"?\"vARRR\":\"mARRR\",\" token, the amount: \").concat(amount,\". \\n      \\n Next, after this window please check the amount in Metamask is what you wish to send.\"));};const onSubmit=async values=>{const{amount}=values;setAlert(null);setIsTxPending(true);const validAccount=await validateAddress(account);if(validAccount!==true){addToast({type:\"error\",description:'Sending Account invalid'});setAlert(null);setIsTxPending(false);return;}try{let txResult;if(destination===\"mARRR\"){await authoriseOneTokenAmount(destination,amount);txResult=await mARRRContract.swapTomARRR(web3.utils.toWei(amount,'ether'),{from:account,gasLimit:maxGas2});}else{txResult=await mARRRContract.swapTovARRR(web3.utils.toWei(amount,'ether'),{from:account,gasLimit:maxGas2});}await txResult.wait();addToast({type:\"success\",description:'Transaction Success!'});setAlert(null);setIsTxPending(false);}catch(error){if(error.message){addToast({type:\"error\",description:error.message});}else{addToast({type:\"error\",description:'Transaction Failed!'});}setAlert(null);setIsTxPending(false);}};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit(onSubmit),children:[alert&&/*#__PURE__*/_jsx(Alert,{severity:\"warning\",sx:{mb:3},children:/*#__PURE__*/_jsx(Typography,{children:alert})}),!account&&/*#__PURE__*/_jsx(Alert,{severity:\"info\",sx:{mb:3},children:/*#__PURE__*/_jsx(Typography,{children:/*#__PURE__*/_jsx(\"b\",{children:\"Wallet not connected\"})})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(DestinationField,{control:control})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(AmountField,{control:control,destination:destination})}),/*#__PURE__*/_jsx(Box,{mt:\"30px\",textAlign:\"center\",width:\"100%\",children:/*#__PURE__*/_jsx(LoadingButton,{loading:isTxPending,disabled:isTxPending,type:\"submit\",color:\"primary\",variant:\"contained\",children:\"Send\"})})]})});}","map":{"version":3,"names":["React","useState","LoadingButton","Alert","Typography","Grid","Box","useWeb3React","useForm","web3","ERC20_ABI","MARRR_ABI","GLOBAL_ADDRESS","ETHEREUM_BLOCKCHAIN_NAME","useContract","getContract","validateAddress","AmountField","DestinationField","useToast","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","maxGas2","TransactionForm","isTxPending","setIsTxPending","alert","setAlert","addToast","account","library","mARRRContract","MARRR","handleSubmit","control","watch","mode","destination","authoriseOneTokenAmount","amount","concat","tokenERC","VARRR","tokenInstContract","decimals","utils","toBN","ten","BN","base","pow","comps","split","length","Error","whole","fraction","bigAmount","mul","add","approve","toString","from","gasLimit","reply","wait","status","onSubmit","values","validAccount","type","description","txResult","swapTomARRR","toWei","swapTovARRR","error","message","children","severity","sx","mb","item","xs","mt","textAlign","width","loading","disabled","color","variant"],"sources":["/Users/oddfl3x/Code/varB/vARRRBridgeWebsite-main/src/components/ARRRForm/TransactionForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nimport { LoadingButton } from '@mui/lab';\nimport { Alert, Typography } from '@mui/material';\nimport Grid from '@mui/material/Grid';\nimport { Box } from '@mui/system';\nimport { useWeb3React } from '@web3-react/core';\nimport { useForm } from 'react-hook-form';\nimport web3 from 'web3';\n\nimport ERC20_ABI from 'abis/ERC20Abi.json';\nimport MARRR_ABI from 'abis/marrrAbi.json';\nimport {\n  GLOBAL_ADDRESS,\n  ETHEREUM_BLOCKCHAIN_NAME\n} from 'constants/contractAddress';\nimport useContract from 'hooks/useContract';\nimport { getContract } from 'utils/contract';\nimport { validateAddress } from 'utils/rules'\n\nimport AmountField from './AmountField';\nimport DestinationField from './DestinationField';\nimport { useToast } from '../Toast/ToastProvider';\n\nconst maxGas2 = 150000;\n\nexport default function TransactionForm() {\n\n  const [isTxPending, setIsTxPending] = useState(false);\n  const [alert, setAlert] = useState(null);\n  const { addToast } = useToast();\n  const { account, library } = useWeb3React();\n  const mARRRContract = useContract(GLOBAL_ADDRESS.MARRR, MARRR_ABI);\n\n  const { handleSubmit, control, watch } = useForm({\n    mode: 'all'\n  });\n\n  const destination = watch('Swap to');\n\n  const authoriseOneTokenAmount = async (destination, amount) => {\n    setAlert(`Metamask will now pop up to allow the spend ${amount}(${destination === \"mARRR\" ? \"vARRR\" : \"mARRR\"}) from your ${ETHEREUM_BLOCKCHAIN_NAME} balance.`);\n\n    const tokenERC = GLOBAL_ADDRESS.VARRR;\n    const tokenInstContract = getContract(tokenERC, ERC20_ABI, library, account)\n    const decimals = web3.utils.toBN(await tokenInstContract.decimals());\n\n    const ten = new web3.utils.BN(10);\n    const base = ten.pow(new web3.utils.BN(decimals));\n    const comps = amount.split('.');\n    if (comps.length > 2) { throw new Error('Too many decimal points'); }\n\n    let whole = comps[0];\n    let fraction = comps[1];\n\n    if (!whole) { whole = '0'; }\n    if (!fraction) { fraction = '0'; }\n    if (fraction.length > decimals) {\n      throw new Error('Too many decimal places');\n    }\n\n    while (fraction.length < decimals) {\n      fraction += '0';\n    }\n\n    whole = new web3.utils.BN(whole);\n    fraction = new web3.utils.BN(fraction);\n    const bigAmount = (whole.mul(base)).add(fraction);\n\n    const approve = await tokenInstContract.approve(GLOBAL_ADDRESS.MARRR, bigAmount.toString(), { from: account, gasLimit: maxGas2 })\n\n    setAlert(`Authorising ERC20 Token, please wait...`);\n    const reply = await approve.wait();\n\n    if (reply.status === 0) {\n      throw new Error(\"Authorising ERC20 Token Spend Failed, please check your balance.\")\n    }\n    setAlert(`\n      Your ${ETHEREUM_BLOCKCHAIN_NAME} account has authorised the bridge to spend ${destination === \"mARRR\" ? \"vARRR\" : \"mARRR\"} token, the amount: ${amount}. \n      \\n Next, after this window please check the amount in Metamask is what you wish to send.`\n    );\n  }\n\n  const onSubmit = async (values) => {\n    const { amount } = values;\n    setAlert(null);\n    setIsTxPending(true);\n    const validAccount = await validateAddress(account);\n    if (validAccount !== true) {\n      addToast({ type: \"error\", description: 'Sending Account invalid' })\n      setAlert(null);\n      setIsTxPending(false);\n      return;\n    }\n\n    try {\n      let txResult;\n      if (destination === \"mARRR\") {\n        await authoriseOneTokenAmount(destination, amount);\n        txResult = await mARRRContract.swapTomARRR(\n          web3.utils.toWei(amount, 'ether'),\n          { from: account, gasLimit: maxGas2 }\n        );\n      }\n      else {\n        txResult = await mARRRContract.swapTovARRR(\n          web3.utils.toWei(amount, 'ether'),\n          { from: account, gasLimit: maxGas2 }\n        );\n      }\n      await txResult.wait();\n\n      addToast({ type: \"success\", description: 'Transaction Success!' });\n      setAlert(null);\n      setIsTxPending(false);\n\n    } catch (error) {\n      if (error.message) {\n        addToast({ type: \"error\", description: error.message })\n      } else {\n        addToast({ type: \"error\", description: 'Transaction Failed!' })\n      }\n      setAlert(null);\n      setIsTxPending(false);\n    }\n  }\n\n  return (\n    <>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        {alert &&\n          <Alert severity=\"warning\" sx={{ mb: 3 }}>\n            <Typography>\n              {alert}\n            </Typography>\n          </Alert>\n        }\n        {!account && <Alert severity=\"info\" sx={{ mb: 3 }}>\n          <Typography>\n            <b>Wallet not connected</b>\n          </Typography>\n        </Alert>\n        }\n        <Grid item xs={12}>\n          <DestinationField\n            control={control}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <AmountField\n            control={control}\n            destination={destination}\n\n          />\n        </Grid>\n        <Box mt=\"30px\" textAlign=\"center\" width=\"100%\">\n          <LoadingButton loading={isTxPending} disabled={isTxPending} type=\"submit\" color=\"primary\" variant=\"contained\">Send</LoadingButton>\n        </Box>\n\n      </form >\n    </>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}