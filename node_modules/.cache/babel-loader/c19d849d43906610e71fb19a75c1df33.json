{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ProvisioningChallenge = void 0;\nconst bufferutils_1 = require(\"../../../utils/bufferutils\");\nconst varuint_1 = require(\"../../../utils/varuint\");\nconst keys_1 = require(\"../../keys\");\nconst Challenge_1 = require(\"../Challenge\");\nconst Hash160_1 = require(\"../Hash160\");\nclass ProvisioningChallenge extends Challenge_1.Challenge {\n  constructor(challenge = {\n    challenge_id: \"\",\n    created_at: 0\n  }) {\n    super({\n      challenge_id: challenge.challenge_id,\n      created_at: challenge.created_at,\n      salt: challenge.salt,\n      context: challenge.context\n    }, keys_1.LOGIN_CONSENT_PROVISIONING_CHALLENGE_VDXF_KEY.vdxfid);\n    this.name = challenge.name;\n    this.system_id = challenge.system_id;\n    this.parent = challenge.parent;\n  }\n  dataByteLength() {\n    const nameBuf = Buffer.from(this.name, 'utf-8');\n    let length = 0;\n    length += nameBuf.length;\n    length += varuint_1.default.encodingLength(nameBuf.length);\n    length += this.system_id ? Hash160_1.Hash160.fromAddress(this.system_id, true).byteLength() : Hash160_1.Hash160.getEmpty().byteLength();\n    length += this.parent ? Hash160_1.Hash160.fromAddress(this.parent, true).byteLength() : Hash160_1.Hash160.getEmpty().byteLength();\n    return super.dataByteLength() + length;\n  }\n  toDataBuffer() {\n    const superBuf = super.toDataBuffer();\n    const writer = new bufferutils_1.default.BufferWriter(superBuf, super.dataByteLength());\n    writer.writeVarSlice(Buffer.from(this.name, 'utf-8'));\n    writer.writeSlice(this.system_id ? Hash160_1.Hash160.fromAddress(this.system_id, true).toBuffer() : Hash160_1.Hash160.getEmpty().toBuffer());\n    writer.writeSlice(this.parent ? Hash160_1.Hash160.fromAddress(this.parent, true).toBuffer() : Hash160_1.Hash160.getEmpty().toBuffer());\n    return writer.buffer;\n  }\n  fromDataBuffer(buffer, offset) {\n    const challenge = new Challenge_1.Challenge(undefined, keys_1.LOGIN_CONSENT_PROVISIONING_CHALLENGE_VDXF_KEY.vdxfid);\n    let _offset = challenge.fromDataBuffer(buffer, offset);\n    const reader = new bufferutils_1.default.BufferReader(buffer, _offset);\n    this.name = reader.readVarSlice().toString('utf-8');\n    const _system_id = new Hash160_1.Hash160();\n    reader.offset = _system_id.fromBuffer(reader.buffer, true, reader.offset);\n    this.system_id = _system_id.toAddress();\n    const _parent = new Hash160_1.Hash160();\n    reader.offset = _parent.fromBuffer(reader.buffer, true, reader.offset);\n    this.parent = _parent.toAddress();\n    this.challenge_id = challenge.challenge_id;\n    this.created_at = challenge.created_at;\n    this.salt = challenge.salt;\n    this.context = challenge.context;\n    return reader.offset;\n  }\n  // toJson\n  toJson() {\n    return {\n      vdxfkey: this.vdxfkey,\n      challenge_id: this.challenge_id,\n      created_at: this.created_at,\n      salt: this.salt,\n      name: this.name,\n      system_id: this.system_id,\n      parent: this.parent,\n      context: this.context,\n      requested_access: undefined,\n      requested_access_audience: undefined,\n      subject: undefined,\n      provisioning_info: undefined,\n      alt_auth_factors: undefined,\n      session_id: undefined,\n      attestations: undefined,\n      skip: undefined,\n      redirect_uris: undefined\n    };\n  }\n}\nexports.ProvisioningChallenge = ProvisioningChallenge;","map":{"version":3,"names":["Object","defineProperty","exports","value","ProvisioningChallenge","bufferutils_1","require","varuint_1","keys_1","Challenge_1","Hash160_1","Challenge","constructor","challenge","challenge_id","created_at","salt","context","LOGIN_CONSENT_PROVISIONING_CHALLENGE_VDXF_KEY","vdxfid","name","system_id","parent","dataByteLength","nameBuf","Buffer","from","length","default","encodingLength","Hash160","fromAddress","byteLength","getEmpty","toDataBuffer","superBuf","writer","BufferWriter","writeVarSlice","writeSlice","toBuffer","buffer","fromDataBuffer","offset","undefined","_offset","reader","BufferReader","readVarSlice","toString","_system_id","fromBuffer","toAddress","_parent","toJson","vdxfkey","requested_access","requested_access_audience","subject","provisioning_info","alt_auth_factors","session_id","attestations","skip","redirect_uris"],"sources":["/Users/oddfl3x/Code/varB/vARRRBridgeWebsite-main/node_modules/verus-typescript-primitives/dist/vdxf/classes/provisioning/ProvisioningChallenge.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProvisioningChallenge = void 0;\nconst bufferutils_1 = require(\"../../../utils/bufferutils\");\nconst varuint_1 = require(\"../../../utils/varuint\");\nconst keys_1 = require(\"../../keys\");\nconst Challenge_1 = require(\"../Challenge\");\nconst Hash160_1 = require(\"../Hash160\");\nclass ProvisioningChallenge extends Challenge_1.Challenge {\n    constructor(challenge = { challenge_id: \"\", created_at: 0 }) {\n        super({\n            challenge_id: challenge.challenge_id,\n            created_at: challenge.created_at,\n            salt: challenge.salt,\n            context: challenge.context,\n        }, keys_1.LOGIN_CONSENT_PROVISIONING_CHALLENGE_VDXF_KEY.vdxfid);\n        this.name = challenge.name;\n        this.system_id = challenge.system_id;\n        this.parent = challenge.parent;\n    }\n    dataByteLength() {\n        const nameBuf = Buffer.from(this.name, 'utf-8');\n        let length = 0;\n        length += nameBuf.length;\n        length += varuint_1.default.encodingLength(nameBuf.length);\n        length += this.system_id ? Hash160_1.Hash160.fromAddress(this.system_id, true).byteLength()\n            : Hash160_1.Hash160.getEmpty().byteLength();\n        length += this.parent ? Hash160_1.Hash160.fromAddress(this.parent, true).byteLength()\n            : Hash160_1.Hash160.getEmpty().byteLength();\n        return super.dataByteLength() + length;\n    }\n    toDataBuffer() {\n        const superBuf = super.toDataBuffer();\n        const writer = new bufferutils_1.default.BufferWriter(superBuf, super.dataByteLength());\n        writer.writeVarSlice(Buffer.from(this.name, 'utf-8'));\n        writer.writeSlice(this.system_id\n            ? Hash160_1.Hash160.fromAddress(this.system_id, true).toBuffer()\n            : Hash160_1.Hash160.getEmpty().toBuffer());\n        writer.writeSlice(this.parent\n            ? Hash160_1.Hash160.fromAddress(this.parent, true).toBuffer()\n            : Hash160_1.Hash160.getEmpty().toBuffer());\n        return writer.buffer;\n    }\n    fromDataBuffer(buffer, offset) {\n        const challenge = new Challenge_1.Challenge(undefined, keys_1.LOGIN_CONSENT_PROVISIONING_CHALLENGE_VDXF_KEY.vdxfid);\n        let _offset = challenge.fromDataBuffer(buffer, offset);\n        const reader = new bufferutils_1.default.BufferReader(buffer, _offset);\n        this.name = reader.readVarSlice().toString('utf-8');\n        const _system_id = new Hash160_1.Hash160();\n        reader.offset = _system_id.fromBuffer(reader.buffer, true, reader.offset);\n        this.system_id = _system_id.toAddress();\n        const _parent = new Hash160_1.Hash160();\n        reader.offset = _parent.fromBuffer(reader.buffer, true, reader.offset);\n        this.parent = _parent.toAddress();\n        this.challenge_id = challenge.challenge_id;\n        this.created_at = challenge.created_at;\n        this.salt = challenge.salt;\n        this.context = challenge.context;\n        return reader.offset;\n    }\n    // toJson\n    toJson() {\n        return {\n            vdxfkey: this.vdxfkey,\n            challenge_id: this.challenge_id,\n            created_at: this.created_at,\n            salt: this.salt,\n            name: this.name,\n            system_id: this.system_id,\n            parent: this.parent,\n            context: this.context,\n            requested_access: undefined,\n            requested_access_audience: undefined,\n            subject: undefined,\n            provisioning_info: undefined,\n            alt_auth_factors: undefined,\n            session_id: undefined,\n            attestations: undefined,\n            skip: undefined,\n            redirect_uris: undefined\n        };\n    }\n}\nexports.ProvisioningChallenge = ProvisioningChallenge;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}