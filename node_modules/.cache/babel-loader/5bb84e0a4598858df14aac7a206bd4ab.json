{"ast":null,"code":"// OP_RETURN {aa21a9ed} {commitment}\nvar Buffer = require('safe-buffer').Buffer;\nvar bscript = require('../../script');\nvar types = require('../../types');\nvar typeforce = require('typeforce');\nvar OPS = require('bitcoin-ops');\nvar HEADER = Buffer.from('aa21a9ed', 'hex');\nfunction check(script) {\n  var buffer = bscript.compile(script);\n  return buffer.length > 37 && buffer[0] === OPS.OP_RETURN && buffer[1] === 0x24 && buffer.slice(2, 6).equals(HEADER);\n}\ncheck.toJSON = function () {\n  return 'Witness commitment output';\n};\nfunction encode(commitment) {\n  typeforce(types.Hash256bit, commitment);\n  var buffer = Buffer.allocUnsafe(36);\n  HEADER.copy(buffer, 0);\n  commitment.copy(buffer, 4);\n  return bscript.compile([OPS.OP_RETURN, buffer]);\n}\nfunction decode(buffer) {\n  typeforce(check, buffer);\n  return bscript.decompile(buffer)[1].slice(4, 36);\n}\nmodule.exports = {\n  check: check,\n  decode: decode,\n  encode: encode\n};","map":{"version":3,"names":["Buffer","require","bscript","types","typeforce","OPS","HEADER","from","check","script","buffer","compile","length","OP_RETURN","slice","equals","toJSON","encode","commitment","Hash256bit","allocUnsafe","copy","decode","decompile","module","exports"],"sources":["/Users/oddfl3x/Code/varB/NATI<>Verus Bridge Proxy Page/node_modules/@bitgo/utxo-lib/dist/src/templates/witnesscommitment/output.js"],"sourcesContent":["// OP_RETURN {aa21a9ed} {commitment}\nvar Buffer = require('safe-buffer').Buffer;\nvar bscript = require('../../script');\nvar types = require('../../types');\nvar typeforce = require('typeforce');\nvar OPS = require('bitcoin-ops');\nvar HEADER = Buffer.from('aa21a9ed', 'hex');\nfunction check(script) {\n    var buffer = bscript.compile(script);\n    return buffer.length > 37 &&\n        buffer[0] === OPS.OP_RETURN &&\n        buffer[1] === 0x24 &&\n        buffer.slice(2, 6).equals(HEADER);\n}\ncheck.toJSON = function () { return 'Witness commitment output'; };\nfunction encode(commitment) {\n    typeforce(types.Hash256bit, commitment);\n    var buffer = Buffer.allocUnsafe(36);\n    HEADER.copy(buffer, 0);\n    commitment.copy(buffer, 4);\n    return bscript.compile([OPS.OP_RETURN, buffer]);\n}\nfunction decode(buffer) {\n    typeforce(check, buffer);\n    return bscript.decompile(buffer)[1].slice(4, 36);\n}\nmodule.exports = {\n    check: check,\n    decode: decode,\n    encode: encode\n};\n"],"mappings":"AAAA;AACA,IAAIA,MAAM,GAAGC,OAAO,CAAC,aAAa,CAAC,CAACD,MAAM;AAC1C,IAAIE,OAAO,GAAGD,OAAO,CAAC,cAAc,CAAC;AACrC,IAAIE,KAAK,GAAGF,OAAO,CAAC,aAAa,CAAC;AAClC,IAAIG,SAAS,GAAGH,OAAO,CAAC,WAAW,CAAC;AACpC,IAAII,GAAG,GAAGJ,OAAO,CAAC,aAAa,CAAC;AAChC,IAAIK,MAAM,GAAGN,MAAM,CAACO,IAAI,CAAC,UAAU,EAAE,KAAK,CAAC;AAC3C,SAASC,KAAKA,CAACC,MAAM,EAAE;EACnB,IAAIC,MAAM,GAAGR,OAAO,CAACS,OAAO,CAACF,MAAM,CAAC;EACpC,OAAOC,MAAM,CAACE,MAAM,GAAG,EAAE,IACrBF,MAAM,CAAC,CAAC,CAAC,KAAKL,GAAG,CAACQ,SAAS,IAC3BH,MAAM,CAAC,CAAC,CAAC,KAAK,IAAI,IAClBA,MAAM,CAACI,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACC,MAAM,CAACT,MAAM,CAAC;AACzC;AACAE,KAAK,CAACQ,MAAM,GAAG,YAAY;EAAE,OAAO,2BAA2B;AAAE,CAAC;AAClE,SAASC,MAAMA,CAACC,UAAU,EAAE;EACxBd,SAAS,CAACD,KAAK,CAACgB,UAAU,EAAED,UAAU,CAAC;EACvC,IAAIR,MAAM,GAAGV,MAAM,CAACoB,WAAW,CAAC,EAAE,CAAC;EACnCd,MAAM,CAACe,IAAI,CAACX,MAAM,EAAE,CAAC,CAAC;EACtBQ,UAAU,CAACG,IAAI,CAACX,MAAM,EAAE,CAAC,CAAC;EAC1B,OAAOR,OAAO,CAACS,OAAO,CAAC,CAACN,GAAG,CAACQ,SAAS,EAAEH,MAAM,CAAC,CAAC;AACnD;AACA,SAASY,MAAMA,CAACZ,MAAM,EAAE;EACpBN,SAAS,CAACI,KAAK,EAAEE,MAAM,CAAC;EACxB,OAAOR,OAAO,CAACqB,SAAS,CAACb,MAAM,CAAC,CAAC,CAAC,CAAC,CAACI,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;AACpD;AACAU,MAAM,CAACC,OAAO,GAAG;EACbjB,KAAK,EAAEA,KAAK;EACZc,MAAM,EAAEA,MAAM;EACdL,MAAM,EAAEA;AACZ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script"}