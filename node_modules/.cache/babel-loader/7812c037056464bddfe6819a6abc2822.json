{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ProvisioningRequest = void 0;\nconst createHash = require(\"create-hash\");\nconst __1 = require(\"../../\");\nconst vdxf_1 = require(\"../../../constants/vdxf\");\nconst Request_1 = require(\"../Request\");\nconst ProvisioningChallenge_1 = require(\"./ProvisioningChallenge\");\nclass ProvisioningRequest extends Request_1.Request {\n  constructor() {\n    let request = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      signing_address: \"\",\n      challenge: new ProvisioningChallenge_1.ProvisioningChallenge()\n    };\n    super({\n      system_id: null,\n      signing_id: null,\n      challenge: request.challenge,\n      signature: request.signature\n    }, __1.LOGIN_CONSENT_PROVISIONING_REQUEST_VDXF_KEY.vdxfid);\n    this.challenge = new ProvisioningChallenge_1.ProvisioningChallenge(request.challenge);\n    this.signing_address = request.signing_address;\n  }\n  toJson() {\n    return {\n      vdxfkey: this.vdxfkey,\n      system_id: null,\n      signing_address: this.signing_address,\n      signing_id: null,\n      signature: this.signature ? this.signature.toJson() : this.signature,\n      challenge: this.challenge.toJson()\n    };\n  }\n  getChallengeHash() {\n    return createHash(\"sha256\").update(vdxf_1.VERUS_DATA_SIGNATURE_PREFIX).update(this.challenge.toSha256()).digest();\n  }\n  dataByteLength() {\n    const length = this._dataByteLength(this.signing_address);\n    return length;\n  }\n  toDataBuffer() {\n    const buffer = this._toDataBuffer(this.signing_address);\n    return buffer;\n  }\n  fromDataBuffer(buffer, offset) {\n    let _offset = this._fromDataBuffer(buffer, offset);\n    this.challenge = new ProvisioningChallenge_1.ProvisioningChallenge();\n    _offset = this.challenge.fromBuffer(buffer, _offset);\n    this.signing_address = this.signing_id;\n    this.signing_id = null;\n    return _offset;\n  }\n  toWalletDeeplinkUri() {\n    if (this.signature == null) throw new Error(\"Request must be signed before it can be used as a deep link\");\n    throw new Error(\"Cannot create deeplink from provisioning request\");\n  }\n  static fromWalletDeeplinkUri(uri) {\n    throw new Error(\"Cannot create provisioning request from deeplink\");\n  }\n}\nexports.ProvisioningRequest = ProvisioningRequest;","map":{"version":3,"names":["Object","defineProperty","exports","value","ProvisioningRequest","createHash","require","__1","vdxf_1","Request_1","ProvisioningChallenge_1","Request","constructor","request","arguments","length","undefined","signing_address","challenge","ProvisioningChallenge","system_id","signing_id","signature","LOGIN_CONSENT_PROVISIONING_REQUEST_VDXF_KEY","vdxfid","toJson","vdxfkey","getChallengeHash","update","VERUS_DATA_SIGNATURE_PREFIX","toSha256","digest","dataByteLength","_dataByteLength","toDataBuffer","buffer","_toDataBuffer","fromDataBuffer","offset","_offset","_fromDataBuffer","fromBuffer","toWalletDeeplinkUri","Error","fromWalletDeeplinkUri","uri"],"sources":["/Users/oddfl3x/Code/varB/vARRRBridgeWebsite-main/node_modules/verus-typescript-primitives/dist/vdxf/classes/provisioning/ProvisioningRequest.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProvisioningRequest = void 0;\nconst createHash = require(\"create-hash\");\nconst __1 = require(\"../../\");\nconst vdxf_1 = require(\"../../../constants/vdxf\");\nconst Request_1 = require(\"../Request\");\nconst ProvisioningChallenge_1 = require(\"./ProvisioningChallenge\");\nclass ProvisioningRequest extends Request_1.Request {\n    constructor(request = {\n        signing_address: \"\",\n        challenge: new ProvisioningChallenge_1.ProvisioningChallenge(),\n    }) {\n        super({\n            system_id: null,\n            signing_id: null,\n            challenge: request.challenge,\n            signature: request.signature,\n        }, __1.LOGIN_CONSENT_PROVISIONING_REQUEST_VDXF_KEY.vdxfid);\n        this.challenge = new ProvisioningChallenge_1.ProvisioningChallenge(request.challenge);\n        this.signing_address = request.signing_address;\n    }\n    toJson() {\n        return {\n            vdxfkey: this.vdxfkey,\n            system_id: null,\n            signing_address: this.signing_address,\n            signing_id: null,\n            signature: this.signature ? this.signature.toJson() : this.signature,\n            challenge: this.challenge.toJson(),\n        };\n    }\n    getChallengeHash() {\n        return createHash(\"sha256\")\n            .update(vdxf_1.VERUS_DATA_SIGNATURE_PREFIX)\n            .update(this.challenge.toSha256())\n            .digest();\n    }\n    dataByteLength() {\n        const length = this._dataByteLength(this.signing_address);\n        return length;\n    }\n    toDataBuffer() {\n        const buffer = this._toDataBuffer(this.signing_address);\n        return buffer;\n    }\n    fromDataBuffer(buffer, offset) {\n        let _offset = this._fromDataBuffer(buffer, offset);\n        this.challenge = new ProvisioningChallenge_1.ProvisioningChallenge();\n        _offset = this.challenge.fromBuffer(buffer, _offset);\n        this.signing_address = this.signing_id;\n        this.signing_id = null;\n        return _offset;\n    }\n    toWalletDeeplinkUri() {\n        if (this.signature == null)\n            throw new Error(\"Request must be signed before it can be used as a deep link\");\n        throw new Error(\"Cannot create deeplink from provisioning request\");\n    }\n    static fromWalletDeeplinkUri(uri) {\n        throw new Error(\"Cannot create provisioning request from deeplink\");\n    }\n}\nexports.ProvisioningRequest = ProvisioningRequest;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}