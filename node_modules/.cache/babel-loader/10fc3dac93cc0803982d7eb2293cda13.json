{"ast":null,"code":"// OP_RETURN {data}\nvar bscript = require('../script');\nvar types = require('../types');\nvar typeforce = require('typeforce');\nvar OPS = require('bitcoin-ops');\nfunction check(script) {\n  var buffer = bscript.compile(script);\n  return buffer.length > 1 && buffer[0] === OPS.OP_RETURN;\n}\ncheck.toJSON = function () {\n  return 'null data output';\n};\nfunction encode(data) {\n  // Allow arrays types since decompile returns an array too\n  typeforce(typeforce.oneOf(types.Buffer, types.Array), data);\n  return bscript.compile([OPS.OP_RETURN].concat(data));\n}\nfunction decode(buffer) {\n  typeforce(check, buffer);\n  var chunks = bscript.decompile(buffer);\n  chunks.shift();\n  return chunks.length === 1 ? chunks[0] : chunks;\n}\nmodule.exports = {\n  output: {\n    check: check,\n    decode: decode,\n    encode: encode\n  }\n};","map":{"version":3,"names":["bscript","require","types","typeforce","OPS","check","script","buffer","compile","length","OP_RETURN","toJSON","encode","data","oneOf","Buffer","Array","concat","decode","chunks","decompile","shift","module","exports","output"],"sources":["/Users/oddfl3x/Code/varB/NATIBridgeWebsite-main/node_modules/@bitgo/utxo-lib/dist/src/templates/nulldata.js"],"sourcesContent":["// OP_RETURN {data}\nvar bscript = require('../script');\nvar types = require('../types');\nvar typeforce = require('typeforce');\nvar OPS = require('bitcoin-ops');\nfunction check(script) {\n    var buffer = bscript.compile(script);\n    return buffer.length > 1 &&\n        buffer[0] === OPS.OP_RETURN;\n}\ncheck.toJSON = function () { return 'null data output'; };\nfunction encode(data) {\n    // Allow arrays types since decompile returns an array too\n    typeforce(typeforce.oneOf(types.Buffer, types.Array), data);\n    return bscript.compile([OPS.OP_RETURN].concat(data));\n}\nfunction decode(buffer) {\n    typeforce(check, buffer);\n    var chunks = bscript.decompile(buffer);\n    chunks.shift();\n    return chunks.length === 1 ? chunks[0] : chunks;\n}\nmodule.exports = {\n    output: {\n        check: check,\n        decode: decode,\n        encode: encode\n    }\n};\n"],"mappings":"AAAA;AACA,IAAIA,OAAO,GAAGC,OAAO,CAAC,WAAW,CAAC;AAClC,IAAIC,KAAK,GAAGD,OAAO,CAAC,UAAU,CAAC;AAC/B,IAAIE,SAAS,GAAGF,OAAO,CAAC,WAAW,CAAC;AACpC,IAAIG,GAAG,GAAGH,OAAO,CAAC,aAAa,CAAC;AAChC,SAASI,KAAKA,CAACC,MAAM,EAAE;EACnB,IAAIC,MAAM,GAAGP,OAAO,CAACQ,OAAO,CAACF,MAAM,CAAC;EACpC,OAAOC,MAAM,CAACE,MAAM,GAAG,CAAC,IACpBF,MAAM,CAAC,CAAC,CAAC,KAAKH,GAAG,CAACM,SAAS;AACnC;AACAL,KAAK,CAACM,MAAM,GAAG,YAAY;EAAE,OAAO,kBAAkB;AAAE,CAAC;AACzD,SAASC,MAAMA,CAACC,IAAI,EAAE;EAClB;EACAV,SAAS,CAACA,SAAS,CAACW,KAAK,CAACZ,KAAK,CAACa,MAAM,EAAEb,KAAK,CAACc,KAAK,CAAC,EAAEH,IAAI,CAAC;EAC3D,OAAOb,OAAO,CAACQ,OAAO,CAAC,CAACJ,GAAG,CAACM,SAAS,CAAC,CAACO,MAAM,CAACJ,IAAI,CAAC,CAAC;AACxD;AACA,SAASK,MAAMA,CAACX,MAAM,EAAE;EACpBJ,SAAS,CAACE,KAAK,EAAEE,MAAM,CAAC;EACxB,IAAIY,MAAM,GAAGnB,OAAO,CAACoB,SAAS,CAACb,MAAM,CAAC;EACtCY,MAAM,CAACE,KAAK,CAAC,CAAC;EACd,OAAOF,MAAM,CAACV,MAAM,KAAK,CAAC,GAAGU,MAAM,CAAC,CAAC,CAAC,GAAGA,MAAM;AACnD;AACAG,MAAM,CAACC,OAAO,GAAG;EACbC,MAAM,EAAE;IACJnB,KAAK,EAAEA,KAAK;IACZa,MAAM,EAAEA,MAAM;IACdN,MAAM,EAAEA;EACZ;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script"}