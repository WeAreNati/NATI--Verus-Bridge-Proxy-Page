{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n// Signed varints\nconst bn_js_1 = require(\"bn.js\");\nconst writeVarInt = number => {\n  let tmp = [];\n  let len = 0;\n  while (true) {\n    tmp[len] = number.and(new bn_js_1.BN('7f', 16)).or(new bn_js_1.BN(len ? '80' : '00', 'hex')).toBuffer()[0];\n    if (number.lte(new bn_js_1.BN('7f', 16))) break;\n    number = number.shrn(7).sub(new bn_js_1.BN(1, 10));\n    len++;\n  }\n  tmp = tmp.reverse();\n  return Buffer.from(tmp);\n};\nconst readVarInt = (data, offset) => {\n  let n = new bn_js_1.BN(0, 10);\n  let pos = offset;\n  while (true) {\n    let chData = data.readUInt8(pos); // single char\n    pos++;\n    n = n.shln(7).or(new bn_js_1.BN(chData & 0x7f));\n    if (chData & 0x80) n = n.add(new bn_js_1.BN(1, 10));else return {\n      value: n,\n      length: pos - offset\n    };\n  }\n};\nconst encodingLength = number => {\n  return writeVarInt(number).length;\n};\nfunction encode(number, buffer, offset) {\n  if (!buffer) buffer = Buffer.alloc(encodingLength(number));\n  if (!Buffer.isBuffer(buffer)) throw new TypeError('buffer must be a Buffer instance');\n  if (!offset) offset = 0;\n  const varintBuf = writeVarInt(number);\n  if (buffer.length < offset + varintBuf.length) {\n    throw new Error('Cannot write slice out of bounds');\n  }\n  const bytes = varintBuf.copy(buffer, offset);\n  return {\n    buffer,\n    bytes\n  };\n}\nfunction decode(buffer, offset) {\n  if (!Buffer.isBuffer(buffer)) throw new TypeError('buffer must be a Buffer instance');\n  if (!offset) offset = 0;\n  const {\n    value,\n    length\n  } = readVarInt(buffer, offset);\n  return {\n    decoded: value,\n    bytes: length\n  };\n}\nexports.default = {\n  encode,\n  decode,\n  encodingLength\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","bn_js_1","require","writeVarInt","number","tmp","len","and","BN","or","toBuffer","lte","shrn","sub","reverse","Buffer","from","readVarInt","data","offset","n","pos","chData","readUInt8","shln","add","length","encodingLength","encode","buffer","alloc","isBuffer","TypeError","varintBuf","Error","bytes","copy","decode","decoded","default"],"sources":["/Users/oddfl3x/Code/varB/NATI<>Verus Bridge Proxy Page/node_modules/verus-typescript-primitives/dist/utils/varint.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Signed varints\nconst bn_js_1 = require(\"bn.js\");\nconst writeVarInt = (number) => {\n    let tmp = [];\n    let len = 0;\n    while (true) {\n        tmp[len] = (number.and(new bn_js_1.BN('7f', 16))).or(new bn_js_1.BN(len ? '80' : '00', 'hex')).toBuffer()[0];\n        if (number.lte(new bn_js_1.BN('7f', 16)))\n            break;\n        number = number.shrn(7).sub(new bn_js_1.BN(1, 10));\n        len++;\n    }\n    tmp = tmp.reverse();\n    return Buffer.from(tmp);\n};\nconst readVarInt = (data, offset) => {\n    let n = new bn_js_1.BN(0, 10);\n    let pos = offset;\n    while (true) {\n        let chData = data.readUInt8(pos); // single char\n        pos++;\n        n = n.shln(7).or(new bn_js_1.BN(chData & 0x7f));\n        if (chData & 0x80)\n            n = n.add(new bn_js_1.BN(1, 10));\n        else\n            return { value: n, length: pos - offset };\n    }\n};\nconst encodingLength = (number) => {\n    return writeVarInt(number).length;\n};\nfunction encode(number, buffer, offset) {\n    if (!buffer)\n        buffer = Buffer.alloc(encodingLength(number));\n    if (!Buffer.isBuffer(buffer))\n        throw new TypeError('buffer must be a Buffer instance');\n    if (!offset)\n        offset = 0;\n    const varintBuf = writeVarInt(number);\n    if (buffer.length < offset + varintBuf.length) {\n        throw new Error('Cannot write slice out of bounds');\n    }\n    const bytes = varintBuf.copy(buffer, offset);\n    return { buffer, bytes };\n}\nfunction decode(buffer, offset) {\n    if (!Buffer.isBuffer(buffer))\n        throw new TypeError('buffer must be a Buffer instance');\n    if (!offset)\n        offset = 0;\n    const { value, length } = readVarInt(buffer, offset);\n    return { decoded: value, bytes: length };\n}\nexports.default = {\n    encode,\n    decode,\n    encodingLength\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}