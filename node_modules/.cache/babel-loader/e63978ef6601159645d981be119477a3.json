{"ast":null,"code":"\"use strict\";\n\n// The MIT License (MIT)\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.decode = exports.encode = exports.encodingLength = void 0;\n// Copyright (c) 2016 Daniel Cousens\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\nconst ops_1 = require(\"./ops\");\nfunction encodingLength(i) {\n  return i < ops_1.OPS.OP_PUSHDATA1 ? 1 : i <= 0xff ? 2 : i <= 0xffff ? 3 : 5;\n}\nexports.encodingLength = encodingLength;\nfunction encode(buffer, number, offset) {\n  var size = encodingLength(number);\n  // ~6 bit\n  if (size === 1) {\n    buffer.writeUInt8(number, offset);\n    // 8 bit\n  } else if (size === 2) {\n    buffer.writeUInt8(ops_1.OPS.OP_PUSHDATA1, offset);\n    buffer.writeUInt8(number, offset + 1);\n    // 16 bit\n  } else if (size === 3) {\n    buffer.writeUInt8(ops_1.OPS.OP_PUSHDATA2, offset);\n    buffer.writeUInt16LE(number, offset + 1);\n    // 32 bit\n  } else {\n    buffer.writeUInt8(ops_1.OPS.OP_PUSHDATA4, offset);\n    buffer.writeUInt32LE(number, offset + 1);\n  }\n  return size;\n}\nexports.encode = encode;\nfunction decode(buffer, offset) {\n  var opcode = buffer.readUInt8(offset);\n  var number, size;\n  // ~6 bit\n  if (opcode < ops_1.OPS.OP_PUSHDATA1) {\n    number = opcode;\n    size = 1;\n    // 8 bit\n  } else if (opcode === ops_1.OPS.OP_PUSHDATA1) {\n    if (offset + 2 > buffer.length) return null;\n    number = buffer.readUInt8(offset + 1);\n    size = 2;\n    // 16 bit\n  } else if (opcode === ops_1.OPS.OP_PUSHDATA2) {\n    if (offset + 3 > buffer.length) return null;\n    number = buffer.readUInt16LE(offset + 1);\n    size = 3;\n    // 32 bit\n  } else {\n    if (offset + 5 > buffer.length) return null;\n    if (opcode !== ops_1.OPS.OP_PUSHDATA4) throw new Error('Unexpected opcode');\n    number = buffer.readUInt32LE(offset + 1);\n    size = 5;\n  }\n  return {\n    opcode: opcode,\n    number: number,\n    size: size\n  };\n}\nexports.decode = decode;","map":{"version":3,"names":["Object","defineProperty","exports","value","decode","encode","encodingLength","ops_1","require","i","OPS","OP_PUSHDATA1","buffer","number","offset","size","writeUInt8","OP_PUSHDATA2","writeUInt16LE","OP_PUSHDATA4","writeUInt32LE","opcode","readUInt8","length","readUInt16LE","Error","readUInt32LE"],"sources":["/Users/oddfl3x/Code/varB/vARRRBridgeWebsite-main/node_modules/verus-typescript-primitives/dist/utils/pushdata.js"],"sourcesContent":["\"use strict\";\n// The MIT License (MIT)\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decode = exports.encode = exports.encodingLength = void 0;\n// Copyright (c) 2016 Daniel Cousens\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\nconst ops_1 = require(\"./ops\");\nfunction encodingLength(i) {\n    return i < ops_1.OPS.OP_PUSHDATA1 ? 1\n        : i <= 0xff ? 2\n            : i <= 0xffff ? 3\n                : 5;\n}\nexports.encodingLength = encodingLength;\nfunction encode(buffer, number, offset) {\n    var size = encodingLength(number);\n    // ~6 bit\n    if (size === 1) {\n        buffer.writeUInt8(number, offset);\n        // 8 bit\n    }\n    else if (size === 2) {\n        buffer.writeUInt8(ops_1.OPS.OP_PUSHDATA1, offset);\n        buffer.writeUInt8(number, offset + 1);\n        // 16 bit\n    }\n    else if (size === 3) {\n        buffer.writeUInt8(ops_1.OPS.OP_PUSHDATA2, offset);\n        buffer.writeUInt16LE(number, offset + 1);\n        // 32 bit\n    }\n    else {\n        buffer.writeUInt8(ops_1.OPS.OP_PUSHDATA4, offset);\n        buffer.writeUInt32LE(number, offset + 1);\n    }\n    return size;\n}\nexports.encode = encode;\nfunction decode(buffer, offset) {\n    var opcode = buffer.readUInt8(offset);\n    var number, size;\n    // ~6 bit\n    if (opcode < ops_1.OPS.OP_PUSHDATA1) {\n        number = opcode;\n        size = 1;\n        // 8 bit\n    }\n    else if (opcode === ops_1.OPS.OP_PUSHDATA1) {\n        if (offset + 2 > buffer.length)\n            return null;\n        number = buffer.readUInt8(offset + 1);\n        size = 2;\n        // 16 bit\n    }\n    else if (opcode === ops_1.OPS.OP_PUSHDATA2) {\n        if (offset + 3 > buffer.length)\n            return null;\n        number = buffer.readUInt16LE(offset + 1);\n        size = 3;\n        // 32 bit\n    }\n    else {\n        if (offset + 5 > buffer.length)\n            return null;\n        if (opcode !== ops_1.OPS.OP_PUSHDATA4)\n            throw new Error('Unexpected opcode');\n        number = buffer.readUInt32LE(offset + 1);\n        size = 5;\n    }\n    return {\n        opcode: opcode,\n        number: number,\n        size: size\n    };\n}\nexports.decode = decode;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}