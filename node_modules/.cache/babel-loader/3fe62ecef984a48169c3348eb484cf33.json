{"ast":null,"code":"var createHash = require('create-hash');\nvar crypto = require('crypto');\nfunction ripemd160(buffer) {\n  var hash = 'rmd160';\n  var supportedHashes = crypto.getHashes();\n  // some environments (electron) only support the long alias\n  if (supportedHashes.indexOf(hash) === -1 && supportedHashes.indexOf('ripemd160') !== -1) {\n    hash = 'ripemd160';\n  }\n  return createHash(hash).update(buffer).digest();\n}\nfunction sha1(buffer) {\n  return createHash('sha1').update(buffer).digest();\n}\nfunction sha256(buffer) {\n  return createHash('sha256').update(buffer).digest();\n}\nfunction hash160(buffer) {\n  return ripemd160(sha256(buffer));\n}\nfunction hash256(buffer) {\n  return sha256(sha256(buffer));\n}\nmodule.exports = {\n  hash160: hash160,\n  hash256: hash256,\n  ripemd160: ripemd160,\n  sha1: sha1,\n  sha256: sha256\n};","map":{"version":3,"names":["createHash","require","crypto","ripemd160","buffer","hash","supportedHashes","getHashes","indexOf","update","digest","sha1","sha256","hash160","hash256","module","exports"],"sources":["/Users/oddfl3x/Code/varB/NATIBridgeWebsite-main/node_modules/@bitgo/utxo-lib/dist/src/crypto.js"],"sourcesContent":["var createHash = require('create-hash');\nvar crypto = require('crypto');\nfunction ripemd160(buffer) {\n    var hash = 'rmd160';\n    var supportedHashes = crypto.getHashes();\n    // some environments (electron) only support the long alias\n    if (supportedHashes.indexOf(hash) === -1 && supportedHashes.indexOf('ripemd160') !== -1) {\n        hash = 'ripemd160';\n    }\n    return createHash(hash).update(buffer).digest();\n}\nfunction sha1(buffer) {\n    return createHash('sha1').update(buffer).digest();\n}\nfunction sha256(buffer) {\n    return createHash('sha256').update(buffer).digest();\n}\nfunction hash160(buffer) {\n    return ripemd160(sha256(buffer));\n}\nfunction hash256(buffer) {\n    return sha256(sha256(buffer));\n}\nmodule.exports = {\n    hash160: hash160,\n    hash256: hash256,\n    ripemd160: ripemd160,\n    sha1: sha1,\n    sha256: sha256\n};\n"],"mappings":"AAAA,IAAIA,UAAU,GAAGC,OAAO,CAAC,aAAa,CAAC;AACvC,IAAIC,MAAM,GAAGD,OAAO,CAAC,QAAQ,CAAC;AAC9B,SAASE,SAASA,CAACC,MAAM,EAAE;EACvB,IAAIC,IAAI,GAAG,QAAQ;EACnB,IAAIC,eAAe,GAAGJ,MAAM,CAACK,SAAS,CAAC,CAAC;EACxC;EACA,IAAID,eAAe,CAACE,OAAO,CAACH,IAAI,CAAC,KAAK,CAAC,CAAC,IAAIC,eAAe,CAACE,OAAO,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,EAAE;IACrFH,IAAI,GAAG,WAAW;EACtB;EACA,OAAOL,UAAU,CAACK,IAAI,CAAC,CAACI,MAAM,CAACL,MAAM,CAAC,CAACM,MAAM,CAAC,CAAC;AACnD;AACA,SAASC,IAAIA,CAACP,MAAM,EAAE;EAClB,OAAOJ,UAAU,CAAC,MAAM,CAAC,CAACS,MAAM,CAACL,MAAM,CAAC,CAACM,MAAM,CAAC,CAAC;AACrD;AACA,SAASE,MAAMA,CAACR,MAAM,EAAE;EACpB,OAAOJ,UAAU,CAAC,QAAQ,CAAC,CAACS,MAAM,CAACL,MAAM,CAAC,CAACM,MAAM,CAAC,CAAC;AACvD;AACA,SAASG,OAAOA,CAACT,MAAM,EAAE;EACrB,OAAOD,SAAS,CAACS,MAAM,CAACR,MAAM,CAAC,CAAC;AACpC;AACA,SAASU,OAAOA,CAACV,MAAM,EAAE;EACrB,OAAOQ,MAAM,CAACA,MAAM,CAACR,MAAM,CAAC,CAAC;AACjC;AACAW,MAAM,CAACC,OAAO,GAAG;EACbH,OAAO,EAAEA,OAAO;EAChBC,OAAO,EAAEA,OAAO;EAChBX,SAAS,EAAEA,SAAS;EACpBQ,IAAI,EAAEA,IAAI;EACVC,MAAM,EAAEA;AACZ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script"}