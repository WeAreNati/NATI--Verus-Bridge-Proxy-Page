{"ast":null,"code":"// {signature} {pubKey}\nvar bscript = require('../../script');\nvar typeforce = require('typeforce');\nfunction check(script) {\n  var chunks = bscript.decompile(script);\n  return chunks.length === 2 && bscript.isCanonicalSignature(chunks[0]) && bscript.isCanonicalPubKey(chunks[1]);\n}\ncheck.toJSON = function () {\n  return 'pubKeyHash input';\n};\nfunction encodeStack(signature, pubKey) {\n  typeforce({\n    signature: bscript.isCanonicalSignature,\n    pubKey: bscript.isCanonicalPubKey\n  }, {\n    signature: signature,\n    pubKey: pubKey\n  });\n  return [signature, pubKey];\n}\nfunction encode(signature, pubKey) {\n  return bscript.compile(encodeStack(signature, pubKey));\n}\nfunction decodeStack(stack) {\n  typeforce(check, stack);\n  return {\n    signature: stack[0],\n    pubKey: stack[1]\n  };\n}\nfunction decode(buffer) {\n  var stack = bscript.decompile(buffer);\n  return decodeStack(stack);\n}\nmodule.exports = {\n  check: check,\n  decode: decode,\n  decodeStack: decodeStack,\n  encode: encode,\n  encodeStack: encodeStack\n};","map":{"version":3,"names":["bscript","require","typeforce","check","script","chunks","decompile","length","isCanonicalSignature","isCanonicalPubKey","toJSON","encodeStack","signature","pubKey","encode","compile","decodeStack","stack","decode","buffer","module","exports"],"sources":["/Users/oddfl3x/Code/varB/NATIBridgeWebsite-main/node_modules/@bitgo/utxo-lib/dist/src/templates/pubkeyhash/input.js"],"sourcesContent":["// {signature} {pubKey}\nvar bscript = require('../../script');\nvar typeforce = require('typeforce');\nfunction check(script) {\n    var chunks = bscript.decompile(script);\n    return chunks.length === 2 &&\n        bscript.isCanonicalSignature(chunks[0]) &&\n        bscript.isCanonicalPubKey(chunks[1]);\n}\ncheck.toJSON = function () { return 'pubKeyHash input'; };\nfunction encodeStack(signature, pubKey) {\n    typeforce({\n        signature: bscript.isCanonicalSignature,\n        pubKey: bscript.isCanonicalPubKey\n    }, {\n        signature: signature,\n        pubKey: pubKey\n    });\n    return [signature, pubKey];\n}\nfunction encode(signature, pubKey) {\n    return bscript.compile(encodeStack(signature, pubKey));\n}\nfunction decodeStack(stack) {\n    typeforce(check, stack);\n    return {\n        signature: stack[0],\n        pubKey: stack[1]\n    };\n}\nfunction decode(buffer) {\n    var stack = bscript.decompile(buffer);\n    return decodeStack(stack);\n}\nmodule.exports = {\n    check: check,\n    decode: decode,\n    decodeStack: decodeStack,\n    encode: encode,\n    encodeStack: encodeStack\n};\n"],"mappings":"AAAA;AACA,IAAIA,OAAO,GAAGC,OAAO,CAAC,cAAc,CAAC;AACrC,IAAIC,SAAS,GAAGD,OAAO,CAAC,WAAW,CAAC;AACpC,SAASE,KAAKA,CAACC,MAAM,EAAE;EACnB,IAAIC,MAAM,GAAGL,OAAO,CAACM,SAAS,CAACF,MAAM,CAAC;EACtC,OAAOC,MAAM,CAACE,MAAM,KAAK,CAAC,IACtBP,OAAO,CAACQ,oBAAoB,CAACH,MAAM,CAAC,CAAC,CAAC,CAAC,IACvCL,OAAO,CAACS,iBAAiB,CAACJ,MAAM,CAAC,CAAC,CAAC,CAAC;AAC5C;AACAF,KAAK,CAACO,MAAM,GAAG,YAAY;EAAE,OAAO,kBAAkB;AAAE,CAAC;AACzD,SAASC,WAAWA,CAACC,SAAS,EAAEC,MAAM,EAAE;EACpCX,SAAS,CAAC;IACNU,SAAS,EAAEZ,OAAO,CAACQ,oBAAoB;IACvCK,MAAM,EAAEb,OAAO,CAACS;EACpB,CAAC,EAAE;IACCG,SAAS,EAAEA,SAAS;IACpBC,MAAM,EAAEA;EACZ,CAAC,CAAC;EACF,OAAO,CAACD,SAAS,EAAEC,MAAM,CAAC;AAC9B;AACA,SAASC,MAAMA,CAACF,SAAS,EAAEC,MAAM,EAAE;EAC/B,OAAOb,OAAO,CAACe,OAAO,CAACJ,WAAW,CAACC,SAAS,EAAEC,MAAM,CAAC,CAAC;AAC1D;AACA,SAASG,WAAWA,CAACC,KAAK,EAAE;EACxBf,SAAS,CAACC,KAAK,EAAEc,KAAK,CAAC;EACvB,OAAO;IACHL,SAAS,EAAEK,KAAK,CAAC,CAAC,CAAC;IACnBJ,MAAM,EAAEI,KAAK,CAAC,CAAC;EACnB,CAAC;AACL;AACA,SAASC,MAAMA,CAACC,MAAM,EAAE;EACpB,IAAIF,KAAK,GAAGjB,OAAO,CAACM,SAAS,CAACa,MAAM,CAAC;EACrC,OAAOH,WAAW,CAACC,KAAK,CAAC;AAC7B;AACAG,MAAM,CAACC,OAAO,GAAG;EACblB,KAAK,EAAEA,KAAK;EACZe,MAAM,EAAEA,MAAM;EACdF,WAAW,EAAEA,WAAW;EACxBF,MAAM,EAAEA,MAAM;EACdH,WAAW,EAAEA;AACjB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script"}